var KyeeApp = function(){
	
	var def = {
		
		appName : null,
		rounterName : null,
		homeUrl : null,
		requireList : [],
		hasSplashscreenVal : true,
		onMenubuttonAction : null,
		onBackbuttonAction : null,
		onFinashAction : null,
		useCacheCfg : null,
		
		name : function(name){
			this.appName = name;
			return this;
		},
		
		rounter : function(rounter){
			this.rounterName = rounter;
			return this;
		},
		
		home : function(home){
			this.homeUrl = home;
			return this;
		},

		require : function(require){
			this.requireList = require;
			return this;
		},
		
		hasSplashscreen : function(has){
			this.hasSplashscreenVal = has;
			return this;
		},
		
		onMenubutton : function(action){
			this.onMenubuttonAction = action;
			return this;
		},
		
		onBackbutton : function(onBackbutton){
			this.onBackbuttonAction = onBackbutton;
			return this;
		},
		
		onFinash : function(onFinash){
			this.onFinashAction = onFinash;
			return this;
		},
		
		useCache : function(cfg){
			this.useCacheCfg = cfg;
			return this;
		},
		
		build : function(){
			
			var me = this;

			//导入系统级别的包
			me.requireList.push("kyee.framework.base.env");
			me.requireList.push("kyee.framework.service.utils.cache.template_cache");

			angular
				.module(me.appName, me.requireList)
				.config(["$stateProvider", "$urlRouterProvider", "$ionicConfigProvider", this.rounterName, function($stateProvider, $urlRouterProvider, $ionicConfigProvider, RouterConfigProvider){

					//统一指定 tab 的样式
					$ionicConfigProvider.tabs.position("bottom");
					$ionicConfigProvider.tabs.style("standard");

					//统一取消导航返回按钮的文字
					$ionicConfigProvider.backButton.text("");
					$ionicConfigProvider.backButton.previousTitleText(false);

					//统一指定导航返回按钮的图标
					$ionicConfigProvider.backButton.icon("ion-android-arrow-back");

					//统一修改过渡效果为 ios 样式（较为平滑）
					$ionicConfigProvider.views.transition("ios");

					//最大缓存的视图数（过小需要频繁的重新编译视图，过大可导致整体试图切换缓慢）
					$ionicConfigProvider.views.maxCache(6);

					//缓存前进的视图
					//此设置将会导致控制器不会二次实例化
					//$ionicConfigProvider.views.forwardCache(true);

					//最大的模板预取设置
					$ionicConfigProvider.templates.maxPrefetch(15);

					//设置路由
					var tables = RouterConfigProvider.getTables();
					for(var i in tables){

						var table = tables[i];

						for(var state in table){

							$stateProvider.state(state, table[state]);
						}
					}

					$urlRouterProvider.otherwise(me.homeUrl);
				}])
				.run(["$rootScope", "$ionicPlatform", "KyeeTemplateCacheService", "KyeeUtilsService", "KyeeEnvSetter", "$http", function($rootScope, $ionicPlatform, KyeeTemplateCacheService, KyeeUtilsService, KyeeEnvSetter, $http) {

					//初始化环境变量
					KyeeEnvSetter.set($rootScope);
					
					//控制主页标签的展示与隐藏
					$rootScope.$on('$ionicView.beforeEnter', function(){

						setTimeout(function(){
							var url = location.href;

							//如果是默认页面、主页或者显示指定 MAIN_TAB 的页面均显示 tabs
							if(url.indexOf("/home") != -1 || url.indexOf("MAIN_TAB") != -1){
								document.getElementById("tabbar").style.display = "block";
							}else{
								document.getElementById("tabbar").style.display = "none";
							}
						},300);
					});

					//发送广播
					$rootScope.call = function(cfg){
						$rootScope.$broadcast(cfg.name, cfg.params)
					}
					
					//侦听广播
					$rootScope.listen = function(cfg){
						$rootScope.$on(cfg.on, cfg.action);
					}
					
					$ionicPlatform.ready(function() {
						
						if (me.hasSplashscreen && navigator.splashscreen != undefined) {
							navigator.splashscreen.hide();
						}
						
						if (me.onFinashAction != undefined) {
							me.onFinashAction();
						}
						
						//使用 cache
						if (me.useCacheCfg != null && me.useCacheCfg.templates != undefined && me.useCacheCfg.templates.length > 0) {
							KyeeTemplateCacheService.setTemplates(me.useCacheCfg.templates).build();
						}
					});
					
					if (me.onMenubuttonAction != null) {
						
						$ionicPlatform.on("menubutton", me.onMenubuttonAction);
					}
					
					if (me.onBackbuttonAction != null) {
						
						$ionicPlatform.registerBackButtonAction(me.onBackbuttonAction, 100);
					}
				}]);
		}
	};
	
	return def;
};
/**
 * 系统助手类
 *
 * @type {{getSimpleService: Function}}
 */
var KyeeAppHelper = {

    /**
     * 获取简单类型服务
     *
     * @param group
     * @param name
     * @returns {*|$value|s|{add, remove, toggle, contains, item}}
     */
    getSimpleService : function(group, name){

        return angular.injector([group]).get(name);
    }
};
var KyeeModule = function(){
	
	var def = {
		
		groupName : null,
		requireList : [],
		nameList : [],
		typeList : [],
		paramsList : [],
		actionList : [],
		
		group : function(name){
			this.groupName = name;
			return this;
		},
		
		require : function(require){
			this.requireList = require;
			return this;
		},
	
		name : function(name){
			this.nameList.push(name);
			return this;
		},
		
		type : function(name){
			this.typeList.push(name);
			return this;
		},
		
		params : function(params){
			this.paramsList.push(params);
			return this;
		},
		
		action : function(action){
			this.actionList.push(action);
			return this;
		},
		
		add : function(){
			
			//为前一个对象设置可选项
			//详见 setOptionalAttr() 备注
			this.setOptionalAttr();
			
			return this;
		},
		
		setOptionalAttr : function(){
			
			//如果本次添加的对象没有设置可选参数，则自动设置空值
			//注意：可选参数一定要进行设置，因为后面使用 pop 取值，这样才能保证各个属性之间的对应性
			if (this.paramsList.length == this.nameList.length - 1) {
				this.paramsList.push([]);
			}
		},
		
		build : function(){
			
			//为最后对象自动设置可选参数，详见 setOptionalAttr() 备注
			this.setOptionalAttr();

			var module = angular.module(this.groupName, this.requireList);

			while(this.nameList.length > 0){
				
				var name = this.nameList.pop();
				var type = this.typeList.pop();
				var action = this.actionList.pop();
				var params = this.paramsList.pop();
				
				//将 action 作为 params 的最后一个参数
				params.push(action);
				
				if(type == "controller"){
					
					module = module.controller(name, params);
				}else if (type == "service") {
					
					module = module.factory(name, params);
				}else if (type == "provider") {
					
					module = module.provider(name, params);
				}else if(type == "filter"){

					module = module.filter(name, params);
				}
			}
		}
	};
	
	return def;
};
new KyeeModule()
    .group("kyee.framework.base.env")
    .type("service")
    .name("KyeeEnvSetter")
    .params(["KyeeUtilsService"])
    .action(function(KyeeUtilsService){

        var def = {

            /**
             * 设置系统变量
             *
             * @param rootScope
             */
            set : function(rootScope){

                rootScope.KyeeEnv = {
                    innerSize : KyeeUtilsService.getInnerSize()
                };
            }
        };

        return def;
    })
    .build();
/**
 * 全局配置文件
 */
angular.module("kyee.framework.config", [])
	.factory("KyeeFrameworkConfig", [function() {
		
		var def = {
			
			/**
			 * 框架基础路径
			 * 必须添加最后的分隔符
			 */
			KYEE_FRAMEWORK_BASE_PATH : "resource/js_framework/kyee_framework/"
		};
		
		return def;
	}]);
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/26
 * 时间: 19:43
 * 创建原因：框架提供的相机服务类
 * 修改原因：修改判断undefined的方法
 * 修改用户：朱学亮
 * 修改时间：2015/5/9 15:56
 */
angular
    .module("kyee.framework.device.camera", [])
    .factory("KyeeCameraService",  function() {

        return {
            /**
             *
             * @param successCallback
             * @param errorCallback
             * @param options
             *      {
             *      quality 50: value,//Quality of the saved image, expressed as a range of 0-100, where 100 is typically full resolution with no loss from file compression. The default is 50
             *      destinationType:Camera.DestinationType.FILE_URI,
             *                       //Camera.DestinationType = {
             *                       //DATA_URL : 0,      // Return image as base64-encoded string
             *                       //FILE_URI : 1,      // default Return image file URI
             *                       //NATIVE_URI : 2     // Return image native URI (e.g., assets-library:// on iOS or content:// on Android)
             *                       //};
             *      sourceType:Camera.PictureSourceType.CAMERA,
             *                  //Camera.PictureSourceType = {
             *                  //    PHOTOLIBRARY : 0,
             *                  //    CAMERA : 1, // default
             *                  //    SAVEDPHOTOALBUM : 2
             *                  //};
             *
             *      targetWidth:900,//Width in pixels to scale image. Must be used with targetHeight
             *      targetHeight:900,//Height in pixels to scale image. Must be used with targetWidth
             *      encodingType:Camera.EncodingType.JPEG,
             *              //Camera.EncodingType = {
             *              //    JPEG : 0,// Return JPEG encoded image
             *              //    PNG : 1// Return PNG encoded image
             *              //  };
             *      mediaType:Camera.MediaType.PICTURE,//Set the type of media to select from. Only works when PictureSourceType is PHOTOLIBRARY or SAVEDPHOTOALBUM
             *               //Camera.MediaType = {
             *               //        PICTURE: 0,    // allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType
             *               //        VIDEO: 1,      // allow selection of video only, WILL ALWAYS RETURN FILE_URI
             *               //        ALLMEDIA : 2   // allow selection from all media types
             *               //};
             *      allowEdit:true,//Allow simple editing of image before selection. (Boolean)
             *      correctOrientation:true,//Rotate the image to correct for the orientation of the device during capture. (Boolean)
             *      saveToPhotoAlbum:true,//Save the image to the photo album on the device after capture. (Boolean)
             *      popoverOptions,   //IOS only
             *      cameraDirection:Camera.Direction.BACK// Choose the camera to use (front- or back-facing). The default is BACK
             *              //Camera.Direction = {
             *               //    BACK : 0,      // Use the back-facing camera
             *               //    FRONT : 1      // Use the front-facing camera
             *               //};
             *      }
             *
             */
            getPicture : function(successCallback, errorCallback, options) {

                if (typeof(navigator.camera) != "undefined") {

                    navigator.camera.getPicture(successCallback, errorCallback, options);
                }
            }
        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/26
 * 时间: 20:13
 * 创建原因：框架提供的设备信息服务
 * 修改原因：修改判断undefined的方法
 * 修改用户：朱学亮
 * 修改时间：2015/5/10
 */
angular
    .module("kyee.framework.device.deviceinfo", [])
    .factory("KyeeDeviceInfoService",  function() {

        return {

            /**
             *
             * @param success 回调成功时，会把设备信息作为参数传递
             *
             * device.cordova
             * device.model
             * device.platform  平台
             * device.uuid   UUID
             * device.version 系统版本，例如Android 2.3返回是2.3
             * @param error
             */
            getInfo:function(success, error) {

                if (typeof(device) != "undefined") {

                    device.getInfo(success, error);
                }
            }
        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 朱学亮
 * 日期: 2015/5/10
 * 时间: 14:13
 * 创建原因：框架提供的上传文件方法
 * 修改原因：
 * 修改用户：
 * 修改时间：
 */
angular
    .module("kyee.framework.file.upload", [])
    .factory("KyeeUploadFileService",  function() {

        return {
            /**
             * success: 成功回调函数
             * error:   失败回调函数
             * fileURL: 待上传的文件的URL
             * serverURL: 完整服务器路径
             * fileType: 待上传文件类型MimeType
             * params:  附加参数
             * A FileUploadResult object is passed to the success callback of the FileTransfer object's upload() method.
             * Properties:
             * bytesSent:
             * The number of bytes sent to the server as part of the upload. (long)
             * responseCode:
             * The HTTP response code returned by the server. (long)
             * response:
             * The HTTP response returned by the server. (DOMString)
             * headers:
             * The HTTP response headers by the server. (Object) Currently supported on iOS only.
             * IOS不支持的参数responseCode和bytesSent
             */
            uploadFile : function(success, error, fileURL, serverURL, fileType, params) {
                // 配置上传参数
                var options = new FileUploadOptions();
                options.fileKey = "file";
                options.mimeType = fileType;
                options.params = params;
                // options.fileName = fileURL.substr(fileURL.lastIndexOf('/') + 1);
                var imgUrl = fileURL.substr(fileURL.lastIndexOf('/') + 1);
                if (imgUrl.split('?').length > 1) {
                    options.fileName = imgUrl.split('?')[imgUrl.split('?').length-1]+'.'+imgUrl.split('?')[0].split('.')[imgUrl.split('?')[0].split('.').length-1];
                } else {
                    options.fileName = imgUrl;
                }

                // 配置上传函数
                var ft = new FileTransfer();
                ft.upload(fileURL, encodeURI(serverURL), success, error, options);
            }
        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/26
 * 时间: 20:13
 * 创建原因：框架提供的短信截取服务
 * 修改原因：
 * 修改时间：
 */
angular
    .module("kyee.framework.device.message", [])
    .factory("KyeeDeviceMsgService",  function() {

        return {

            /**
             *
             * @param success received message will returned to param
             * @param error
             */
            getMessage:function(success, error) {

                if (navigator.message != undefined) {

                    navigator.message.getMessage(success, error);
                }
            }
        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/27
 * 时间: 10:54
 * 创建原因：网络相关的服务
 * 修改原因：
 * 修改时间：
 */
angular
    .module("kyee.framework.device.network", [])
    .factory("KyeeNetworkService",  function() {

        return {
            /**
             *获取网络状态，实时监测网络连接
             *
             * @param success
             * @param error
             */
            getInfo:function(success, error) {

                if (navigator.connection != undefined) {

                    navigator.connection.getInfo(success, error);
                }
            },
            /**
             *获取网络连接状态
             *
             * @returns {boolean}
             */
            isNetConnected:function(){

                var isConnected = false;

                if (navigator.connection != undefined
                    && navigator.connection.type !== "none"
                    && navigator.connection.type !== "unknown") {

                    isConnected = true;
                }

                return isConnected;
            },
            /**
             *
             * 获取网络类型
             * @returns {string}
             *
             *  Connection.UNKNOWN
             *  Connection.ETHERNET
             *  Connection.WIFI
             *  Connection.CELL_2G
             *  Connection.CELL_3G
             *  Connection.CELL_4G
             *  Connection.CELL
             *  Connection.NONE
             */
            getNetType:function() {

                var netType = "none";

                if (navigator.connection != undefined) {

                    netType = navigator.connection.type;
                }

                return netType;
            }
        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/27
 * 时间: 10:54
 * 创建原因：电话相关的服务
 * 修改原因：
 * 修改时间：
 */
angular
    .module("kyee.framework.device.phone", [])
    .factory("KyeePhoneService",  function() {

        return {

            call:function(success, error, phoneNum) {

                if (navigator.callphone != undefined) {

                    navigator.callphone.call(success, error, phoneNum);
                }
            },
            callOnly:function(phoneNum) {

                this.call(function(){}, function(){}, phoneNum);
            }
        };
    });
/**
 * 日历组件
 */
angular.module("kyee.framework.directive.calendar", ["ngSanitize", "kyee.framework.config"])
	.directive("kyeeCalendarDirective", ["$compile", "KyeeFrameworkConfig", function($compile, KyeeFrameworkConfig) {

		var def = {
			scope: {
				"bind" : "&",
				"mark" : "=",
				"itemClick" : "&"
			},
			replace: true,
			restrict: "A",
			init : function(){

				var me = this;

				//设置 mark
				if(def.innerScope.mark != undefined) {
					KyeeCalendarBuilder.setMark(def.innerScope.mark);
				}

				//默认绘制日历
				def.element.html(KyeeCalendarBuilder.run());
				$compile(def.element.contents())(def.innerScope);

				/**
				 * 执行绑定方法
				 */
				def.innerScope.bind({
					params : def.methods.outer
				});

				for(var i in def.methods.inner){
					def.innerScope[i] = def.methods.inner[i];
				}
			},
			controller : ["$scope", function($scope){

				def.innerScope = $scope;
			}],
			link: function (scope, element, attrs) {

				def.element = element;
				def.attrs = attrs;

				def.init(element, attrs);
			},
			methods : {

				//外部方法
				outer : {

					/**
					 * 上一月
					 */
					prevMonth : function(){

						KyeeCalendarBuilder.prevMonth();

						def.element.html(KyeeCalendarBuilder.run());
						$compile(def.element.contents())(def.innerScope);
					},

					/**
					 * 下一月
					 */
					nextMonth : function(){

						KyeeCalendarBuilder.nextMonth();

						def.element.html(KyeeCalendarBuilder.run());
						$compile(def.element.contents())(def.innerScope);
					},

					/**
					 * 获取当前所选的年月
					 *
					 * @returns {*|{year, month}}
					 */
					getYearAndMonth : function(){

						return KyeeCalendarBuilder.getYearAndMonth();
					},

					/**
					 * 设置年月
					 *
					 * @param parms
					 */
					setYearAndMonth : function(parms){

						KyeeCalendarBuilder.setYearAndMonth(parms);

						def.element.html(KyeeCalendarBuilder.run());
						$compile(def.element.contents())(def.innerScope);
					},

					/**
					 * 跳转到本月
					 */
					today : function(){

						KyeeCalendarBuilder.today();

						def.element.html(KyeeCalendarBuilder.run());
						$compile(def.element.contents())(def.innerScope);
					}
				},

				//内部方法
				inner : {

					/**
					 * 单击日期时
					 *
					 * @param day
					 */
					dayClick : function(day){

						var date = KyeeCalendarBuilder.getYearAndMonth();
						def.innerScope.itemClick({
							params : {
								year : date.year,
								month : date.month,
								day : day
							}
						});
					}
				}
			}
		};

		return def;
	}]);
/**
 * 日历构建器
 *
 * @type {{config: {year: string, month: string, monthNames: string[], dayNames: string[]}, initialize: Function, setMark: Function, setDate: Function, getYearAndMonth: Function, setYearAndMonth: Function, nextMonth: Function, prevMonth: Function, getDaysInMonth: Function, today: Function, drawCalendar: Function, run: Function}}
 */
var KyeeCalendarBuilder = {

    config : {

        year : '年',
        month : '月',
        //月份列表
        monthNames : ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
        //星期列表
        dayNames : [ '一', '二', '三', '四', '五', '六', '日']
    },

    //初始化
    initialize : function() {

        var me = this;

        this.now = new Date;
        //设置今天的年月日
        this.setDate(this.value || this.now);
    },

    /**
     * 设置标志
     *
     * @param mark
     */
    setMark : function(mark){
        this.mark = mark;
    },

    //设置年月日
    setDate :function(now) {

        this.day = now.getDate();
        this.month = now.getMonth();
        this.year = now.getFullYear();
        this.value = now;
    },

    //获取当前年月日
    getYearAndMonth : function(){

        var me = this;
        return {
            year : me.year,
            month : me.month + 1
        }
    },

    setYearAndMonth : function(params){

        this.year = params.year;
        this.month = params.month - 1;
    },

    //下个月
    nextMonth : function() {

        if (this.month == 11) {
            this.month = 0;
            this.year = this.year + 1;
        } else{
            this.month = this.month + 1;
        }
    },

    //上个月
    prevMonth : function() {

        if (this.month == 0) {
            this.month = 11;
            this.year = this.year - 1;
        } else
            this.month = this.month - 1;
        this.drawCalendar()
    },

    //取某个月的总天数
    getDaysInMonth : function(month, year) {

        var days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        return month == 1 && year % 4 == 0 && (year % 100 != 0 || year % 400 == 0) ? 29 : days[month]
    },

    //定位到今天
    today : function() {

        this.now = new Date;
        this.setDate(this.now);
    },

    //绘制日历
    drawCalendar : function() {

        var me = this;

        var year = this.year;
        var month = this.month;
        var fullTextMonth = ((month + 1) + "").length < 2 ? ("0" + (month + 1)) : (month + 1);

        var calendar = [];
        calendar.push("<div class='fade'>");
        //设置按钮显示的日期
        calendar.push('<table class="calendar-month" cellspacing="0">');
        calendar.push('<tr>');
        //绘制星期栏
        for ( var i = 0; i < 7; i++){
            if(i==5 || i==6){
                calendar.push('<th class="weekday" style="color: red">'+ this.config.dayNames[i]+ '</th>');
            }else{
                calendar.push('<th class="weekday">'+ this.config.dayNames[i]+ '</th>');
            }
        }
        calendar.push('</tr>');
        calendar.push('<tr>');
        calendar.push('<td colspan="7"><div style="border-bottom:1px double #cccccc;"></div></td>');
        calendar.push('</tr>');
        //设置选中月
        var theMonth = new Date(year, month, 1);
        //选中月第一天是星期几(0,1,2,3,4,5,6)
        var weekOfFirstDay = theMonth.getDay();
        //周日放在最后
        var IndexOfWeek = weekOfFirstDay == 0 && theMonth ? 6 : --weekOfFirstDay;
        //选中月的总天数
        var days = this.getDaysInMonth(month, year);
        //上个月
        var lastMonth = month == 0 ? 11 : month - 1;
        //上个月对应的年
        var yearOfLastMonth = lastMonth == 11 ? year - 1 : year;
        //上个月的天数
        var daysOfLastMonth = this.getDaysInMonth(lastMonth, yearOfLastMonth);
        //下个月
        var nextMonth = month == 12 ? 0 : month + 1;
        //下个月对应的年
        var yearOfNextMonth = month == 12 ? year + 1 : year;
        //下个月的日期
        var dayOfNextMonth = 0;
        //日期
        var dayCode;
        //绘制日历主体
        for ( var j = 0; j < 42; j++) {
            if (j < IndexOfWeek) {
                //上个月的日期
                dayCode = daysOfLastMonth - IndexOfWeek + j + 1;
                calendar.push('<td class="calendar-other" date="'+ yearOfLastMonth+ ","+ daysOfLastMonth+ ","+ dayCode+ ","+j % 7+  '"><span>'+ dayCode+ "</span></td>");
            } else if (j >= IndexOfWeek + days) {
                //下个月的日期
                dayOfNextMonth = dayOfNextMonth + 1;
                calendar.push('<td class="calendar-other" date="'+ yearOfNextMonth+ ","+ nextMonth+ ","+dayOfNextMonth+","+j % 7+  '"><span>'+ dayOfNextMonth+ "</span></td>");
            } else {
                dayCode = j - IndexOfWeek + 1;

                var fullTextDay = (dayCode + "").length < 2 ? ("0" + dayCode) : dayCode;
                var curr = year + "/" + fullTextMonth + "/" + fullTextDay;

                //高亮显示当日
                if(this.now.getFullYear()==year && this.now.getMonth() == month && this.now.getDate() == dayCode){
                    calendar.push('<td style="vertical-align: middle;" ng-click="dayClick(' + dayCode + ')" class="calendar-today ' + (me.mark != undefined && me.mark[curr] != undefined ? me.mark[curr] : "") + '" date="'+ year + ","+ month+ ","+ dayCode+ ","+j % 7+ '">');
                    calendar.push('<span class="day" date="' + year+","+ month+ ","+dayCode+","+j % 7,'">'+ dayCode+ "</span>");
                    calendar.push('</td>');
                }else{

                    //注意处理日期标记
                    calendar.push('<td style="vertical-align: middle;" ng-click="dayClick(' + dayCode + ')" class="current-month ' + (me.mark != undefined && me.mark[curr] != undefined ? me.mark[curr] : "") + '" date="', year, ",", month, ",", dayCode, ",",j % 7,'">');
                    calendar.push('<span date="', year, ",", month, ",", dayCode, ",",j % 7,'">'+dayCode+"</span>");
                    calendar.push('</td>');
                }
            }
            j % 7 == 6 && calendar.push("</tr>")
        }
        calendar.push('</table>');
        calendar.push("</div>");

        var str = "";
        for(var i in calendar){
            str += calendar[i];
        }

        return str;
    },

    run : function(){

        var me = this;

        if(this.now == undefined){
            me.initialize();
        }

        return me.drawCalendar();
    }
};
/**
 * 九宫格指令
 */
angular.module("kyee.framework.directive.sudoku", ["kyee.framework.config"])
	.directive("kyeeSudokuDirective", ["KyeeFrameworkConfig", function(KyeeFrameworkConfig) {
		
		var def = {
			scope: {
				data : "=",
				height : "@",
				itemclick : "&"
			},
            templateUrl: KyeeFrameworkConfig.KYEE_FRAMEWORK_BASE_PATH + "js/directive/grid/sudoku/templates/sudoku.html",
            replace: true,
            restrict: "A",
			init : function(){

				def.registEvents();
				def.registMethods();
			},
			controller : ["$scope", function($scope){

				def.innerScope = $scope;
			}],
			link : function(scope, element, attrs){

				def.element = element;
				def.attrs = attrs;

				def.init(element, attrs);
			},
			registMethods : function(){

				def.innerScope.click = def.methods.click;
			},
			methods : {
				click : function(item){

					def.innerScope.itemclick({params : item});
				}
			},
			registEvents : function(){
			},
			events : {
			}
        };

		return def;
	}]);
/**
 * 通知消息栏指令
 * 属性：
 * 		id : 唯一标示符
 * 		speed : 速度
 * 		direction : 滚动方向（up, down, left, right）
 * 		closeable : 是否可关闭
 * 		skin : 自定义样式
 * 		content : 通知内容
 * 可用方法：
 * 		close() : 关闭
 * 可用事件：
 * 		kyeeNotification.event.close : 关闭事件
 */
angular.module("kyee.framework.directive.notification", ["kyee.framework.service.utils", "kyee.framework.config"])
	.directive("kyeeNotificationDirective", ["KyeeUtilsService", "KyeeFrameworkConfig", function(KyeeUtilsService, KyeeFrameworkConfig) {
		
		var def = {
			scope: {
				id : "@",
				speed : "@",
				direction : "@",
				closeable : "@",
				content : "@",
				skin : "@",
				autoHideDelay : "@"
			},
            templateUrl: KyeeFrameworkConfig.KYEE_FRAMEWORK_BASE_PATH + "js/directive/notification/templates/notification.html", 
            replace: true,
            restrict: "A",
			init : function(){

				if(def.attrs.speed == undefined){
					def.attrs.speed = 2;
				}
				if(def.attrs.direction == undefined){
					def.attrs.direction = "left";
				}
				if(def.attrs.closeable == undefined){
					def.attrs.closeable = false;
				}

				//设置自动隐藏
				if (def.attrs.autoHideDelay != undefined) {
					
					KyeeUtilsService.delay({
						time : parseInt(def.attrs.autoHideDelay),
						do : function(){
							def.listeners.close_notification();
						}
					});
				}
				
				def.registEvents();
				def.registMethods();
			},
			controller : ["$scope", function($scope){
				
				def.innerScope = $scope;
			}],
			link : function(scope, element, attrs){
				
				def.element = element;
				def.attrs = attrs;
				
				def.init();
			},
			registMethods : function(){
				
				def.innerScope.$on("kyeeNotification.close", def.methods.close);
			},
			methods : {
				
				close : function(evt, params){
					
					document.getElementById(def.innerScope.id).style.display="none";
				}
			},
			registEvents : function(){
				
				def.innerScope.doOnClose = def.events.close;
			},
			events : {
				
				close : function(){

					console.log(def.attrs.speed);

					def.innerScope.$emit("kyeeNotification.event.close");
				}
			}
        };
		
		return def;
	}]);
/**
 * 延迟加载指令
 * 属性：
 * 		loadingStyle : 是否显示加载提示
 * 		template : 待加载的模板路径
 * 		delay : 延迟加载事件（默认 1500 ms）
 * 可用方法：
 * 		无
 * 可用事件：
 * 		无
 */
angular.module("kyee.framework.directive.compile", ["ngSanitize", "kyee.framework.service.utils", "kyee.framework.service.messager"])
	.directive("kyeeCompileDirective", ["$compile", "KyeeMessagerService", "KyeeUtilsService", function ($compile, KyeeMessagerService, KyeeUtilsService) {
		
		return function(scope, element, attrs){
			
			//是否显示加载提示
			if (attrs.showLoading == "true") {
				
				element.html("<div style='text-align: center;" + (attrs.loadingStyle == undefined ? "" : attrs.loadingStyle) + "'>" + (attrs.loadingContent == undefined ? "<ion-spinner icon='dots' class='spinner-dark'></ion-spinner>" : attrs.loadingContent) + "</div>");
				$compile(element.contents())(scope);
			}
			
			KyeeUtilsService.delay({
				time : attrs.delay == undefined ? 1000 : parseInt(attrs.delay),
				action :  function(){
					
					//bind 和 template 配置互斥，如果两个都配置，则优先使用 template
					if (attrs.template != undefined) {
						//alert(def.attrs.template);
						KyeeMessagerService.send({
							type : "GET",
							url : attrs.template,
							onSuccess : function(data){
								
								element.html(data);
								$compile(element.contents())(scope);
							}
						});
						
					}else{
						
						element.html(scope.$eval(attrs.bind));
						$compile(element.contents())(scope);
					}
				}
			});
		};
	}]);
angular.module("kyee.framework.directive.picker.list_picker", ["kyee.framework.config"])
	.directive("kyeeListPickerDirective", ["KyeeFrameworkConfig", function(KyeeFrameworkConfig) {
		
		var def = {
			scope: {
				title : "@",
				cancelText : "@",
				okText : "@",
				height : "@",
				type : "@",
				data : "=",
				selectFinash : "&",
				bind : "&",
				value : "@"
			},
            templateUrl: KyeeFrameworkConfig.KYEE_FRAMEWORK_BASE_PATH + "js/directive/picker/list_picker/templates/picker.html",
            replace: true,
            restrict: "A",
			checkValues : {},
			radioValue : null,
			init : function(){

				var me = this;

				//生成唯一标示符
				def.innerScope.id = "picker_" + new Date().getTime();

				def.innerScope.data2 = def.innerScope.data;

				//设置默认值
				if(def.innerScope.title == undefined){
					def.innerScope.title = "请选择";
				}
				if(def.innerScope.cancelText == undefined){
					def.innerScope.cancelText = "取消";
				}
				if(def.innerScope.okText == undefined){
					def.innerScope.okText = "确定选择";
				}
				if(def.innerScope.height == undefined){
					def.innerScope.height = 250;
				}
				if(def.innerScope.type == undefined){
					def.innerScope.type = "radio";
				}

				//默认选中的值为默认值
				if(def.innerScope.value != undefined && def.innerScope.type == "radio"){
					def.radioValue = def.innerScope.value;
				}

				/**
				 * 执行绑定方法
				 */
				def.innerScope.bind({
					params : def.methods.outer
				});

				for(var i in def.methods.inner){
					def.innerScope[i] = def.methods.inner[i];
				}
			},
			controller : ["$scope", function($scope){

				def.innerScope = $scope;
			}],
			link : function(scope, element, attrs){

				def.element = element;
				def.attrs = attrs;

				def.init();
			},
			methods : {

				//外部方法
				outer : {

					/**
					 * 显示选择器
					 */
					show : function(){

						document.getElementById(def.innerScope.id + "_backdrop").style.display = "block";
						document.getElementById(def.innerScope.id).style.display = "block";
					}
				},

				//内部方法
				inner : {

					/**
					 * 单选按钮单击时
					 *
					 * @param value
					 */
					radioItemClick : function(value){

						def.radioValue = value;
					},

					/**
					 * 复选按钮单击时
					 *
					 * @param value
					 */
					checkItemClick : function(value){

						if(def.checkValues[value] == undefined){
							def.checkValues[value] = true;
						}else{
							def.checkValues[value] = !def.checkValues[value];
						}
					},

					/**
					 * 选择完成
					 *
					 * @param type
					 * @param item
					 */
					finash : function(type, item){

						if(type == "radio"){

							console.log("value=");
							console.log(def.radioValue);
							def.innerScope.selectFinash({
								params : {
									item : def.radioValue
								}
							});
						}else if(type == "check"){

							var result = [];
							for(var key in def.checkValues){

								if(def.checkValues[key] == true){
									result.push(key);
								}
							}

							def.innerScope.selectFinash({
								params : {
									items : result
								}
							});
						}

						document.getElementById(def.innerScope.id + "_backdrop").style.display = "none";
						document.getElementById(def.innerScope.id).style.display = "none";
					},

					/**
					 * 取消
					 */
					cancel : function(){

						document.getElementById(def.innerScope.id + "_backdrop").style.display = "none";
						document.getElementById(def.innerScope.id).style.display = "none";
					}
				}
			}
        };

		return def;
	}]);
/**
 * 图片展示板指令
 * 属性：
 * 		speed : 播放速度（单位 ms）
 * 		basepath : 图片基础路径
 * 		images : 图片数据
 * 可用方法：
 * 		load(json) 加载新图片
 * 可用事件：
 * 		kyeeSlidebox.event.click : 单击事件
 */
angular.module("kyee.framework.directive.slidebox", ["ionic", "kyee.framework.config"])
	.directive("kyeeSlideboxDirective", ["$ionicSlideBoxDelegate", "KyeeFrameworkConfig", function($ionicSlideBoxDelegate, KyeeFrameworkConfig) {
		
		var def = {
			scope: {
				images : "=",
				speed : "@",
				itemclick : "&"
			},
            templateUrl: KyeeFrameworkConfig.KYEE_FRAMEWORK_BASE_PATH + "js/directive/slidebox/templates/slidebox.html", 
            replace: true,
            restrict: "A",
			init : function(){

				if(def.attrs.speed == undefined){
					def.attrs.speed = 5000;
				}

				def.registEvents();
				def.registMethods();
			},
			controller : ["$scope", function($scope){
				
				def.innerScope = $scope;
			}],
			link : function(scope, element, attrs){
				
				def.element = element;
				def.attrs = attrs;
				
				def.init(element, attrs);
			},
			registMethods : function(){
				
				def.innerScope.$on("kyeeSlidebox.load", def.methods.load);
				def.innerScope.click = def.methods.click;
			},
			methods : {
				
				//bug：当放到第二张时，再更新出现问题
				load : function(evt){

					$ionicSlideBoxDelegate.stop();
					$ionicSlideBoxDelegate.slide(0);
					$ionicSlideBoxDelegate.update();
					$ionicSlideBoxDelegate.start();
				},

				click : function(id){

					def.innerScope.itemclick({
						params : {
							index : $ionicSlideBoxDelegate.currentIndex(),
							id : id
						}
					});
				}
			},
			registEvents : function(){
			},
			events : {
			}
        };
		
		return def;
	}]);
angular.module("kyee.framework.directive.view.overlay", ["kyee.framework.config"])
	.directive("kyeeOverlayDirective", ["KyeeFrameworkConfig", function(KyeeFrameworkConfig) {

		var def = {
			scope: {
				bind : "&",
				template : "@"
			},
            templateUrl: KyeeFrameworkConfig.KYEE_FRAMEWORK_BASE_PATH + "js/directive/view/overlay/templates/overlay.html",
            replace: true,
            restrict: "A",
			init : function(){

				var me = this;

				//生成唯一标示符
				def.innerScope.id = "overlay_" + new Date().getTime();

				/**
				 * 执行绑定方法
				 */
				def.innerScope.bind({
					params : def.methods.outer
				});

				for(var i in def.methods.inner){
					def.innerScope[i] = def.methods.inner[i];
				}
			},
			controller : ["$scope", function($scope){

				def.innerScope = $scope;
			}],
			link : function(scope, element, attrs){

				def.element = element;
				def.attrs = attrs;

				def.init();
			},
			methods : {

				//外部方法
				outer : {

					show : function(){

						document.getElementById(def.innerScope.id).style.display = "block";
					}
				},

				//内部方法
				inner : {

					hide : function(){

						document.getElementById(def.innerScope.id).style.display = "none";
					}
				}
			}
        };

		return def;
	}]);
/**
 * 常用过滤器
 */
new KyeeModule()
    .group("kyee.framework.filter.common")
    .type("filter")
    .name("kyee_to_html")
    .params(["$sce"])
    .action(function($sce){

        return function (input) {

            return $sce.trustAsHtml(input);
        }
    })
    .build();
/**
 * 消息服务
 */
angular
	.module("kyee.framework.service.message", ["ionic"])
	.factory("KyeeMessageService", ["$ionicLoading", "$ionicPopup", "$ionicBackdrop", function($ionicLoading, $ionicPopup, $ionicBackdrop){
		
		return {

			/**
			 * 通知
			 */
			broadcast : function(cfg){
				
				$ionicLoading.show({
					template : cfg.content,
					noBackdrop : true,
					duration : cfg.duration == undefined ? 3000 : cfg.duration
				});
			},
		
			/**
			 * 显示加载信息框
			 *
			 * @param cfg{
			 * 	content : 内容,
			 * 	mask : 是否显示遮罩层,
			 * 	duration : 显示事件（单位 ms）,
			 * 	delay : 延迟显示（单位 ms）
			 * }
			 */
			loading : function(cfg){

				var html = "";
				if (cfg != undefined && cfg.content != undefined) {
					
					html += "<div class='row' style='margin:0px;padding: 0px;'>" +
							"	 <div class='col' style='margin:0px;padding: 0px;padding-top: 5px;height:50px;'><ion-spinner icon='android'></ion-spinner></div>" +
							"</div>"+
							"<div class='row' style='margin:0px;padding: 5px;>" +
							"    <div class='col' style='margin:0px;padding: 0px;'><span style='color:#D8D8D8;'>" + cfg.content + "</span></div>" +
							"</div>";
				}else{
					
					html = "<ion-spinner icon='android'></ion-spinner>";
				}
				
				$ionicLoading.show({
					template : html,
					noBackdrop : cfg == undefined || cfg.mask == undefined ? false : !cfg.mask,
					//如果没有配置，则默认时间较长，避免出现使用在网络加载情境中提前隐藏的问题
					duration : cfg == undefined || cfg.duration == undefined ? 30000 : cfg.duration,
					delay : cfg == undefined || cfg.delay == undefined ? 0 : cfg.delay
				});
			},
			
			hideLoading : function(){
				$ionicLoading.hide();
			},

			/**
			 * 显示确认对话框
			 *
			 * @param cfg{
			 * 	title : 标题,
			 * 	content : 内容,
			 * 	onSelect : 选择后的回调函数
			 * }
			 */
			confirm : function(cfg){
				
				$ionicPopup.confirm({
					title : cfg.title == undefined ? "询问" : cfg.title,
					template : cfg.content,
					buttons: [
						{
							text: "取消",
							onTap : function(){
								return false;
							}
						},
						{
							text: "确定",
							//自定义按钮样式
							type: cfg.okButtonClass == undefined ? "kyee_framework_message_dialog_ok_button" : cfg.okButtonClass,
							onTap: function() {
								return true;
							}
						}
					]
				})
				.then(cfg.onSelect);
			},

			/**
			 * 显示消息对话框
			 *
			 * @param cfg {
			 * 	title : 标题,
			 * 	content : 内容,
			 * 	okText : 确认按钮文本,
			 * 	onOk : 单击确认后的回调事件
			 * }
			 * @returns
			 */
			message : function(cfg){
				
				var view = $ionicPopup.alert({
					title : cfg.title == undefined ? "消息" : cfg.title,
					template : cfg.content,
					buttons: [
						{
							text: cfg.okText == undefined ? "确定" : cfg.okText,
							//自定义按钮样式
							type: cfg.okButtonClass == undefined ? "kyee_framework_message_dialog_ok_button" : cfg.okButtonClass
						}
					]
				})
				.then(cfg.onOk);
				
				return view;
			},

			/**
			 * 显示上下文菜单
			 *
			 * @param cfg{
			 *	title : 标题,
			 *	scope : $scope,
			 * 	menus : 菜单数据,
			 * 	onSelect : 单击项目后的回调函数
			 * }
			 */
			contextmenu : function(cfg){
				
				var me = this;
				
				var content = "<ul class='list'>";
				if (cfg.menus != undefined && cfg.menus.length > 0) {
					
					for(var i in cfg.menus){
						
						var menu = cfg.menus[i];

						if(menu.icon == undefined){
							content += "<a ng-click='onSelect(\"" + menu.value + "\")' class='item'>" + menu.text + "</a>";
						}else{
							content += "<a ng-click='onSelect(\"" + menu.value + "\")' class='item item-icon-left'><i class='icon " + menu.icon + "'></i>" + menu.text + "</a>";
						}
					}
				}

				if(cfg.cancelButton != undefined){

					if(cfg.cancelButton.icon == undefined){
						content += "<a ng-click='onSelect(\"CANCEL\")' class='item' style='background-color:#F5F5F5;'>" + cfg.cancelButton.text + "</a>";
					}else{
						content += "<a ng-click='onSelect(\"CANCEL\")' class='item item-icon-left' style='background-color:#F5F5F5;'><i class='icon " + cfg.cancelButton.icon + "'></i>" + cfg.cancelButton.text + "</a>";
					}
				}

				content += "</ul>";
				
				var view = $ionicPopup.show({
					title : cfg.title == undefined ? "菜单" : cfg.title,
					template : content,
					scope : cfg.scope
				});
				
				cfg.scope.onSelect = function(select){
					
					view.close();
					cfg.onSelect(select);
				}
			}
		};
}]);
/**
 * 通信服务
 */
angular
	.module("kyee.framework.service.messager", ["ionic", "kyee.framework.service.message", "kyee.framework.service.utils"])
	.factory("KyeeMessagerService", ["$http", "KyeeMessageService", "KyeeUtilsService", "$cacheFactory", function($http, KyeeMessageService, KyeeUtilsService, $cacheFactory){
		
		var def= {

			//记录 init() 方法是否曾执行
			isInit : false,

			//http 缓存池
			httpCache : null,

			//默认 http 缓存池大小
			DEFAULT_HTTP_CACHE_SIZE : 500,

			/**
			 * 初始化
			 *
			 * 应用程序生命周期中仅需要执行一次
			 */
			init : function(){

				var me = this;

				//设置 $http 请求中，对于 POST 请求默认设置属性，否则会使用 payload
				$http.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded";

				//初始化 http 缓存池
				me.httpCache = $cacheFactory("kyee.http.cache", {capacity: me.DEFAULT_HTTP_CACHE_SIZE});

				me.isInit = true;
			},

			/**
			 * 发送请求
			 *
			 * @param cfg{
			 * 	type : 请求类型（GET,POST）,
			 * 	onSuccess : 成功后的回调函数
			 * }
			 */
			send : function(cfg){

				var me = this;

				//应用周期中仅执行一次初始化操作
				if(!me.isInit){
					me.init();
				}

				//请求类型
				var type = cfg.type == undefined ? "POST" : cfg.type;
				//请求参数
				var params = cfg.params == undefined ? {} : cfg.params;
				//生产唯一 cache key
				var cacheKey = cfg.url + "?params=" + JSON.stringify(params);

				//如果配置缓存策略，则优先从缓存中取
				if(cfg.cache != undefined){

					var by = cfg.cache.by;
					var value = cfg.cache.value;

					var cacheObj = me.httpCache.get(cacheKey);
					if(cacheObj != undefined){

						var hit = cacheObj.hit;
						var timestamp = cacheObj.timestamp;

						//按数目策略控制
						if(by == "HIT" && hit < value){

							cacheObj.hit ++;
							cfg.onSuccess(cacheObj.data);
							return;
						}

						//按时间策略控制
						if(by == "TIME" && (new Date().getTime() - timestamp <= value * 1000)){

							cfg.onSuccess(cacheObj.data);
							return;
						}

						//一次策略
						if(by == "ONCE"){

							cfg.onSuccess(cacheObj.data);
							return;
						}
					}
				}else{

					KyeeLogger.info("温馨提示：亲，需要每次都请求服务器吗？（URL=" + cfg.url + "）");
				}

				//本地加载无需显示加载提示
				if(cfg.showLoading != undefined && cfg.showLoading == true && cfg.url.indexOf("http://") != -1){

					KyeeMessageService.loading({
						content : cfg.loadingText == undefined ? "正在加载，请稍后..." : cfg.loadingText,
						mask : false
					});
				}

				//解析参数值为函数类型的参数
				if(cfg.params != undefined){

					for(var name in cfg.params){

						if(typeof cfg.params[name] == "function"){

							cfg.params[name] = cfg.params[name]();
						}
					}
				}

				//http 配置对象
				var config = {
					method : type,
					url : cfg.url,
					//注意：
					//由于 angular 调用了 JSON.parse 执行 json 反序列化，
					//JSON.parse 要求 key 必须使用双引号，因此统一采用 text 处理，然后在 onSuccess 中执行类型转换
					//使用 transformResponse 函数要求 angular 不要对 response 做任何处理，直接返回字符串
					transformResponse : function(data){
						return data;
					},
					//注意：
					//由于 angular 调用了 JSON.parse 执行 json 反序列化，
					//JSON.parse 要求 key 必须使用双引号，因此统一采用 text 处理，然后在 onSuccess 中执行类型转换
					responseType : "text"
				};

				//如果是 GET 请求，参数追加到 url 上，使用 parmas 参数，如果使用 POST 请求，使用 data 属性发送
				if(type == "GET"){
					config.params = params;
				}else if(type == "POST"){
					config.data = params;
					config.headers = {'Content-Type': 'application/x-www-form-urlencoded'};
				}

				$http(config).success(function(data){

					//注意：
					//由于 angular 调用了 JSON.parse 执行 json 反序列化，
					//JSON.parse 要求 key 必须使用双引号，因此统一采用 text 处理，然后在 onSuccess 中执行类型转换
					var _data = data;
					//responseType 默认值为 text
					if(cfg.responseType != undefined && cfg.responseType == "json"){
						eval("var result=" + data + ";");
						_data = result;
					}

					//如果配置缓存策略，则优先从缓存中取
					if(cfg.cache != undefined){

						//将返回结果存入缓存
						me.httpCache.put(cacheKey, {
							timestamp : new Date().getTime(),
							hit : 0,
							data : _data
						});
					}

					//本地加载不会显示加载提示
					if(cfg.showLoading != undefined && cfg.showLoading == true && cfg.autoHideLoading != false && cfg.url.indexOf("http://") != -1){
						KyeeMessageService.hideLoading();
					}

					if(cfg.onSuccess != undefined){

						cfg.onSuccess(_data);
					}
				}).error(function(){

					if(cfg.showLoading != undefined && cfg.showLoading == true){

						//隐藏加载框 500 ms后显示错误信息
						KyeeMessageService.hideLoading();
						KyeeUtilsService.delay({
							time : 500,
							action  :function(){
								me._onSendError(cfg);
							}
						});
					}else{

						me._onSendError(cfg);
					}
				});
			},

			/**
			 * 错误回调方法
			 *
			 * @param cfg
			 * @private
			 */
			_onSendError : function(cfg){

				KyeeMessageService.broadcast({
					content : cfg.errorText == undefined ? "糟糕，加载失败，似乎网络出问题了！" : cfg.errorText
				});

				if(cfg.onError != undefined){
					cfg.onError();
				}
			}
		};

		return def;
}]);
/**
 * 产品名称 KYMH
 * 创建用户: 朱学亮
 * 日期: 2015/4/29
 * 时间: 07:18
 * 创建原因：框架提供的支付服务
 * 修改原因：
 * 修改时间：
 */
angular
    .module("kyee.framework.service.pay", [])
    .factory("KyeePayService",  function() {

        return {
            /**
             * @param action 可选择的支付类型
             *        wxpay  --- 微信支付
             *        alipay --- 阿里支付
             *        uppay  --- 银联支付
             *        qypay  --- 趣医支付
             *
             * @param successCallback 调用成功的回调函数
             *        可能返回三种状态  1. 支付成功；2. 支付失败；3. 用户取消了支付。
             *                      
             * @param errorCallback 调用失败的回调函数：其他异常情况导致支付失败。
             *
             * @param options 需要传入“数组”参数：
             *
             * 除微信支付以外的其他三种支付方式需要传入7个参数：
             * [out_trade_no, subject, MARK_DESC, AMOUNT, paymentType, hospitalID, USER_ID]
             * 
             * 微信支付需要传入8个参数：
             * [out_trade_no, subject, MARK_DESC, AMOUNT, paymentType, hospitalID, USER_ID, APP_ID]
             */

            pay : function(action, successCallback, errorCallback, options) {

                if (device.platform == "Android") {

                    navigator.payment.payForAndroid(action, successCallback, errorCallback, options);

                } else if (device.platform == "iOS") {

                    if (action == "wxpay") {

                        if (kyeeWXPay != undefined) {

                            kyeeWXPay.wxpay(successCallback, errorCallback, options);

                        }
                    
                    } else if (action == "alipay") {

                        if (kyeeAliPay != undefined) {

                            kyeeAliPay.alipay(successCallback, errorCallback, options);

                        }

                    } else if (action == "uppay") {

                        if (kyeeUPPay != undefined) {

                            kyeeUPPay.uppay(successCallback, errorCallback, options);

                        }

                    } else if (action == "qypay") {

                        if (kyeeQYPay != undefined) {

                            kyeeQYPay.qypay(successCallback, errorCallback, options);

                        }   
                    }
                }
                
            }
        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/28
 * 时间: 15:29
 * 创建原因：
 * 修改原因：
 * 修改时间：
 */
angular
    .module("kyee.framework.service.push", [])
    .factory("KyeePushService",  function() {

        return {

            isRegistered:function() {

                if (navigator.push != undefined) {

                    return navigator.push.registered;
                }

                return false;
            },
            getUserId:function() {

                if (navigator.push != undefined) {

                    return navigator.push.userid;
                }

                return null;
            },
            getAppId:function() {

                if (navigator.push != undefined) {

                    return navigator.push.appid;
                }

                return null;
            },
            getChannelId:function() {

                if (navigator.push != undefined) {

                    return navigator.push.channelid;
                }

                return null;
            },
            init:function(apiKey) {

                if (navigator.push != undefined) {

                    return navigator.push.init(apiKey);
                }
            },
            success:function(info) {

                if (navigator.push != undefined) {

                    return navigator.push.successFn(info);
                }
            },
            message:function(pushmessage) {

                if (navigator.push != undefined) {

                    return navigator.push.message(pushmessage);
                }
            },
            fail:function(info) {

                if (navigator.push != undefined) {

                    return navigator.push.failureFn(info);
                }
            }
        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/5/7
 * 时间: 14:47
 * 创建原因：二维码扫描服务
 * 修改原因：
 * 修改时间：
 */
angular
    .module("kyee.framework.service.scanning", [])
    .factory("KyeeScanService",  function() {

        return {

            /**
             *
             * @param success
             *
             * //扫描得到的二维码
             * function(code) {
             * }
             *
             * @param error
             * //错误信息
             * function(msg) {
             * }
             */
            scan:function(success, error) {

                if (navigator.scanning != undefined) {

                    navigator.scanning.scann(success, error);
                }
            }

        };
    });
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/29
 * 时间: 14:54
 * 创建原因：
 * 修改原因：添加对ios分享的支持
 * 修改时间：2015/4/29 17:40
 */
angular
    .module("kyee.framework.service.share", [])
    .factory("KyeeShareService",  function() {

        return {

            share:function(action, success, error, params) {

                if (device.platform == "Android") {
                
                    if (navigator.share != undefined) {

                        navigator.share.share(action, success, error, params);
                    }
                
                } else if (device.platform == "iOS") {

                    if (action == "wxshare") {

                        if (kyeeWXShare != undefined) {

                            kyeeWXShare.wxshare(success, error);
                        }
                    } else if (action == "qqshare") {

                        if (kyeeTencentShare != undefined) {

                            kyeeTencentShare.tencentshare(success, error);
                        }
                    } else if (action == "weiboshare") {

                        if (kyeeWeiboShare != undefined) {

                            kyeeWeiboShare.weiboshare(success, error);
                        }
                    }
                }
            }
        };
    });
var KyeeLogger = {

    //日志级别，默认为 DEBUG
    level : 0,

    //日志级别映射
    levelMapping : {
        DEBUG : 0,
        INFO : 1,
        WARN : 2,
        ERROR : 3
    },

    /**
     * 设置日志级别
     *
     * @param level
     */
    setLevel : function(level){

        this.level = this.levelMapping[level];
    },

    /**
     * 调试级别输出
     *
     * @param content
     */
    debug : function(content){

        if(AppConfig.MODE == "DEV" && this.levelMapping.DEBUG >= this.level) {
            console.debug(content);
        }
    },

    /**
     * 消息级别输出
     *
     * @param content
     */
    info : function(content){

        if(AppConfig.MODE == "DEV" && this.levelMapping.INFO >= this.level) {
            console.info(content);
        }
    },

    /**
     * 警告级别输出
     *
     * @param content
     */
    warn : function(content){

        if(AppConfig.MODE == "DEV" && this.levelMapping.WARN >= this.level) {
            console.warn(content);
        }
    },

    /**
     * 错误级别输出
     *
     * @param content
     */
    error : function(content){

        if(AppConfig.MODE == "DEV" && this.levelMapping.ERROR >= this.level){
            console.error(content);
        }
    }
};
/**
 * 工具类服务
 */
angular
	.module("kyee.framework.service.utils", [])
	.factory("KyeeUtilsService", ["$timeout", function($timeout){
		
		return {

			/**
			 * 延迟执行函数
			 *
			 * @param cfg{
			 * 	time : 延迟时间（单位 ms）,
			 * 	do : 延迟执行函数
			 * }
			 */
			delay : function(cfg){
				
				$timeout(cfg.action, cfg.time);
			},

			/**
			 * 获取浏览器可视区域大小
			 *
			 * @returns {{width: Number, height: Number}}
			 */
			getInnerSize : function(){

				return {
					width : window.innerWidth,
					height : window.innerHeight
				}
			},

			/**
			 * 获取日期工具
			 *
			 * @returns {{}}
			 */
			DateUtils : {

				/**
				 * 获取当前日期
				 *
				 * @param pattern 格式化参数，例如：YYYY-MM-DD，如果不指定该参数，默认为 YYYY/MM/DD
				 * @returns {*}
				 */
				getDate : function(pattern){

					if(pattern == undefined){
						pattern = "YYYY/MM/DD";
					}

					return moment().format(pattern);
				},

				/**
				 * 获取当前时间
				 *
				 * @param pattern 格式化参数，例如：hh:mm:ss，如果不指定该参数，默认为 hh:mm
				 * @returns {*}
				 */
				getTime : function(pattern){

					if(pattern == undefined){
						pattern = "hh:mm";
					}

					return moment().format(pattern);
				},

				/**
				 * 获取当前日期时间
				 *
				 * @param pattern 格式化参数，例如：YYYY-MM-DD hh:mm:ss，如果不指定该参数，默认为 YYYY/MM/DD hh:mm
				 * @returns {*}
				 */
				getNow : function(pattern){

					if(pattern == undefined){
						pattern = "YYYY/MM/DD hh:mm";
					}

					return moment().format(pattern);
				},

				/**
				 * 日期格式化
				 *
				 * @param src 源日期字符串
				 * @param srcPattern 源日期格式
				 * @param targetPattern 目标日期格式
				 * @returns {*}
				 */
				formatFromString : function(src, srcPattern, targetPattern){

					return moment(src, srcPattern).format(targetPattern);
				},

				/**
				 * 日期格式化
				 *
				 * @param srcDate 源日期对象
				 * @param pattern 格式化参数
				 * @returns {*}
				 */
				formatFromDate : function(srcDate, pattern){

					return moment(srcDate).format(pattern);
				},

				/**
				 * 日期解析
				 *
				 * @param src 日期字符串
				 * @param pattern 格式化参数
				 * @returns {*}
				 */
				parse : function(src, pattern){

					return moment(src, pattern).toDate();
				}
			}
		};
}]);
/**
 * 缓存管理服务
 *
 * 对于内存变量，使用全局变量存储，以便于在 AppConfig.SERVICE_BUS.http.default_params 中的函数可以使用
 */
var MEMORY_CACHE_STORE = {};
new KyeeModule()
	.group("kyee.framework.service.utils.cache.base")
	.type("service")
	.name("KyeeCacheService")
	.action(function(){
		
		var def = {

			/**
			 * 获得内存 cache 对象
			 *
			 * @returns {{set: Function, get: Function, getObj: Function, getAll: Function, clear: Function}}
			 */
			getMemoryCache : function(){

				var me = this;

				return {

					/**
					 * 设置值
					 *
					 * @param key
					 * @param value
					 */
					set : function(key, value){

						MEMORY_CACHE_STORE[key] = {
							value : value,
							timestamp : new Date().getTime()
						};
					},

					/**
					 * 获取值
					 *
					 * @param key
					 * @returns {*|$value|s}
					 */
					get : function(key){

						var record = MEMORY_CACHE_STORE[key];
						//不存在时为 undefined，移除后为 null
						if(record == undefined || record == null){
							return null;
						}

						return record.value;
					},

					/**
					 * 获取值得完整信息
					 *
					 * @param key
					 * @returns {*}
					 */
					getObj : function(key){

						return MEMORY_CACHE_STORE[key];
					},

					/**
					 * 移除元素
					 *
					 * @param key
					 */
					remove : function(key){

						MEMORY_CACHE_STORE[key] = null;
					},

					/**
					 * 获得所有值
					 *
					 * @returns {def.memoryCache|{}}
					 */
					getAll : function(){

						return MEMORY_CACHE_STORE;
					},

					/**
					 * 清空所有值
					 */
					clear : function(){

						MEMORY_CACHE_STORE = {};
					}
				}
			},

			/**
			 * 获取本地存储对象
			 *
			 * @returns {{set: Function, get: Function, getObj: Function, getAll: Function, clear: Function}}
			 */
			getStorageCache : function(){

				return {

					/**
					 * 设置值
					 *
					 * @param key
					 * @param value
					 */
					set : function(key, value){

						var serializeObj = {
							value : value,
							timestamp : new Date().getTime()
						};

						localStorage.setItem(key, JSON.stringify(serializeObj));
					},

					/**
					 * 属性变更
					 * <br/>
					 * 1.拓展属性（例如 timestamp 等）将会自动更新；
					 * 2.仅在值为 json 类型时可使用，
					 * 例如：
					 * {
					 *   key : info,
					 *   value : {
					 *     name : string,
					 *     age : integer
					 *   }
					 * }，
					 * 属性动态添加或修改可使用：
					 * apply(key, attr, value)
					 *
					 * @param key
					 * @param attr
					 * @param value
					 */
					apply : function(key, attr, value){

						var me = this;

						var obj = me.getObj(key);
						if(obj != null){
							obj.value[attr] = value;
							me.set(key, obj.value);
						}
					},

					/**
					 * 获取值
					 *
					 * @param key
					 * @returns {*|$value|s}
					 */
					get : function(key){

						var serializeObj = localStorage.getItem(key);
						if(serializeObj != null){
							return JSON.parse(serializeObj).value;
						}
						return null;
					},

					/**
					 * 获取值得完整信息
					 *
					 * @param key
					 * @returns {*}
					 */
					getObj : function(key){

						var serializeObj = localStorage.getItem(key);
						if(serializeObj != null){
							return JSON.parse(serializeObj);
						}
						return null;
					},

					/**
					 * 移除元素
					 *
					 * @param key
					 */
					remove : function(key){

						localStorage.removeItem(key);
					},

					/**
					 * 清空所有值
					 */
					clear : function(){

						localStorage.clear();
					}
				}
			}
		};
		
		return def;
	})
	.build();
/**
 * 模板缓存服务
 */
angular
	.module("kyee.framework.service.utils.cache.template_cache", ["kyee.framework.service.messager"])
	.factory("KyeeTemplateCacheService", ["KyeeMessagerService", function(KyeeMessagerService){
		
		var def = {
			
			cacheTemplateList : [],
			
			cacheData : [],
			
			setTemplates : function(list){
				
				var me = this;
				
				me.cacheTemplateList = list;
				
				return me;
			},
			
			build : function(){
				
				var me = this;
				
				if (me.cacheTemplateList != null) {
					
					//擦除 cache
					me.cacheData = [];
					
					for(var i in me.cacheTemplateList){
						
						var item = me.cacheTemplateList[i];
						
						KyeeMessagerService.send({
							type : "GET",
							url : item.path,
							onSuccess : function(data){
								
								me.cacheData.push({
									key : item.key,
									data : data
								});
							}
						});
					}
				}
			},
			
			get : function(key){
				
				var me = this;
								
				for(var i in me.cacheData){
					
					var item = me.cacheData[i];
					if (key == item.key) {
						return item;
					}
				}
				
				return null;
			}
		};
		
		return def;
	}]);
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/28
 * 时间: 10:05
 * 创建原因：
 * 修改原因：
 * 修改时间：
 */
angular
    .module("kyee.framework.service.versioncheck", [])
    .factory("KyeeVersionCheckService",  function() {

        return {

            checkVersion:function(success, error) {

                if (navigator.versioncheck != undefined) {

                    navigator.versioncheck.checkVersion(success, error);
                }
            },
            checkVersionOnly:function() {

                this.checkVersion(function(){}, function(){});
            },
            /**
             * 获取外壳的版本状态，success会返回版本状态，0无可升级版本，1有可升级的版本
             * @param success
             * @param error
             */
            getShellVersionState:function(success, error) {

                if (navigator.versioncheck != undefined) {

                    navigator.versioncheck.getNewVersionState(success, error);
                }
            }
        };
    });
/**
 * 消息服务
 */
angular
	.module("kyee.framework.service.view", ["ionic"])
	.factory("KyeeViewService", ["$ionicModal", "$ionicSideMenuDelegate", function($ionicModal, $ionicSideMenuDelegate){
		
		return {

			/**
			 * 从地址打开模式对话框
			 *
			 * @param cfg{
			 * 	url : 地址，
			 * 	scope : $scope,
			 * 	animation : 过渡样式(slide-in-up,slide-in-right,scale-in)
			 * }
			 */
			openModalFromUrl : function(cfg){
				
				$ionicModal.fromTemplateUrl(cfg.url, {
					scope: cfg.scope,
					animation: cfg.animation == undefined ? "slide-in-right" : cfg.animation
				}).then(function(modal) {
					
					if (cfg.scope._kyee_framwwork_modal == undefined) {
						cfg.scope._kyee_framwwork_modal = [];
					}
					
					cfg.scope._kyee_framwwork_modal.push(modal);
					modal.show();
				});
			},

			/**
			 * 隐藏模式对话框
			 *
			 * @param cfg{
			 * 	scope : $scope
			 * }
			 */
			hideModal : function(cfg){
				
				var modal = null;
				if (cfg.scope._kyee_framwwork_modal != undefined && (modal = cfg.scope._kyee_framwwork_modal.pop()) != null){
					
					modal.hide();
				}
			},

			/**
			 * 移除模式对话框
			 *
			 * @param cfg
			 */
			removeModal : function(cfg){

				var modal = null;
				if (cfg.scope._kyee_framwwork_modal != undefined && (modal = cfg.scope._kyee_framwwork_modal.pop()) != null){

					modal.remove();
				}
			},

			/**
			 * 折叠或显示边缘菜单
			 *
			 * @param dir string 菜单方位(LEFT,RIGHT)
			 * @param status boolean 开启或关闭
			 */
			toggleSideMenu : function(cfg){
				
				if (cfg.direction == "LEFT") {
					$ionicSideMenuDelegate.toggleLeft(cfg.status);
				}else if (cfg.direction == "RIGHT") {
					$ionicSideMenuDelegate.toggleRight(cfg.status);
				}
			}
		};
}]);
/* Add to Homescreen v3.1.1 ~ (c) 2014 Matteo Spinelli ~ @license: http://cubiq.org/license */
(function(window,document){var _eventListener="addEventListener"in window;var _DOMReady=false;if(document.readyState==="complete"){_DOMReady=true}else if(_eventListener){window.addEventListener("load",loaded,false)}function loaded(){window.removeEventListener("load",loaded,false);_DOMReady=true}var _reSmartURL=/\/ath(\/)?$/;var _reQueryString=/([\?&]ath=[^&]*$|&ath=[^&]*(&))/;var _instance;function ath(options){_instance=_instance||new ath.Class(options);return _instance}ath.intl={de_de:{ios:"Um diese Web-App zum Home-Bildschirm hinzuzufügen, tippen Sie auf %icon und dann <strong>Zum Home-Bildschirm</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},en_us:{ios:"To add this web app to the home screen: tap %icon and then <strong>Add to Home Screen</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},es_es:{ios:"Para añadir esta aplicación web a la pantalla de inicio: pulsa %icon y selecciona <strong>Añadir a pantalla de inicio</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},fr_fr:{ios:"Pour ajouter cette application web sur l'écran d'accueil : Appuyez %icon et sélectionnez <strong>Ajouter sur l'écran d'accueil</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},he_il:{ios:'<span dir="rtl">להוספת האפליקציה למסך הבית: ללחוץ על %icon ואז <strong>הוסף למסך הבית</strong>.</span>',android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},it_it:{ios:"Per aggiungere questa web app alla schermata iniziale: premi %icon e poi <strong>Aggiungi a Home</strong>.",android:'Per aggiungere questa web app alla schermata iniziale, apri il menu opzioni del browser e premi su <strong>Aggiungi alla homescreen</strong>. <small>Puoi accedere al menu premendo il pulsante hardware delle opzioni se la tua device ne ha uno, oppure premendo l\'icona <span class="ath-action-icon">icon</span> in alto a destra.</small>'},nb_no:{ios:"For å installere denne appen på hjem-skjermen: trykk på %icon og deretter <strong>Legg til på Hjem-skjerm</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},pt_br:{ios:"Para adicionar este app à tela de início: clique %icon e então <strong>Tela de início</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},pt_pt:{ios:"Para adicionar esta app ao ecrã principal: clique %icon e depois <strong>Ecrã principal</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},nl_nl:{ios:"Om deze webapp op je telefoon te installeren, klik op %icon en dan <strong>Zet in beginscherm</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},sv_se:{ios:"För att lägga till denna webbapplikation på hemskärmen: tryck på %icon och därefter <strong>Lägg till på hemskärmen</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},zh_cn:{ios:"如要把应用程式加至主屏幕,请点击%icon, 然后<strong>加至主屏幕</strong>",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'},zh_tw:{ios:"如要把應用程式加至主屏幕, 請點擊%icon, 然後<strong>加至主屏幕</strong>.",android:'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>'}};for(var lang in ath.intl){ath.intl[lang.substr(0,2)]=ath.intl[lang]}ath.defaults={appID:"org.cubiq.addtohome",fontSize:15,debug:false,modal:false,mandatory:false,autostart:true,skipFirstVisit:false,startDelay:1,lifespan:15,displayPace:1440,maxDisplayCount:0,icon:true,message:"",validLocation:[],onInit:null,onShow:null,onRemove:null,onAdd:null,onPrivate:null,privateModeOverride:false,detectHomescreen:false};var _ua=window.navigator.userAgent;var _nav=window.navigator;_extend(ath,{hasToken:document.location.hash=="#ath"||_reSmartURL.test(document.location.href)||_reQueryString.test(document.location.search),isRetina:window.devicePixelRatio&&window.devicePixelRatio>1,isIDevice:/iphone|ipod|ipad/i.test(_ua),isMobileChrome:_ua.indexOf("Android")>-1&&/Chrome\/[.0-9]*/.test(_ua),isMobileIE:_ua.indexOf("Windows Phone")>-1,language:_nav.language&&_nav.language.toLowerCase().replace("-","_")||""});ath.language=ath.language&&ath.language in ath.intl?ath.language:"en_us";ath.isMobileSafari=ath.isIDevice&&_ua.indexOf("Safari")>-1&&_ua.indexOf("CriOS")<0;ath.OS=ath.isIDevice?"ios":ath.isMobileChrome?"android":ath.isMobileIE?"windows":"unsupported";ath.OSVersion=_ua.match(/(OS|Android) (\d+[_\.]\d+)/);ath.OSVersion=ath.OSVersion&&ath.OSVersion[2]?+ath.OSVersion[2].replace("_","."):0;ath.isStandalone=window.navigator.standalone||ath.isMobileChrome&&screen.height-document.documentElement.clientHeight<40;ath.isTablet=ath.isMobileSafari&&_ua.indexOf("iPad")>-1||ath.isMobileChrome&&_ua.indexOf("Mobile")<0;ath.isCompatible=ath.isMobileSafari&&ath.OSVersion>=6||ath.isMobileChrome;var _defaultSession={lastDisplayTime:0,returningVisitor:false,displayCount:0,optedout:false,added:false};ath.removeSession=function(appID){try{localStorage.removeItem(appID||ath.defaults.appID)}catch(e){}};ath.Class=function(options){this.options=_extend({},ath.defaults);_extend(this.options,options);if(!_eventListener){return}this.options.mandatory=this.options.mandatory&&("standalone"in window.navigator||this.options.debug);this.options.modal=this.options.modal||this.options.mandatory;if(this.options.mandatory){this.options.startDelay=-.5}this.options.detectHomescreen=this.options.detectHomescreen===true?"hash":this.options.detectHomescreen;if(this.options.debug){ath.isCompatible=true;ath.OS=typeof this.options.debug=="string"?this.options.debug:ath.OS=="unsupported"?"android":ath.OS;ath.OSVersion=ath.OS=="ios"?"8":"4"}this.container=document.documentElement;this.session=localStorage.getItem(this.options.appID);this.session=this.session?JSON.parse(this.session):undefined;if(ath.hasToken&&(!ath.isCompatible||!this.session)){ath.hasToken=false;_removeToken()}if(!ath.isCompatible){return}this.session=this.session||_defaultSession;try{localStorage.setItem(this.options.appID,JSON.stringify(this.session));ath.hasLocalStorage=true}catch(e){ath.hasLocalStorage=false;if(this.options.onPrivate){this.options.onPrivate.call(this)}}var isValidLocation=!this.options.validLocation.length;for(var i=this.options.validLocation.length;i--;){if(this.options.validLocation[i].test(document.location.href)){isValidLocation=true;break}}if(localStorage.getItem("addToHome")){this.optOut()}if(this.session.optedout||this.session.added||!isValidLocation){return}if(ath.isStandalone){if(!this.session.added){this.session.added=true;this.updateSession();if(this.options.onAdd&&ath.hasLocalStorage){this.options.onAdd.call(this)}}return}if(this.options.detectHomescreen){if(ath.hasToken){_removeToken();if(!this.session.added){this.session.added=true;this.updateSession();if(this.options.onAdd&&ath.hasLocalStorage){this.options.onAdd.call(this)}}return}if(this.options.detectHomescreen=="hash"){history.replaceState("",window.document.title,document.location.href+"#ath")}else if(this.options.detectHomescreen=="smartURL"){history.replaceState("",window.document.title,document.location.href.replace(/(\/)?$/,"/ath$1"))}else{history.replaceState("",window.document.title,document.location.href+(document.location.search?"&":"?")+"ath=")}}if(!this.session.returningVisitor){this.session.returningVisitor=true;this.updateSession();if(this.options.skipFirstVisit){return}}if(!this.options.privateModeOverride&&!ath.hasLocalStorage){return}this.ready=true;if(this.options.onInit){this.options.onInit.call(this)}if(this.options.autostart){this.show()}};ath.Class.prototype={events:{load:"_delayedShow",error:"_delayedShow",orientationchange:"resize",resize:"resize",scroll:"resize",click:"remove",touchmove:"_preventDefault",transitionend:"_removeElements",webkitTransitionEnd:"_removeElements",MSTransitionEnd:"_removeElements"},handleEvent:function(e){var type=this.events[e.type];if(type){this[type](e)}},show:function(force){if(this.options.autostart&&!_DOMReady){setTimeout(this.show.bind(this),50);return}if(this.shown){return}var now=Date.now();var lastDisplayTime=this.session.lastDisplayTime;if(force!==true){if(!this.ready){return}if(now-lastDisplayTime<this.options.displayPace*6e4){return}if(this.options.maxDisplayCount&&this.session.displayCount>=this.options.maxDisplayCount){return}}this.shown=true;this.session.lastDisplayTime=now;this.session.displayCount++;this.updateSession();if(!this.applicationIcon){if(ath.OS=="ios"){this.applicationIcon=document.querySelector('head link[rel^=apple-touch-icon][sizes="152x152"],head link[rel^=apple-touch-icon][sizes="144x144"],head link[rel^=apple-touch-icon][sizes="120x120"],head link[rel^=apple-touch-icon][sizes="114x114"],head link[rel^=apple-touch-icon]')}else{this.applicationIcon=document.querySelector('head link[rel^="shortcut icon"][sizes="196x196"],head link[rel^=apple-touch-icon]')}}var message="";if(this.options.message in ath.intl){message=ath.intl[this.options.message][ath.OS]}else if(this.options.message!==""){message=this.options.message}else{message=ath.intl[ath.language][ath.OS]}message="<p>"+message.replace("%icon",'<span class="ath-action-icon">icon</span>')+"</p>";this.viewport=document.createElement("div");this.viewport.className="ath-viewport";if(this.options.modal){this.viewport.className+=" ath-modal"}if(this.options.mandatory){this.viewport.className+=" ath-mandatory"}this.viewport.style.position="absolute";this.element=document.createElement("div");this.element.className="ath-container ath-"+ath.OS+" ath-"+ath.OS+(ath.OSVersion+"").substr(0,1)+" ath-"+(ath.isTablet?"tablet":"phone");this.element.style.cssText="-webkit-transition-property:-webkit-transform,opacity;-webkit-transition-duration:0s;-webkit-transition-timing-function:ease-out;transition-property:transform,opacity;transition-duration:0s;transition-timing-function:ease-out;";this.element.style.webkitTransform="translate3d(0,-"+window.innerHeight+"px,0)";this.element.style.transform="translate3d(0,-"+window.innerHeight+"px,0)";if(this.options.icon&&this.applicationIcon){this.element.className+=" ath-icon";this.img=document.createElement("img");this.img.className="ath-application-icon";this.img.addEventListener("load",this,false);this.img.addEventListener("error",this,false);this.img.src=this.applicationIcon.href;this.element.appendChild(this.img)}this.element.innerHTML+=message;this.viewport.style.left="-99999em";this.viewport.appendChild(this.element);this.container.appendChild(this.viewport);if(!this.img){this._delayedShow()}},_delayedShow:function(e){setTimeout(this._show.bind(this),this.options.startDelay*1e3+500)},_show:function(){var that=this;this.updateViewport();window.addEventListener("resize",this,false);window.addEventListener("scroll",this,false);window.addEventListener("orientationchange",this,false);if(this.options.modal){document.addEventListener("touchmove",this,true)}if(!this.options.mandatory){setTimeout(function(){that.element.addEventListener("click",that,true)},1e3)}setTimeout(function(){that.element.style.webkitTransitionDuration="1.2s";that.element.style.transitionDuration="1.2s";that.element.style.webkitTransform="translate3d(0,0,0)";that.element.style.transform="translate3d(0,0,0)"},0);if(this.options.lifespan){this.removeTimer=setTimeout(this.remove.bind(this),this.options.lifespan*1e3)}if(this.options.onShow){this.options.onShow.call(this)}},remove:function(){clearTimeout(this.removeTimer);if(this.img){this.img.removeEventListener("load",this,false);this.img.removeEventListener("error",this,false)}window.removeEventListener("resize",this,false);window.removeEventListener("scroll",this,false);window.removeEventListener("orientationchange",this,false);document.removeEventListener("touchmove",this,true);this.element.removeEventListener("click",this,true);this.element.addEventListener("transitionend",this,false);this.element.addEventListener("webkitTransitionEnd",this,false);this.element.addEventListener("MSTransitionEnd",this,false);this.element.style.webkitTransitionDuration="0.3s";this.element.style.opacity="0"},_removeElements:function(){this.element.removeEventListener("transitionend",this,false);this.element.removeEventListener("webkitTransitionEnd",this,false);this.element.removeEventListener("MSTransitionEnd",this,false);this.container.removeChild(this.viewport);this.shown=false;if(this.options.onRemove){this.options.onRemove.call(this)}},updateViewport:function(){if(!this.shown){return}this.viewport.style.width=window.innerWidth+"px";this.viewport.style.height=window.innerHeight+"px";this.viewport.style.left=window.scrollX+"px";this.viewport.style.top=window.scrollY+"px";var clientWidth=document.documentElement.clientWidth;this.orientation=clientWidth>document.documentElement.clientHeight?"landscape":"portrait";var screenWidth=ath.OS=="ios"?this.orientation=="portrait"?screen.width:screen.height:screen.width;this.scale=screen.width>clientWidth?1:screenWidth/window.innerWidth;this.element.style.fontSize=this.options.fontSize/this.scale+"px"},resize:function(){clearTimeout(this.resizeTimer);this.resizeTimer=setTimeout(this.updateViewport.bind(this),100)},updateSession:function(){if(ath.hasLocalStorage===false){return}localStorage.setItem(this.options.appID,JSON.stringify(this.session))},clearSession:function(){this.session=_defaultSession;this.updateSession()},optOut:function(){this.session.optedout=true;this.updateSession()},optIn:function(){this.session.optedout=false;this.updateSession()},clearDisplayCount:function(){this.session.displayCount=0;this.updateSession()},_preventDefault:function(e){e.preventDefault();e.stopPropagation()}};function _extend(target,obj){for(var i in obj){target[i]=obj[i]}return target}function _removeToken(){if(document.location.hash=="#ath"){history.replaceState("",window.document.title,document.location.href.split("#")[0])}if(_reSmartURL.test(document.location.href)){history.replaceState("",window.document.title,document.location.href.replace(_reSmartURL,"$1"))}if(_reQueryString.test(document.location.search)){history.replaceState("",window.document.title,document.location.href.replace(_reQueryString,"$2"))}}window.addToHomescreen=ath})(window,document);
// BigInt, a suite of routines for performing multiple-precision arithmetic in
// JavaScript.
//
// Copyright 1998-2005 David Shapiro.
//
// You may use, re-use, abuse,
// copy, and modify this code to your liking, but please keep this header.
// Thanks!
//
// Dave Shapiro
// dave@ohdave.com

// IMPORTANT THING: Be sure to set maxDigits according to your precision
// needs. Use the setMaxDigits() function to do this. See comments below.
//
// Tweaked by Ian Bunning
// Alterations:
// Fix bug in function biFromHex(s) to allow
// parsing of strings of length != 0 (mod 4)

// Changes made by Dave Shapiro as of 12/30/2004:
//
// The BigInt() constructor doesn't take a string anymore. If you want to
// create a BigInt from a string, use biFromDecimal() for base-10
// representations, biFromHex() for base-16 representations, or
// biFromString() for base-2-to-36 representations.
//
// biFromArray() has been removed. Use biCopy() instead, passing a BigInt
// instead of an array.
//
// The BigInt() constructor now only constructs a zeroed-out array.
// Alternatively, if you pass <true>, it won't construct any array. See the
// biCopy() method for an example of this.
//
// Be sure to set maxDigits depending on your precision needs. The default
// zeroed-out array ZERO_ARRAY is constructed inside the setMaxDigits()
// function. So use this function to set the variable. DON'T JUST SET THE
// VALUE. USE THE FUNCTION.
//
// ZERO_ARRAY exists to hopefully speed up construction of BigInts(). By
// precalculating the zero array, we can just use slice(0) to make copies of
// it. Presumably this calls faster native code, as opposed to setting the
// elements one at a time. I have not done any timing tests to verify this
// claim.

// Max number = 10^16 - 2 = 9999999999999998;
//               2^53     = 9007199254740992;

var biRadixBase = 2;
var biRadixBits = 16;
var bitsPerDigit = biRadixBits;
var biRadix = 1 << 16; // = 2^16 = 65536
var biHalfRadix = biRadix >>> 1;
var biRadixSquared = biRadix * biRadix;
var maxDigitVal = biRadix - 1;
var maxInteger = 9999999999999998; 

// maxDigits:
// Change this to accommodate your largest number size. Use setMaxDigits()
// to change it!
//
// In general, if you're working with numbers of size N bits, you'll need 2*N
// bits of storage. Each digit holds 16 bits. So, a 1024-bit key will need
//
// 1024 * 2 / 16 = 128 digits of storage.
//

var maxDigits;
var ZERO_ARRAY;
var bigZero, bigOne;

function setMaxDigits(value)
{
	maxDigits = value;
	ZERO_ARRAY = new Array(maxDigits);
	for (var iza = 0; iza < ZERO_ARRAY.length; iza++) ZERO_ARRAY[iza] = 0;
	bigZero = new BigInt();
	bigOne = new BigInt();
	bigOne.digits[0] = 1;
}

setMaxDigits(20);

// The maximum number of digits in base 10 you can convert to an
// integer without JavaScript throwing up on you.
var dpl10 = 15;
// lr10 = 10 ^ dpl10
var lr10 = biFromNumber(1000000000000000);

function BigInt(flag)
{
	if (typeof flag == "boolean" && flag == true) {
		this.digits = null;
	}
	else {
		this.digits = ZERO_ARRAY.slice(0);
	}
	this.isNeg = false;
}

function biFromDecimal(s)
{
	var isNeg = s.charAt(0) == '-';
	var i = isNeg ? 1 : 0;
	var result;
	// Skip leading zeros.
	while (i < s.length && s.charAt(i) == '0') ++i;
	if (i == s.length) {
		result = new BigInt();
	}
	else {
		var digitCount = s.length - i;
		var fgl = digitCount % dpl10;
		if (fgl == 0) fgl = dpl10;
		result = biFromNumber(Number(s.substr(i, fgl)));
		i += fgl;
		while (i < s.length) {
			result = biAdd(biMultiply(result, lr10),
			               biFromNumber(Number(s.substr(i, dpl10))));
			i += dpl10;
		}
		result.isNeg = isNeg;
	}
	return result;
}

function biCopy(bi)
{
	var result = new BigInt(true);
	result.digits = bi.digits.slice(0);
	result.isNeg = bi.isNeg;
	return result;
}

function biFromNumber(i)
{
	var result = new BigInt();
	result.isNeg = i < 0;
	i = Math.abs(i);
	var j = 0;
	while (i > 0) {
		result.digits[j++] = i & maxDigitVal;
		i >>= biRadixBits;
	}
	return result;
}

function reverseStr(s)
{
	var result = "";
	for (var i = s.length - 1; i > -1; --i) {
		result += s.charAt(i);
	}
	return result;
}

var hexatrigesimalToChar = new Array(
 '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
 'u', 'v', 'w', 'x', 'y', 'z'
);

function biToString(x, radix)
	// 2 <= radix <= 36
{
	var b = new BigInt();
	b.digits[0] = radix;
	var qr = biDivideModulo(x, b);
	var result = hexatrigesimalToChar[qr[1].digits[0]];
	while (biCompare(qr[0], bigZero) == 1) {
		qr = biDivideModulo(qr[0], b);
		digit = qr[1].digits[0];
		result += hexatrigesimalToChar[qr[1].digits[0]];
	}
	return (x.isNeg ? "-" : "") + reverseStr(result);
}

function biToDecimal(x)
{
	var b = new BigInt();
	b.digits[0] = 10;
	var qr = biDivideModulo(x, b);
	var result = String(qr[1].digits[0]);
	while (biCompare(qr[0], bigZero) == 1) {
		qr = biDivideModulo(qr[0], b);
		result += String(qr[1].digits[0]);
	}
	return (x.isNeg ? "-" : "") + reverseStr(result);
}

var hexToChar = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                          'a', 'b', 'c', 'd', 'e', 'f');

function digitToHex(n)
{
	var mask = 0xf;
	var result = "";
	for (i = 0; i < 4; ++i) {
		result += hexToChar[n & mask];
		n >>>= 4;
	}
	return reverseStr(result);
}

function biToHex(x)
{
	var result = "";
	var n = biHighIndex(x);
	for (var i = biHighIndex(x); i > -1; --i) {
		result += digitToHex(x.digits[i]);
	}
	return result;
}

function charToHex(c)
{
	var ZERO = 48;
	var NINE = ZERO + 9;
	var littleA = 97;
	var littleZ = littleA + 25;
	var bigA = 65;
	var bigZ = 65 + 25;
	var result;

	if (c >= ZERO && c <= NINE) {
		result = c - ZERO;
	} else if (c >= bigA && c <= bigZ) {
		result = 10 + c - bigA;
	} else if (c >= littleA && c <= littleZ) {
		result = 10 + c - littleA;
	} else {
		result = 0;
	}
	return result;
}

function hexToDigit(s)
{
	var result = 0;
	var sl = Math.min(s.length, 4);
	for (var i = 0; i < sl; ++i) {
		result <<= 4;
		result |= charToHex(s.charCodeAt(i))
	}
	return result;
}

function biFromHex(s)
{
	var result = new BigInt();
	var sl = s.length;
	for (var i = sl, j = 0; i > 0; i -= 4, ++j) {
		result.digits[j] = hexToDigit(s.substr(Math.max(i - 4, 0), Math.min(i, 4)));
	}
	return result;
}

function biFromString(s, radix)
{
	var isNeg = s.charAt(0) == '-';
	var istop = isNeg ? 1 : 0;
	var result = new BigInt();
	var place = new BigInt();
	place.digits[0] = 1; // radix^0
	for (var i = s.length - 1; i >= istop; i--) {
		var c = s.charCodeAt(i);
		var digit = charToHex(c);
		var biDigit = biMultiplyDigit(place, digit);
		result = biAdd(result, biDigit);
		place = biMultiplyDigit(place, radix);
	}
	result.isNeg = isNeg;
	return result;
}

function biDump(b)
{
	return (b.isNeg ? "-" : "") + b.digits.join(" ");
}

function biAdd(x, y)
{
	var result;

	if (x.isNeg != y.isNeg) {
		y.isNeg = !y.isNeg;
		result = biSubtract(x, y);
		y.isNeg = !y.isNeg;
	}
	else {
		result = new BigInt();
		var c = 0;
		var n;
		for (var i = 0; i < x.digits.length; ++i) {
			n = x.digits[i] + y.digits[i] + c;
			result.digits[i] = n & 0xffff;
			c = Number(n >= biRadix);
		}
		result.isNeg = x.isNeg;
	}
	return result;
}

function biSubtract(x, y)
{
	var result;
	if (x.isNeg != y.isNeg) {
		y.isNeg = !y.isNeg;
		result = biAdd(x, y);
		y.isNeg = !y.isNeg;
	} else {
		result = new BigInt();
		var n, c;
		c = 0;
		for (var i = 0; i < x.digits.length; ++i) {
			n = x.digits[i] - y.digits[i] + c;
			result.digits[i] = n & 0xffff;
			// Stupid non-conforming modulus operation.
			if (result.digits[i] < 0) result.digits[i] += biRadix;
			c = 0 - Number(n < 0);
		}
		// Fix up the negative sign, if any.
		if (c == -1) {
			c = 0;
			for (var i = 0; i < x.digits.length; ++i) {
				n = 0 - result.digits[i] + c;
				result.digits[i] = n & 0xffff;
				// Stupid non-conforming modulus operation.
				if (result.digits[i] < 0) result.digits[i] += biRadix;
				c = 0 - Number(n < 0);
			}
			// Result is opposite sign of arguments.
			result.isNeg = !x.isNeg;
		} else {
			// Result is same sign.
			result.isNeg = x.isNeg;
		}
	}
	return result;
}

function biHighIndex(x)
{
	var result = x.digits.length - 1;
	while (result > 0 && x.digits[result] == 0) --result;
	return result;
}

function biNumBits(x)
{
	var n = biHighIndex(x);
	var d = x.digits[n];
	var m = (n + 1) * bitsPerDigit;
	var result;
	for (result = m; result > m - bitsPerDigit; --result) {
		if ((d & 0x8000) != 0) break;
		d <<= 1;
	}
	return result;
}

function biMultiply(x, y)
{
	var result = new BigInt();
	var c;
	var n = biHighIndex(x);
	var t = biHighIndex(y);
	var u, uv, k;

	for (var i = 0; i <= t; ++i) {
		c = 0;
		k = i;
		for (j = 0; j <= n; ++j, ++k) {
			uv = result.digits[k] + x.digits[j] * y.digits[i] + c;
			result.digits[k] = uv & maxDigitVal;
			c = uv >>> biRadixBits;
		}
		result.digits[i + n + 1] = c;
	}
	// Someone give me a logical xor, please.
	result.isNeg = x.isNeg != y.isNeg;
	return result;
}

function biMultiplyDigit(x, y)
{
	var n, c, uv;

	result = new BigInt();
	n = biHighIndex(x);
	c = 0;
	for (var j = 0; j <= n; ++j) {
		uv = result.digits[j] + x.digits[j] * y + c;
		result.digits[j] = uv & maxDigitVal;
		c = uv >>> biRadixBits;
	}
	result.digits[1 + n] = c;
	return result;
}

function arrayCopy(src, srcStart, dest, destStart, n)
{
	var m = Math.min(srcStart + n, src.length);
	for (var i = srcStart, j = destStart; i < m; ++i, ++j) {
		dest[j] = src[i];
	}
}

var highBitMasks = new Array(0x0000, 0x8000, 0xC000, 0xE000, 0xF000, 0xF800,
                             0xFC00, 0xFE00, 0xFF00, 0xFF80, 0xFFC0, 0xFFE0,
                             0xFFF0, 0xFFF8, 0xFFFC, 0xFFFE, 0xFFFF);

function biShiftLeft(x, n)
{
	var digitCount = Math.floor(n / bitsPerDigit);
	var result = new BigInt();
	arrayCopy(x.digits, 0, result.digits, digitCount,
	          result.digits.length - digitCount);
	var bits = n % bitsPerDigit;
	var rightBits = bitsPerDigit - bits;
	for (var i = result.digits.length - 1, i1 = i - 1; i > 0; --i, --i1) {
		result.digits[i] = ((result.digits[i] << bits) & maxDigitVal) |
		                   ((result.digits[i1] & highBitMasks[bits]) >>>
		                    (rightBits));
	}
	result.digits[0] = ((result.digits[i] << bits) & maxDigitVal);
	result.isNeg = x.isNeg;
	return result;
}

var lowBitMasks = new Array(0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,
                            0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,
                            0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF);

function biShiftRight(x, n)
{
	var digitCount = Math.floor(n / bitsPerDigit);
	var result = new BigInt();
	arrayCopy(x.digits, digitCount, result.digits, 0,
	          x.digits.length - digitCount);
	var bits = n % bitsPerDigit;
	var leftBits = bitsPerDigit - bits;
	for (var i = 0, i1 = i + 1; i < result.digits.length - 1; ++i, ++i1) {
		result.digits[i] = (result.digits[i] >>> bits) |
		                   ((result.digits[i1] & lowBitMasks[bits]) << leftBits);
	}
	result.digits[result.digits.length - 1] >>>= bits;
	result.isNeg = x.isNeg;
	return result;
}

function biMultiplyByRadixPower(x, n)
{
	var result = new BigInt();
	arrayCopy(x.digits, 0, result.digits, n, result.digits.length - n);
	return result;
}

function biDivideByRadixPower(x, n)
{
	var result = new BigInt();
	arrayCopy(x.digits, n, result.digits, 0, result.digits.length - n);
	return result;
}

function biModuloByRadixPower(x, n)
{
	var result = new BigInt();
	arrayCopy(x.digits, 0, result.digits, 0, n);
	return result;
}

function biCompare(x, y)
{
	if (x.isNeg != y.isNeg) {
		return 1 - 2 * Number(x.isNeg);
	}
	for (var i = x.digits.length - 1; i >= 0; --i) {
		if (x.digits[i] != y.digits[i]) {
			if (x.isNeg) {
				return 1 - 2 * Number(x.digits[i] > y.digits[i]);
			} else {
				return 1 - 2 * Number(x.digits[i] < y.digits[i]);
			}
		}
	}
	return 0;
}

function biDivideModulo(x, y)
{
	var nb = biNumBits(x);
	var tb = biNumBits(y);
	var origYIsNeg = y.isNeg;
	var q, r;
	if (nb < tb) {
		// |x| < |y|
		if (x.isNeg) {
			q = biCopy(bigOne);
			q.isNeg = !y.isNeg;
			x.isNeg = false;
			y.isNeg = false;
			r = biSubtract(y, x);
			// Restore signs, 'cause they're references.
			x.isNeg = true;
			y.isNeg = origYIsNeg;
		} else {
			q = new BigInt();
			r = biCopy(x);
		}
		return new Array(q, r);
	}

	q = new BigInt();
	r = x;

	// Normalize Y.
	var t = Math.ceil(tb / bitsPerDigit) - 1;
	var lambda = 0;
	while (y.digits[t] < biHalfRadix) {
		y = biShiftLeft(y, 1);
		++lambda;
		++tb;
		t = Math.ceil(tb / bitsPerDigit) - 1;
	}
	// Shift r over to keep the quotient constant. We'll shift the
	// remainder back at the end.
	r = biShiftLeft(r, lambda);
	nb += lambda; // Update the bit count for x.
	var n = Math.ceil(nb / bitsPerDigit) - 1;

	var b = biMultiplyByRadixPower(y, n - t);
	while (biCompare(r, b) != -1) {
		++q.digits[n - t];
		r = biSubtract(r, b);
	}
	for (var i = n; i > t; --i) {
    var ri = (i >= r.digits.length) ? 0 : r.digits[i];
    var ri1 = (i - 1 >= r.digits.length) ? 0 : r.digits[i - 1];
    var ri2 = (i - 2 >= r.digits.length) ? 0 : r.digits[i - 2];
    var yt = (t >= y.digits.length) ? 0 : y.digits[t];
    var yt1 = (t - 1 >= y.digits.length) ? 0 : y.digits[t - 1];
		if (ri == yt) {
			q.digits[i - t - 1] = maxDigitVal;
		} else {
			q.digits[i - t - 1] = Math.floor((ri * biRadix + ri1) / yt);
		}

		var c1 = q.digits[i - t - 1] * ((yt * biRadix) + yt1);
		var c2 = (ri * biRadixSquared) + ((ri1 * biRadix) + ri2);
		while (c1 > c2) {
			--q.digits[i - t - 1];
			c1 = q.digits[i - t - 1] * ((yt * biRadix) | yt1);
			c2 = (ri * biRadix * biRadix) + ((ri1 * biRadix) + ri2);
		}

		b = biMultiplyByRadixPower(y, i - t - 1);
		r = biSubtract(r, biMultiplyDigit(b, q.digits[i - t - 1]));
		if (r.isNeg) {
			r = biAdd(r, b);
			--q.digits[i - t - 1];
		}
	}
	r = biShiftRight(r, lambda);
	// Fiddle with the signs and stuff to make sure that 0 <= r < y.
	q.isNeg = x.isNeg != origYIsNeg;
	if (x.isNeg) {
		if (origYIsNeg) {
			q = biAdd(q, bigOne);
		} else {
			q = biSubtract(q, bigOne);
		}
		y = biShiftRight(y, lambda);
		r = biSubtract(y, r);
	}
	// Check for the unbelievably stupid degenerate case of r == -0.
	if (r.digits[0] == 0 && biHighIndex(r) == 0) r.isNeg = false;

	return new Array(q, r);
}

function biDivide(x, y)
{
	return biDivideModulo(x, y)[0];
}

function biModulo(x, y)
{
	return biDivideModulo(x, y)[1];
}

function biMultiplyMod(x, y, m)
{
	return biModulo(biMultiply(x, y), m);
}

function biPow(x, y)
{
	var result = bigOne;
	var a = x;
	while (true) {
		if ((y & 1) != 0) result = biMultiply(result, a);
		y >>= 1;
		if (y == 0) break;
		a = biMultiply(a, a);
	}
	return result;
}

function biPowMod(x, y, m)
{
	var result = bigOne;
	var a = x;
	var k = y;
	while (true) {
		if ((k.digits[0] & 1) != 0) result = biMultiplyMod(result, a, m);
		k = biShiftRight(k, 1);
		if (k.digits[0] == 0 && biHighIndex(k) == 0) break;
		a = biMultiplyMod(a, a, m);
	}
	return result;
}

// BarrettMu, a class for performing Barrett modular reduction computations in
// JavaScript.
//
// Requires BigInt.js.
//
// Copyright 2004-2005 David Shapiro.
//
// You may use, re-use, abuse, copy, and modify this code to your liking, but
// please keep this header.
//
// Thanks!
// 
// Dave Shapiro
// dave@ohdave.com 

function BarrettMu(m)
{
	this.modulus = biCopy(m);
	this.k = biHighIndex(this.modulus) + 1;
	var b2k = new BigInt();
	b2k.digits[2 * this.k] = 1; // b2k = b^(2k)
	this.mu = biDivide(b2k, this.modulus);
	this.bkplus1 = new BigInt();
	this.bkplus1.digits[this.k + 1] = 1; // bkplus1 = b^(k+1)
	this.modulo = BarrettMu_modulo;
	this.multiplyMod = BarrettMu_multiplyMod;
	this.powMod = BarrettMu_powMod;
}

function BarrettMu_modulo(x)
{
	var q1 = biDivideByRadixPower(x, this.k - 1);
	var q2 = biMultiply(q1, this.mu);
	var q3 = biDivideByRadixPower(q2, this.k + 1);
	var r1 = biModuloByRadixPower(x, this.k + 1);
	var r2term = biMultiply(q3, this.modulus);
	var r2 = biModuloByRadixPower(r2term, this.k + 1);
	var r = biSubtract(r1, r2);
	if (r.isNeg) {
		r = biAdd(r, this.bkplus1);
	}
	var rgtem = biCompare(r, this.modulus) >= 0;
	while (rgtem) {
		r = biSubtract(r, this.modulus);
		rgtem = biCompare(r, this.modulus) >= 0;
	}
	return r;
}

function BarrettMu_multiplyMod(x, y)
{
	/*
	x = this.modulo(x);
	y = this.modulo(y);
	*/
	var xy = biMultiply(x, y);
	return this.modulo(xy);
}

function BarrettMu_powMod(x, y)
{
	var result = new BigInt();
	result.digits[0] = 1;
	var a = x;
	var k = y;
	while (true) {
		if ((k.digits[0] & 1) != 0) result = this.multiplyMod(result, a);
		k = biShiftRight(k, 1);
		if (k.digits[0] == 0 && biHighIndex(k) == 0) break;
		a = this.multiplyMod(a, a);
	}
	return result;
}

// RSA, a suite of routines for performing RSA public-key computations in
// JavaScript.
//
// Requires BigInt.js and Barrett.js.
//
// Copyright 1998-2005 David Shapiro.
//
// You may use, re-use, abuse, copy, and modify this code to your liking, but
// please keep this header.
//
// Thanks!
// 
// Dave Shapiro
// dave@ohdave.com 

function RSAKeyPair(encryptionExponent, decryptionExponent, modulus)
{
	this.e = biFromHex(encryptionExponent);
	this.d = biFromHex(decryptionExponent);
	this.m = biFromHex(modulus);
	// We can do two bytes per digit, so
	// chunkSize = 2 * (number of digits in modulus - 1).
	// Since biHighIndex returns the high index, not the number of digits, 1 has
	// already been subtracted.
	this.chunkSize = 2 * biHighIndex(this.m);
	this.radix = 16;
	this.barrett = new BarrettMu(this.m);
}

function twoDigit(n)
{
	return (n < 10 ? "0" : "") + String(n);
}

function encryptedString(key, s)
	// Altered by Rob Saunders (rob@robsaunders.net). New routine pads the
	// string after it has been converted to an array. This fixes an
	// incompatibility with Flash MX's ActionScript.
{
	var a = new Array();
	var sl = s.length;
	var i = 0;
	while (i < sl) {
		a[i] = s.charCodeAt(i);
		i++;
	}

	while (a.length % key.chunkSize != 0) {
		a[i++] = 0;
	}

	var al = a.length;
	var result = "";
	var j, k, block;
	for (i = 0; i < al; i += key.chunkSize) {
		block = new BigInt();
		j = 0;
		for (k = i; k < i + key.chunkSize; ++j) {
			block.digits[j] = a[k++];
			block.digits[j] += a[k++] << 8;
		}
		var crypt = key.barrett.powMod(block, key.e);
		var text = key.radix == 16 ? biToHex(crypt) : biToString(crypt, key.radix);
		result += text + " ";
	}
	return result.substring(0, result.length - 1); // Remove last space.
}

function decryptedString(key, s)
{
	var blocks = s.split(" ");
	var result = "";
	var i, j, block;
	for (i = 0; i < blocks.length; ++i) {
		var bi;
		if (key.radix == 16) {
			bi = biFromHex(blocks[i]);
		}
		else {
			bi = biFromString(blocks[i], key.radix);
		}
		block = key.barrett.powMod(bi, key.d);
		for (j = 0; j <= biHighIndex(block); ++j) {
			result += String.fromCharCode(block.digits[j] & 255,
			                              block.digits[j] >> 8);
		}
	}
	// Remove trailing null, if any.
	if (result.charCodeAt(result.length - 1) == 0) {
		result = result.substring(0, result.length - 1);
	}
	return result;
}
window.BMap_loadScriptTime = (new Date).getTime();window.BMAP_AUTHENTIC_KEY="uMVQ0CciKQ3IuGCPkYjntAMD";(function(){function aa(a){throw a;}var j=void 0,o=!0,p=null,q=!1;function s(){return function(){}}function ba(a){return function(b){this[a]=b}}function u(a){return function(){return this[a]}}function da(a){return function(){return a}}var ea,fa=[];function ha(a){return function(){return fa[a].apply(this,arguments)}}function ia(a,b){return fa[a]=b}var ja,w=ja=w||{version:"1.3.4"};w.Q="$BAIDU$";window[w.Q]=window[w.Q]||{};w.object=w.object||{}; w.extend=w.object.extend=function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a};w.C=w.C||{};w.C.N=function(a){return"string"==typeof a||a instanceof String?document.getElementById(a):a&&a.nodeName&&(1==a.nodeType||9==a.nodeType)?a:p};w.N=w.pc=w.C.N;w.C.J=function(a){a=w.C.N(a);a.style.display="none";return a};w.J=w.C.J;w.lang=w.lang||{};w.lang.cg=function(a){return"[object String]"==Object.prototype.toString.call(a)};w.cg=w.lang.cg; w.C.uj=function(a){return w.lang.cg(a)?document.getElementById(a):a};w.uj=w.C.uj;w.C.contains=function(a,b){var c=w.C.uj,a=c(a),b=c(b);return a.contains?a!=b&&a.contains(b):!!(a.compareDocumentPosition(b)&16)};w.S=w.S||{};/msie (\d+\.\d)/i.test(navigator.userAgent)&&(w.S.ba=w.ba=document.documentMode||+RegExp.$1);var la={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",rowspan:"rowSpan",valign:"vAlign",usemap:"useMap",frameborder:"frameBorder"}; 8>w.S.ba?(la["for"]="htmlFor",la["class"]="className"):(la.htmlFor="for",la.className="class");w.C.kF=la;w.C.bE=function(a,b,c){a=w.C.N(a);if("style"==b)a.style.cssText=c;else{b=w.C.kF[b]||b;a.setAttribute(b,c)}return a};w.bE=w.C.bE;w.C.cE=function(a,b){var a=w.C.N(a),c;for(c in b)w.C.bE(a,c,b[c]);return a};w.cE=w.C.cE;w.qk=w.qk||{};(function(){var a=RegExp("(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+$)","g");w.qk.trim=function(b){return(""+b).replace(a,"")}})();w.trim=w.qk.trim; w.qk.Kl=function(a,b){var a=""+a,c=Array.prototype.slice.call(arguments,1),d=Object.prototype.toString;if(c.length){c=c.length==1?b!==p&&/\[object Array\]|\[object Object\]/.test(d.call(b))?b:c:c;return a.replace(/#\{(.+?)\}/g,function(a,b){var g=c[b];"[object Function]"==d.call(g)&&(g=g(b));return"undefined"==typeof g?"":g})}return a};w.Kl=w.qk.Kl; w.C.Ub=function(a,b){for(var a=w.C.N(a),c=a.className.split(/\s+/),d=b.split(/\s+/),e,f=d.length,g,i=0;i<f;++i){g=0;for(e=c.length;g<e;++g)if(c[g]==d[i]){c.splice(g,1);break}}a.className=c.join(" ");return a};w.Ub=w.C.Ub; w.C.Fw=function(a,b,c){var a=w.C.N(a),d;if(a.insertAdjacentHTML)a.insertAdjacentHTML(b,c);else{d=a.ownerDocument.createRange();b=b.toUpperCase();if(b=="AFTERBEGIN"||b=="BEFOREEND"){d.selectNodeContents(a);d.collapse(b=="AFTERBEGIN")}else{b=b=="BEFOREBEGIN";d[b?"setStartBefore":"setEndAfter"](a);d.collapse(b)}d.insertNode(d.createContextualFragment(c))}return a};w.Fw=w.C.Fw;w.C.show=function(a){a=w.C.N(a);a.style.display="";return a};w.show=w.C.show; w.C.BC=function(a){a=w.C.N(a);return a.nodeType==9?a:a.ownerDocument||a.document};w.C.Wa=function(a,b){for(var a=w.C.N(a),c=b.split(/\s+/),d=a.className,e=" "+d+" ",f=0,g=c.length;f<g;f++)e.indexOf(" "+c[f]+" ")<0&&(d=d+(" "+c[f]));a.className=d;return a};w.Wa=w.C.Wa;w.C.CA=w.C.CA||{};w.C.gl=w.C.gl||[];w.C.gl.filter=function(a,b,c){for(var d=0,e=w.C.gl,f;f=e[d];d++)if(f=f[c])b=f(a,b);return b};w.qk.zM=function(a){return a.indexOf("-")<0&&a.indexOf("_")<0?a:a.replace(/[-_][^-_]/g,function(a){return a.charAt(1).toUpperCase()})}; w.C.q1=function(a,b){w.C.ds(a,b)?w.C.Ub(a,b):w.C.Wa(a,b)};w.C.ds=function(a){if(arguments.length<=0||typeof a==="function")return this;if(this.size()<=0)return q;var a=a.replace(/^\s+/g,"").replace(/\s+$/g,"").replace(/\s+/g," "),b=a.split(" "),c;w.forEach(this,function(a){for(var a=a.className,e=0;e<b.length;e++)if(!~(" "+a+" ").indexOf(" "+b[e]+" ")){c=q;return}c!==q&&(c=o)});return c}; w.C.Xi=function(a,b){var c=w.C,a=c.N(a),b=w.qk.zM(b),d=a.style[b];if(!d)var e=c.CA[b],d=a.currentStyle||(w.S.ba?a.style:getComputedStyle(a,p)),d=e&&e.get?e.get(a,d):d[e||b];if(e=c.gl)d=e.filter(b,d,"get");return d};w.Xi=w.C.Xi;/opera\/(\d+\.\d)/i.test(navigator.userAgent)&&(w.S.opera=+RegExp.$1);w.S.BK=/webkit/i.test(navigator.userAgent);w.S.SV=/gecko/i.test(navigator.userAgent)&&!/like gecko/i.test(navigator.userAgent);w.S.mD="CSS1Compat"==document.compatMode; w.C.V=function(a){var a=w.C.N(a),b=w.C.BC(a),c=w.S,d=w.C.Xi;c.SV>0&&b.getBoxObjectFor&&d(a,"position");var e={left:0,top:0},f;if(a==(c.ba&&!c.mD?b.body:b.documentElement))return e;if(a.getBoundingClientRect){a=a.getBoundingClientRect();e.left=Math.floor(a.left)+Math.max(b.documentElement.scrollLeft,b.body.scrollLeft);e.top=Math.floor(a.top)+Math.max(b.documentElement.scrollTop,b.body.scrollTop);e.left=e.left-b.documentElement.clientLeft;e.top=e.top-b.documentElement.clientTop;a=b.body;b=parseInt(d(a, "borderLeftWidth"));d=parseInt(d(a,"borderTopWidth"));if(c.ba&&!c.mD){e.left=e.left-(isNaN(b)?2:b);e.top=e.top-(isNaN(d)?2:d)}}else{f=a;do{e.left=e.left+f.offsetLeft;e.top=e.top+f.offsetTop;if(c.BK>0&&d(f,"position")=="fixed"){e.left=e.left+b.body.scrollLeft;e.top=e.top+b.body.scrollTop;break}f=f.offsetParent}while(f&&f!=a);if(c.opera>0||c.BK>0&&d(a,"position")=="absolute")e.top=e.top-b.body.offsetTop;for(f=a.offsetParent;f&&f!=b.body;){e.left=e.left-f.scrollLeft;if(!c.opera||f.tagName!="TR")e.top= e.top-f.scrollTop;f=f.offsetParent}}return e};/firefox\/(\d+\.\d)/i.test(navigator.userAgent)&&(w.S.Ig=+RegExp.$1);/BIDUBrowser/i.test(navigator.userAgent)&&(w.S.QZ=o);var ma=navigator.userAgent;/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(ma)&&!/chrome/i.test(ma)&&(w.S.VL=+(RegExp.$1||RegExp.$2));/chrome\/(\d+\.\d)/i.test(navigator.userAgent)&&(w.S.EI=+RegExp.$1);w.Wb=w.Wb||{};w.Wb.Db=function(a,b){var c,d,e=a.length;if("function"==typeof b)for(d=0;d<e;d++){c=a[d];c=b.call(a,c,d);if(c===q)break}return a}; w.Db=w.Wb.Db;w.lang.Q=function(){return"TANGRAM__"+(window[w.Q]._counter++).toString(36)};window[w.Q]._counter=window[w.Q]._counter||1;window[w.Q]._instances=window[w.Q]._instances||{};w.lang.ls=function(a){return"[object Function]"==Object.prototype.toString.call(a)};w.lang.ra=function(a){this.Q=a||w.lang.Q();window[w.Q]._instances[this.Q]=this};window[w.Q]._instances=window[w.Q]._instances||{};w.lang.ra.prototype.Jh=ha(0); w.lang.ra.prototype.toString=function(){return"[object "+(this.xO||"Object")+"]"};w.lang.Ux=function(a,b){this.type=a;this.returnValue=o;this.target=b||p;this.currentTarget=p};w.lang.ra.prototype.addEventListener=function(a,b,c){if(w.lang.ls(b)){!this.ki&&(this.ki={});var d=this.ki,e;if(typeof c=="string"&&c){/[^\w\-]/.test(c)&&aa("nonstandard key:"+c);e=b.dK=c}a.indexOf("on")!=0&&(a="on"+a);typeof d[a]!="object"&&(d[a]={});e=e||w.lang.Q();b.dK=e;d[a][e]=b}}; w.lang.ra.prototype.removeEventListener=function(a,b){if(w.lang.ls(b))b=b.dK;else if(!w.lang.cg(b))return;!this.ki&&(this.ki={});a.indexOf("on")!=0&&(a="on"+a);var c=this.ki;c[a]&&c[a][b]&&delete c[a][b]}; w.lang.ra.prototype.dispatchEvent=function(a,b){w.lang.cg(a)&&(a=new w.lang.Ux(a));!this.ki&&(this.ki={});var b=b||{},c;for(c in b)a[c]=b[c];var d=this.ki,e=a.type;a.target=a.target||this;a.currentTarget=this;e.indexOf("on")!=0&&(e="on"+e);w.lang.ls(this[e])&&this[e].apply(this,arguments);if(typeof d[e]=="object")for(c in d[e])d[e][c].apply(this,arguments);return a.returnValue}; w.lang.ia=function(a,b,c){var d,e,f=a.prototype;e=new Function;e.prototype=b.prototype;e=a.prototype=new e;for(d in f)e[d]=f[d];a.prototype.constructor=a;a.bY=b.prototype;if("string"==typeof c)e.xO=c};w.ia=w.lang.ia;w.lang.Jd=function(a){return window[w.Q]._instances[a]||p};w.platform=w.platform||{};w.platform.uK=/macintosh/i.test(navigator.userAgent);w.platform.k0=/MicroMessenger/i.test(navigator.userAgent);w.platform.CK=/windows/i.test(navigator.userAgent);w.platform.ZV=/x11/i.test(navigator.userAgent);w.platform.bk=/android/i.test(navigator.userAgent);/android (\d+\.\d)/i.test(navigator.userAgent)&&(w.platform.pI=w.pI=RegExp.$1);w.platform.UV=/ipad/i.test(navigator.userAgent);w.platform.iD=/iphone/i.test(navigator.userAgent); function na(a,b){a.domEvent=b=window.event||b;a.clientX=b.clientX||b.pageX;a.clientY=b.clientY||b.pageY;a.offsetX=b.offsetX||b.layerX;a.offsetY=b.offsetY||b.layerY;a.screenX=b.screenX;a.screenY=b.screenY;a.ctrlKey=b.ctrlKey||b.metaKey;a.shiftKey=b.shiftKey;a.altKey=b.altKey;if(b.touches){a.touches=[];for(var c=0;c<b.touches.length;c++)a.touches.push({clientX:b.touches[c].clientX,clientY:b.touches[c].clientY,screenX:b.touches[c].screenX,screenY:b.touches[c].screenY,pageX:b.touches[c].pageX,pageY:b.touches[c].pageY, target:b.touches[c].target,identifier:b.touches[c].identifier})}if(b.changedTouches){a.changedTouches=[];for(c=0;c<b.changedTouches.length;c++)a.changedTouches.push({clientX:b.changedTouches[c].clientX,clientY:b.changedTouches[c].clientY,screenX:b.changedTouches[c].screenX,screenY:b.changedTouches[c].screenY,pageX:b.changedTouches[c].pageX,pageY:b.changedTouches[c].pageY,target:b.changedTouches[c].target,identifier:b.changedTouches[c].identifier})}if(b.targetTouches){a.targetTouches=[];for(c=0;c< b.targetTouches.length;c++)a.targetTouches.push({clientX:b.targetTouches[c].clientX,clientY:b.targetTouches[c].clientY,screenX:b.targetTouches[c].screenX,screenY:b.targetTouches[c].screenY,pageX:b.targetTouches[c].pageX,pageY:b.targetTouches[c].pageY,target:b.targetTouches[c].target,identifier:b.targetTouches[c].identifier})}a.rotation=b.rotation;a.scale=b.scale;return a}w.lang.Rv=function(a){var b=window[w.Q];b.zQ&&delete b.zQ[a]};w.event={}; w.F=w.event.F=function(a,b,c){if(!(a=w.N(a)))return a;b=b.replace(/^on/,"");a.addEventListener?a.addEventListener(b,c,q):a.attachEvent&&a.attachEvent("on"+b,c);return a};w.ge=w.event.ge=function(a,b,c){if(!(a=w.N(a)))return a;b=b.replace(/^on/,"");a.removeEventListener?a.removeEventListener(b,c,q):a.detachEvent&&a.detachEvent("on"+b,c);return a}; w.C.ds=function(a,b){if(!a||!a.className||typeof a.className!="string")return q;var c=-1;try{c=a.className==b||a.className.search(RegExp("(\\s|^)"+b+"(\\s|$)"))}catch(d){return q}return c>-1};w.oJ=function(){function a(a){document.addEventListener&&(this.element=a,this.rJ=this.Yj?"touchstart":"mousedown",this.jC=this.Yj?"touchmove":"mousemove",this.iC=this.Yj?"touchend":"mouseup",this.Vg=q,this.ct=this.bt=0,this.element.addEventListener(this.rJ,this,q),ja.F(this.element,"mousedown",s()),this.handleEvent(p))}a.prototype={Yj:"ontouchstart"in window||"createTouch"in document,start:function(a){oa(a);this.Vg=q;this.bt=this.Yj?a.touches[0].clientX:a.clientX;this.ct=this.Yj?a.touches[0].clientY: a.clientY;this.element.addEventListener(this.jC,this,q);this.element.addEventListener(this.iC,this,q)},move:function(a){pa(a);var c=this.Yj?a.touches[0].clientY:a.clientY;if(10<Math.abs((this.Yj?a.touches[0].clientX:a.clientX)-this.bt)||10<Math.abs(c-this.ct))this.Vg=o},end:function(a){pa(a);this.Vg||(a=document.createEvent("Event"),a.initEvent("tap",q,o),this.element.dispatchEvent(a));this.element.removeEventListener(this.jC,this,q);this.element.removeEventListener(this.iC,this,q)},handleEvent:function(a){if(a)switch(a.type){case this.rJ:this.start(a); break;case this.jC:this.move(a);break;case this.iC:this.end(a)}}};return function(b){return new a(b)}}();var z=window.BMap||{};z.version="2.0";z.$H=0.34>Math.random();0<=z.version.indexOf("#")&&(z.version="2.0");z.Iq=[];z.Ee=function(a){this.Iq.push(a)};z.yq=[];z.nm=function(a){this.yq.push(a)};z.LS=z.apiLoad||s();var qa=window.BMAP_AUTHENTIC_KEY;window.BMAP_AUTHENTIC_KEY=p;var ra=window.BMap_loadScriptTime,sa=(new Date).getTime(),ta=p,ua=o,va=p,wa=5042,xa=5002,ya=5003,Aa="load_mapclick",Ba=5038,Ca=5041,Da=5047,Ea=5036,Fa=5039,Ga=5037,Ha=5040,Ia=5011,Ja=7E3;function Ka(a,b){if(a=w.N(a)){var c=this;w.lang.ra.call(c);b=b||{};c.D={hB:200,Pb:o,$v:q,aC:o,Jr:o,Mr:q,dC:o,Kr:o,Yv:o,Zn:b.enable3DBuilding||q,Uc:25,VY:240,zS:450,Hb:E.Hb,gd:E.gd,Hw:!!b.Hw,kd:b.minZoom||1,Wc:b.maxZoom||19,ib:b.mapType||La,X0:q,Zv:o,Wv:500,gU:b.enableHighResolution!==q,Qi:b.enableMapClick!==q,devicePixelRatio:b.devicePixelRatio||window.devicePixelRatio||1,AE:b.vectorMapLevel||(G()?3:99),ae:b.mapStyle||p,gW:b.logoControl===q?q:o,TS:["chrome"],Av:b.beforeClickIcon||p};c.D.ae&&(this.JV(c.D.ae.controls), this.oK(c.D.ae.geotableId));c.D.ae&&c.D.ae.styleId&&c.Y_(c.D.ae.styleId);c.D.Bl={dark:{backColor:"#2D2D2D",textColor:"#bfbfbf",iconUrl:"dicons"},normal:{backColor:"#F3F1EC",textColor:"#c61b1b",iconUrl:"icons"},light:{backColor:"#EBF8FC",textColor:"#017fb4",iconUrl:"licons"}};b.enableAutoResize&&(c.D.Yv=b.enableAutoResize);w.platform.bk&&1.5<window.devicePixelRatio&&(c.D.devicePixelRatio=1.5);var d=c.D.TS;if(G())for(var e=0,f=d.length;e<f;e++)if(w.S[d[e]]){c.D.devicePixelRatio=1;break}d=-1<navigator.userAgent.toLowerCase().indexOf("android"); e=-1<navigator.userAgent.toLowerCase().indexOf("mqqbrowser");if(-1<navigator.userAgent.toLowerCase().indexOf("UCBrowser")||d&&e)c.D.AE=99,c.D.gU=q,c.D.devicePixelRatio=1;c.Ha=a;c.vA(a);a.unselectable="on";a.innerHTML="";a.appendChild(c.ma());b.size&&this.od(b.size);d=c.Ib();c.width=d.width;c.height=d.height;c.offsetX=0;c.offsetY=0;c.platform=a.firstChild;c.be=c.platform.firstChild;c.be.style.width=c.width+"px";c.be.style.height=c.height+"px";c.Sd={};c.vf=new H(0,0);c.uc=new H(0,0);c.Ba=3;c.yc=0;c.AB= p;c.zB=p;c.Ob="";c.Ev="";c.qh={};c.qh.custom={};c.Ia=0;c.G=new Na(a,{yf:"api"});c.G.J();c.G.eE(c);b=b||{};d=c.ib=c.D.ib;c.de=d.mo();d===Oa&&Pa(xa);d===Qa&&Pa(ya);d=c.D;d.SM=b.minZoom;d.RM=b.maxZoom;c.Yt();c.H={vc:q,Tb:0,rs:0,HK:0,o0:0,$A:q,PD:-1,ze:[]};c.platform.style.cursor=c.D.Hb;for(e=0;e<z.Iq.length;e++)z.Iq[e](c);c.H.PD=e;c.P();I.load("map",function(){c.ob()});c.D.Qi&&(setTimeout(function(){Pa(Aa)},1E3),I.load("mapclick",function(){window.MPC_Mgr=window.MPC_Mgr||{};window.MPC_Mgr[c.Q]=new Sa(c)}, o));Ta()&&I.load("oppc",function(){c.my()});G()&&I.load("opmb",function(){c.my()});a=p;c.JA=[]}}w.lang.ia(Ka,w.lang.ra,"Map"); w.extend(Ka.prototype,{ma:function(){var a=J("div"),b=a.style;b.overflow="visible";b.position="absolute";b.zIndex="0";b.top=b.left="0px";var b=J("div",{"class":"BMap_mask"}),c=b.style;c.position="absolute";c.top=c.left="0px";c.zIndex="9";c.overflow="hidden";c.WebkitUserSelect="none";a.appendChild(b);return a},vA:function(a){var b=a.style;b.overflow="hidden";"absolute"!=Ua(a).position&&(b.position="relative",b.zIndex=0);b.backgroundColor="#F3F1EC";b.color="#000";b.textAlign="left"},P:function(){var a= this;a.er=function(){var b=a.Ib();if(a.width!=b.width||a.height!=b.height){var c=new K(a.width,a.height),d=new L("onbeforeresize");d.size=c;a.dispatchEvent(d);a.Hj((b.width-a.width)/2,(b.height-a.height)/2);a.be.style.width=(a.width=b.width)+"px";a.be.style.height=(a.height=b.height)+"px";c=new L("onresize");c.size=b;a.dispatchEvent(c)}};a.D.Yv&&(a.H.ir=setInterval(a.er,80))},Hj:function(a,b,c,d){var e=this.ja().lc(this.U()),f=this.de,g=o;c&&H.tK(c)&&(this.vf=new H(c.lng,c.lat),g=q);if(c=c&&d?f.em(c, this.Ob):this.uc)if(this.uc=new H(c.lng+a*e,c.lat-b*e),(a=f.Th(this.uc,this.Ob))&&g)this.vf=a},og:function(a,b){if(Va(a)&&(this.Yt(),a=this.fn(a).zoom,a!=this.Ba)){this.yc=this.Ba;this.Ba=a;var c;b?c=b:this.Mg()&&(c=this.Mg().V());c&&(c=this.Rb(c,this.yc),this.Hj(this.width/2-c.x,this.height/2-c.y,this.kb(c,this.yc),o));this.dispatchEvent(new L("onzoomstart"));this.dispatchEvent(new L("onzoomstartcode"))}},zc:function(a){this.og(a)},EE:function(a){this.og(this.Ba+1,a)},FE:function(a){this.og(this.Ba- 1,a)},Xh:function(a){a instanceof H&&(this.uc=this.de.em(a,this.Ob),this.vf=H.tK(a)?new H(a.lng,a.lat):this.de.Th(this.uc,this.Ob))},hg:function(a,b){a=Math.round(a)||0;b=Math.round(b)||0;this.Hj(-a,-b)},qv:function(a){a&&Wa(a.Ke)&&(a.Ke(this),this.dispatchEvent(new L("onaddcontrol",a)))},LL:function(a){a&&Wa(a.remove)&&(a.remove(),this.dispatchEvent(new L("onremovecontrol",a)))},In:function(a){a&&Wa(a.fa)&&(a.fa(this),this.dispatchEvent(new L("onaddcontextmenu",a)))},Jo:function(a){a&&Wa(a.remove)&& (this.dispatchEvent(new L("onremovecontextmenu",a)),a.remove())},wa:function(a){a&&Wa(a.Ke)&&(a.Ke(this),this.dispatchEvent(new L("onaddoverlay",a)))},Fb:function(a){a&&Wa(a.remove)&&(a.remove(),this.dispatchEvent(new L("onremoveoverlay",a)))},HI:function(){this.dispatchEvent(new L("onclearoverlays"))},Dg:function(a){a&&this.dispatchEvent(new L("onaddtilelayer",a))},$g:function(a){a&&this.dispatchEvent(new L("onremovetilelayer",a))},lg:function(a){if(this.ib!==a){var b=new L("onsetmaptype");b.O0= this.ib;this.ib=this.D.ib=a;this.de=this.ib.mo();this.Hj(0,0,this.ya(),o);this.Yt();var c=this.fn(this.U()).zoom;this.og(c);this.dispatchEvent(b);b=new L("onmaptypechange");b.Ba=c;b.ib=a;this.dispatchEvent(b);(a===Xa||a===Qa)&&Pa(ya)}},Ff:function(a){var b=this;if(a instanceof H)b.Xh(a,{noAnimation:o});else if(Ya(a))if(b.ib==Oa){var c=E.dB[a];c&&(pt=c.m,b.Ff(pt))}else{var d=this.mG();d.hE(function(c){0==d.Rl()&&2==d.ua.result.type&&(b.Ff(c.Wj(0).point),Oa.Sj(a)&&b.dE(a))});d.search(a,{log:"center"})}}, Vd:function(a,b){"[object Undefined]"!==Object.prototype.toString.call(b)&&(b=parseInt(b));va=G()?Za.ii.Nj(z.$H?102:101):Za.ii.Nj(1);va.dt();va.fy=+new Date;va.Xb("script_loaded",sa-ra);va.Xb("centerAndZoom");var c=this;if(Ya(a))if(c.ib==Oa){var d=E.dB[a];d&&(pt=d.m,c.Vd(pt,b))}else{var e=c.mG();e.hE(function(d){if(0==e.Rl()&&2==e.ua.result.type){var d=d.Wj(0).point,f=b||N.wC(e.ua.content.level,c);c.Vd(d,f);Oa.Sj(a)&&c.dE(a)}});e.search(a,{log:"center"})}else if(a instanceof H&&b){b=c.fn(b).zoom; c.yc=c.Ba||b;c.Ba=b;d=c.vf;c.vf=new H(a.lng,a.lat);c.uc=c.de.em(c.vf,c.Ob);c.AB=c.AB||c.Ba;c.zB=c.zB||c.vf;var f=new L("onload"),g=new L("onloadcode");f.point=new H(a.lng,a.lat);f.pixel=c.Rb(c.vf,c.Ba);f.zoom=b;c.loaded||(c.loaded=o,c.dispatchEvent(f),ta||(ta=$a()));c.dispatchEvent(g);f=new L("onmoveend");f.RF="centerAndZoom";d.Xa(c.vf)||c.dispatchEvent(f);c.dispatchEvent(new L("onmoveend"));c.yc!=c.Ba&&(d=new L("onzoomend"),d.RF="centerAndZoom",c.dispatchEvent(d));c.D.Zn&&c.Zn()}},mG:function(){this.H.MK|| (this.H.MK=new bb(1));return this.H.MK},reset:function(){this.Vd(this.zB,this.AB,o)},enableDragging:function(){this.D.Pb=o},disableDragging:function(){this.D.Pb=q},enableInertialDragging:function(){this.D.Zv=o},disableInertialDragging:function(){this.D.Zv=q},enableScrollWheelZoom:function(){this.D.Mr=o},disableScrollWheelZoom:function(){this.D.Mr=q},enableContinuousZoom:function(){this.D.Jr=o},disableContinuousZoom:function(){this.D.Jr=q},enableDoubleClickZoom:function(){this.D.aC=o},disableDoubleClickZoom:function(){this.D.aC= q},enableKeyboard:function(){this.D.$v=o},disableKeyboard:function(){this.D.$v=q},enablePinchToZoom:function(){this.D.Kr=o},disablePinchToZoom:function(){this.D.Kr=q},enableAutoResize:function(){this.D.Yv=o;this.er();this.H.ir||(this.H.ir=setInterval(this.er,80))},disableAutoResize:function(){this.D.Yv=q;this.H.ir&&(clearInterval(this.H.ir),this.H.ir=p)},Zn:function(){this.D.Zn=o;this.Wm||(this.Wm=new cb({vJ:o}),this.Dg(this.Wm))},RT:function(){this.D.Zn=q;this.Wm&&(this.$g(this.Wm),this.Wm=p,delete this.Wm)}, Ib:function(){return this.wr&&this.wr instanceof K?new K(this.wr.width,this.wr.height):new K(this.Ha.clientWidth,this.Ha.clientHeight)},od:function(a){a&&a instanceof K?(this.wr=a,this.Ha.style.width=a.width+"px",this.Ha.style.height=a.height+"px"):this.wr=p},ya:u("vf"),U:u("Ba"),lT:function(){this.er()},fn:function(a){var b=this.D.kd,c=this.D.Wc,d=q;a<b&&(d=o,a=b);a>c&&(d=o,a=c);return{zoom:a,kC:d}},Ea:u("Ha"),Rb:function(a,b){b=b||this.U();return this.de.Rb(a,b,this.uc,this.Ib(),this.Ob)},kb:function(a, b){b=b||this.U();return this.de.kb(a,b,this.uc,this.Ib(),this.Ob)},De:function(a,b){if(a){var c=this.Rb(new H(a.lng,a.lat),b);c.x-=this.offsetX;c.y-=this.offsetY;return c}},BL:function(a,b){if(a){var c=new P(a.x,a.y);c.x+=this.offsetX;c.y+=this.offsetY;return this.kb(c,b)}},pointToPixelFor3D:function(a,b){var c=map.Ob;this.ib==Oa&&c&&db.NI(a,this,b)},J0:function(a,b){var c=map.Ob;this.ib==Oa&&c&&db.MI(a,this,b)},K0:function(a,b){var c=this,d=map.Ob;c.ib==Oa&&d&&db.NI(a,c,function(a){a.x-=c.offsetX; a.y-=c.offsetY;b&&b(a)})},I0:function(a,b){var c=map.Ob;this.ib==Oa&&c&&(a.x+=this.offsetX,a.y+=this.offsetY,db.MI(a,this,b))},Id:function(a){if(!this.Gw())return new eb;var b=a||{},a=b.margins||[0,0,0,0],c=b.zoom||p,b=this.kb({x:a[3],y:this.height-a[2]},c),a=this.kb({x:this.width-a[1],y:a[0]},c);return new eb(b,a)},Gw:function(){return!!this.loaded},JP:function(a,b){for(var c=this.ja(),d=b.margins||[10,10,10,10],e=b.zoomFactor||0,f=d[1]+d[3],d=d[0]+d[2],g=c.ho(),i=c=c.Ol();i>=g;i--){var k=this.ja().lc(i); if(a.uE().lng/k<this.width-f&&a.uE().lat/k<this.height-d)break}i+=e;i<g&&(i=g);i>c&&(i=c);return i},cs:function(a,b){var c={center:this.ya(),zoom:this.U()};if(!a||!a instanceof eb&&0==a.length||a instanceof eb&&a.cj())return c;var d=[];a instanceof eb?(d.push(a.zf()),d.push(a.Be())):d=a.slice(0);for(var b=b||{},e=[],f=0,g=d.length;f<g;f++)e.push(this.de.em(d[f],this.Ob));d=new eb;for(f=e.length-1;0<=f;f--)d.extend(e[f]);if(d.cj())return c;c=d.ya();e=this.JP(d,b);b.margins&&(d=b.margins,f=(d[1]-d[3])/ 2,d=(d[0]-d[2])/2,g=this.ja().lc(e),b.offset&&(f=b.offset.width,d=b.offset.height),c.lng+=g*f,c.lat+=g*d);c=this.de.Th(c,this.Ob);return{center:c,zoom:e}},bh:function(a,b){var c;c=a&&a.center?a:this.cs(a,b);var b=b||{},d=b.delay||200;if(c.zoom==this.Ba&&b.enableAnimation!=q){var e=this;setTimeout(function(){e.Xh(c.center,{duration:210})},d)}else this.Vd(c.center,c.zoom)},Bf:u("Sd"),Mg:function(){return this.H.Ya&&this.H.Ya.Ja()?this.H.Ya:p},getDistance:function(a,b){if(a&&b){if(a.Xa(b))return 0;var c= 0,c=Q.eo(a,b);if(c==p||c==j)c=0;return c}},MC:function(){var a=[],b=this.ka,c=this.je;if(b)for(var d in b)b[d]instanceof fb&&a.push(b[d]);if(c){d=0;for(b=c.length;d<b;d++)a.push(c[d])}return a},ja:u("ib"),my:function(){for(var a=this.H.PD;a<z.Iq.length;a++)z.Iq[a](this);this.H.PD=a},dE:function(a){this.Ob=Oa.Sj(a);this.Ev=Oa.FJ(this.Ob);this.ib==Oa&&this.de instanceof gb&&(this.de.tB=this.Ob)},setDefaultCursor:function(a){this.D.Hb=a;this.platform&&(this.platform.style.cursor=this.D.Hb)},getDefaultCursor:function(){return this.D.Hb}, setDraggingCursor:function(a){this.D.gd=a},getDraggingCursor:function(){return this.D.gd},Og:da(q),sv:function(a,b){b?this.qh[b]||(this.qh[b]={}):b="custom";a.tag=b;a instanceof hb&&(this.qh[b][a.Q]=a,a.fa(this));var c=this;I.load("hotspot",function(){c.my()},o)},VW:function(a,b){b||(b="custom");this.qh[b][a.Q]&&delete this.qh[b][a.Q]},zl:function(a){a||(a="custom");this.qh[a]={}},Yt:function(){var a=this.Og()?this.ib.k.BV:this.ib.ho(),b=this.Og()?this.ib.k.Cw:this.ib.Ol(),c=this.D;c.kd=c.SM||a;c.Wc= c.RM||b;c.kd<a&&(c.kd=a);c.Wc>b&&(c.Wc=b)},setMinZoom:function(a){a>this.D.Wc&&(a=this.D.Wc);this.D.SM=a;this.RH()},setMaxZoom:function(a){a<this.D.kd&&(a=this.D.kd);this.D.RM=a;this.RH()},RH:function(){this.Yt();var a=this.D;this.Ba<a.kd?this.zc(a.kd):this.Ba>a.Wc&&this.zc(a.Wc);var b=new L("onzoomspanchange");b.kd=a.kd;b.Wc=a.Wc;this.dispatchEvent(b)},$_:u("JA"),getKey:function(){return qa},Os:function(a){var b=this;window.MPC_Mgr&&window.MPC_Mgr[b.Q]&&window.MPC_Mgr[b.Q].close();b.D.Qi=q;if(a){b= this;a.styleJson&&(a.styleStr=b.ZX(a.styleJson));G()&&w.S.VL?setTimeout(function(){b.D.ae=a;b.dispatchEvent(new L("onsetcustomstyles",a))},50):(this.D.ae=a,this.dispatchEvent(new L("onsetcustomstyles",a)),this.oK(b.D.ae.geotableId));var c={style:a.style};a.features&&0<a.features.length&&(c.features=o);a.styleJson&&0<a.styleJson.length&&(c.styleJson=o);Pa(5050,c);a.style&&(c=b.D.Bl[a.style]?b.D.Bl[a.style].backColor:b.D.Bl.normal.backColor)&&(this.Ea().style.backgroundColor=c)}},JV:function(a){this.controls|| (this.controls={navigationControl:new ib,scaleControl:new jb,overviewMapControl:new lb,mapTypeControl:new mb});var b=this,c;for(c in this.controls)b.LL(b.controls[c]);a=a||[];w.Wb.Db(a,function(a){b.qv(b.controls[a])})},oK:function(a){a?this.ur&&this.ur.Of==a||(this.$g(this.ur),this.ur=new ob({geotableId:a}),this.Dg(this.ur)):this.$g(this.ur)},Mb:function(){var a=this.U()>=this.D.AE&&this.ja()==La&&18>=this.U(),b=q;try{document.createElement("canvas").getContext("2d"),b=o}catch(c){b=q}return a&&b}, getCurrentCity:function(){return{name:this.Rn,code:this.XA}},getPanorama:u("G"),setPanorama:function(a){this.G=a;this.G.eE(this)},ZX:function(a){for(var b={featureType:"t",elementType:"e",visibility:"v",color:"c",lightness:"l",saturation:"s",weight:"w",zoom:"z",hue:"h"},c={all:"all",geometry:"g","geometry.fill":"g.f","geometry.stroke":"g.s",labels:"l","labels.text.fill":"l.t.f","labels.text.stroke":"l.t.s","lables.text":"l.t","labels.icon":"l.i"},d=[],e=0,f;f=a[e];e++){var g=f.stylers;delete f.stylers; w.extend(f,g);var g=[],i;for(i in b)f[i]&&("elementType"==i?g.push(b[i]+":"+c[f[i]]):g.push(b[i]+":"+f[i]));2<g.length&&d.push(g.join("|"))}return d.join(",")}}); function Pa(a,b){if(a){var b=b||{},c="",d;for(d in b)c=c+"&"+d+"="+encodeURIComponent(b[d]);var e=function(a){a&&(pb=o,setTimeout(function(){qb.src=z.tc+"images/blank.gif?"+a.src},50))},f=function(){var a=rb.shift();a&&e(a)};d=(1E8*Math.random()).toFixed(0);pb?rb.push({src:"product=jsapi&sub_product=jsapi&v="+z.version+"&sub_product_v="+z.version+"&t="+d+"&code="+a+"&da_src="+a+c}):e({src:"product=jsapi&sub_product=jsapi&v="+z.version+"&sub_product_v="+z.version+"&t="+d+"&code="+a+"&da_src="+a+c}); sb||(w.F(qb,"load",function(){pb=q;f()}),w.F(qb,"error",function(){pb=q;f()}),sb=o)}}var pb,sb,rb=[],qb=new Image;Pa(5E3,{device_pixel_ratio:window.devicePixelRatio,platform:navigator.platform});z.iK={TILE_BASE_URLS:["ss0.baidu.com/5bwHcj7lABFU8t_jkk_Z1zRvfdw6buu","ss0.baidu.com/5bwHcj7lABFV8t_jkk_Z1zRvfdw6buu","ss0.baidu.com/5bwHcj7lABFS8t_jkk_Z1zRvfdw6buu","ss0.bdstatic.com/5bwHcj7lABFT8t_jkk_Z1zRvfdw6buu","ss0.bdstatic.com/5bwHcj7lABFY8t_jkk_Z1zRvfdw6buu"],TILE_ONLINE_URLS:["ss0.bdstatic.com/8bo_dTSlR1gBo1vgoIiO_jowehsv","ss0.bdstatic.com/8bo_dTSlRMgBo1vgoIiO_jowehsv","ss0.bdstatic.com/8bo_dTSlRcgBo1vgoIiO_jowehsv","ss0.bdstatic.com/8bo_dTSlRsgBo1vgoIiO_jowehsv","ss0.bdstatic.com/8bo_dTSlQ1gBo1vgoIiO_jowehsv"], TIlE_PERSPECT_URLS:["ss0.bdstatic.com/-OR1cTe9KgQFm2e88IuM_a","ss0.bdstatic.com/-ON1cTe9KgQFm2e88IuM_a","ss0.bdstatic.com/-OZ1cTe9KgQFm2e88IuM_a","ss0.bdstatic.com/-OV1cTe9KgQFm2e88IuM_a"],geolocControl:"sp2.baidu.com/8LkJsjOpB1gCo2Kml5_Y_D3",TILES_YUN_HOST:["sp0.baidu.com/-eR1bSahKgkFkRGko9WTAnF6hhy","sp0.baidu.com/-eN1bSahKgkFkRGko9WTAnF6hhy","sp0.baidu.com/-eZ1bSahKgkFkRGko9WTAnF6hhy","sp0.baidu.com/-eV1bSahKgkFkRGko9WTAnF6hhy"],traffic:"sp0.baidu.com/7_AZsjOpB1gCo2Kml5_Y_D3",iw_pano:"ss0.bdstatic.com/5LUZemba_QUU8t7mm9GUKT-xh_", message:"sp0.baidu.com/7vo0bSba2gU2pMbgoY3K",baidumap:"sp0.baidu.com/80MWsjip0QIZ8tyhnq",wuxian:"sp0.baidu.com/6a1OdTeaKgQFm2e88IuM_a",pano:["ss0.bdstatic.com/5LUZemba_QUU8t7mm9GUKT-xh_","ss0.bdstatic.com/5LUZemfa_QUU8t7mm9GUKT-xh_","ss0.bdstatic.com/5LUZemja_QUU8t7mm9GUKT-xh_"],main_domain_nocdn:{baidu:"sp0.baidu.com/9_Q4sjOpB1gCo2Kml5_Y_D3",other:"sapi.map.baidu.com"},main_domain_cdn:{baidu:["ss0.bdstatic.com/9_Q4vHSd2RZ3otebn9fN2DJv","ss0.baidu.com/9_Q4vXSd2RZ3otebn9fN2DJv","ss0.bdstatic.com/9_Q4vnSd2RZ3otebn9fN2DJv"], other:["sapi.map.baidu.com"]},map_click:"sp0.baidu.com/80MWbzKh2wt3n2qy8IqW0jdnxx1xbK",vector_traffic:"ss0.bdstatic.com/8aZ1cTe9KgQIm2_p8IuM_a"}; z.FV={TILE_BASE_URLS:["shangetu0.map.bdimg.com","shangetu1.map.bdimg.com","shangetu2.map.bdimg.com","shangetu3.map.bdimg.com","shangetu4.map.bdimg.com"],TILE_ONLINE_URLS:["online0.map.bdimg.com","online1.map.bdimg.com","online2.map.bdimg.com","online3.map.bdimg.com","online4.map.bdimg.com"],TIlE_PERSPECT_URLS:["d0.map.baidu.com","d1.map.baidu.com","d2.map.baidu.com","d3.map.baidu.com"],geolocControl:"loc.map.baidu.com",TILES_YUN_HOST:["g0.api.map.baidu.com","g1.api.map.baidu.com","g2.api.map.baidu.com", "g3.api.map.baidu.com"],traffic:"its.map.baidu.com",iw_pano:"pcsv0.map.bdimg.com",message:"j.map.baidu.com",baidumap:"map.baidu.com",wuxian:"wuxian.baidu.com",pano:["pcsv0.map.bdimg.com","pcsv1.map.bdimg.com","pcsv2.map.bdimg.com"],main_domain_nocdn:{baidu:"api.map.baidu.com"},main_domain_cdn:{baidu:["api0.map.bdimg.com","api1.map.bdimg.com","api2.map.bdimg.com"]},map_click:"mapclick.map.baidu.com",vector_traffic:"or.map.bdimg.com"}; z.CY={"0":{proto:"http://",domain:z.FV},1:{proto:"https://",domain:z.iK},2:{proto:"https://",domain:z.iK}};z.Kx=window.HOST_TYPE||"0";z.url=z.CY[z.Kx];z.Ao=z.url.proto+z.url.domain.baidumap+"/";z.tc=z.url.proto+("2"==z.Kx?z.url.domain.main_domain_nocdn.other:z.url.domain.main_domain_nocdn.baidu)+"/";z.da=z.url.proto+("2"==z.Kx?z.url.domain.main_domain_cdn.other[0]:z.url.domain.main_domain_cdn.baidu[0])+"/"; z.ag=function(a,b){var c,d,b=b||"";switch(a){case "main_domain_nocdn":c=z.tc+b;break;case "main_domain_cdn":c=z.da+b;break;default:d=z.url.domain[a],"[object Array]"==Object.prototype.toString.call(d)?(c=[],w.Wb.Db(d,function(a,d){c[d]=z.url.proto+a+"/"+b})):c=z.url.proto+z.url.domain[a]+"/"+b}return c};function tb(a){var b={duration:1E3,Uc:30,Vn:0,jc:ub.KK,zs:s()};this.Kf=[];if(a)for(var c in a)b[c]=a[c];this.k=b;if(Va(b.Vn)){var d=this;setTimeout(function(){d.start()},b.Vn)}else b.Vn!=vb&&this.start()}var vb="INFINITE";tb.prototype.start=function(){this.Rt=$a();this.Uy=this.Rt+this.k.duration;wb(this)};tb.prototype.add=function(a){this.Kf.push(a)}; function wb(a){var b=$a();b>=a.Uy?(Wa(a.k.ma)&&a.k.ma(a.k.jc(1)),Wa(a.k.finish)&&a.k.finish(),0<a.Kf.length&&(b=a.Kf[0],b.Kf=[].concat(a.Kf.slice(1)),b.start())):(a.px=a.k.jc((b-a.Rt)/a.k.duration),Wa(a.k.ma)&&a.k.ma(a.px),a.qE||(a.Yq=setTimeout(function(){wb(a)},1E3/a.k.Uc)))}tb.prototype.stop=function(a){this.qE=o;for(var b=0;b<this.Kf.length;b++)this.Kf[b].stop(),this.Kf[b]=p;this.Kf.length=0;this.Yq&&(clearTimeout(this.Yq),this.Yq=p);this.k.zs(this.px);a&&(this.Uy=this.Rt,wb(this))}; tb.prototype.cancel=ha(1);var ub={KK:function(a){return a},reverse:function(a){return 1-a},YB:function(a){return a*a},XB:function(a){return Math.pow(a,3)},mJ:function(a){return-(a*(a-2))},lJ:function(a){return Math.pow(a-1,3)+1},kJ:function(a){return 0.5>a?2*a*a:-2*(a-2)*a-1},m_:function(a){return 0.5>a?4*Math.pow(a,3):4*Math.pow(a-1,3)+1},n_:function(a){return(1-Math.cos(Math.PI*a))/2}};ub["ease-in"]=ub.YB;ub["ease-out"]=ub.mJ;var E={IE:34,JE:21,KE:new K(21,32),gN:new K(10,32),fN:new K(24,36),eN:new K(12,36),GE:new K(13,1),ea:z.da+"images/",HE:z.da+"images/markers_new.png",cN:24,dN:73,dB:{"\u5317\u4eac":{fx:"bj",m:new H(116.403874,39.914889)},"\u4e0a\u6d77":{fx:"sh",m:new H(121.487899,31.249162)},"\u6df1\u5733":{fx:"sz",m:new H(114.025974,22.546054)},"\u5e7f\u5dde":{fx:"gz",m:new H(113.30765,23.120049)}},fontFamily:"arial,sans-serif"}; w.S.Ig?(w.extend(E,{aJ:"url("+E.ea+"ruler.cur),crosshair",Hb:"-moz-grab",gd:"-moz-grabbing"}),w.platform.CK&&(E.fontFamily="arial,simsun,sans-serif")):w.S.EI||w.S.VL?w.extend(E,{aJ:"url("+E.ea+"ruler.cur) 2 6,crosshair",Hb:"url("+E.ea+"openhand.cur) 8 8,default",gd:"url("+E.ea+"closedhand.cur) 8 8,move"}):w.extend(E,{aJ:"url("+E.ea+"ruler.cur),crosshair",Hb:"url("+E.ea+"openhand.cur),default",gd:"url("+E.ea+"closedhand.cur),move"});function xb(a,b){var c=a.style;c.left=b[0]+"px";c.top=b[1]+"px"}function yb(a){0<w.S.ba?a.unselectable="on":a.style.MozUserSelect="none"}function zb(a){return a&&a.parentNode&&11!=a.parentNode.nodeType}function Ab(a,b){w.C.Fw(a,"beforeEnd",b);return a.lastChild}function Bb(a){for(var b={left:0,top:0};a&&a.offsetParent;)b.left+=a.offsetLeft,b.top+=a.offsetTop,a=a.offsetParent;return b}function oa(a){a=window.event||a;a.stopPropagation?a.stopPropagation():a.cancelBubble=o} function Cb(a){a=window.event||a;a.preventDefault?a.preventDefault():a.returnValue=q;return q}function pa(a){oa(a);return Cb(a)}function Db(){var a=document.documentElement,b=document.body;return a&&(a.scrollTop||a.scrollLeft)?[a.scrollTop,a.scrollLeft]:b?[b.scrollTop,b.scrollLeft]:[0,0]}function Eb(a,b){if(a&&b)return Math.round(Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2)))}function Fb(a,b){var c=[],b=b||function(a){return a},d;for(d in a)c.push(d+"="+b(a[d]));return c.join("&")} function J(a,b,c){var d=document.createElement(a);c&&(d=document.createElementNS(c,a));return w.C.cE(d,b||{})}function Ua(a){if(a.currentStyle)return a.currentStyle;if(a.ownerDocument&&a.ownerDocument.defaultView)return a.ownerDocument.defaultView.getComputedStyle(a,p)}function Wa(a){return"function"==typeof a}function Va(a){return"number"==typeof a}function Ya(a){return"string"==typeof a}function Gb(a){return"undefined"!=typeof a}function Hb(a){return"object"==typeof a}var Ib="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; function Jb(a){var b="",c,d,e="",f,g="",i=0;f=/[^A-Za-z0-9\+\/\=]/g;if(!a||f.exec(a))return a;a=a.replace(/[^A-Za-z0-9\+\/\=]/g,"");do c=Ib.indexOf(a.charAt(i++)),d=Ib.indexOf(a.charAt(i++)),f=Ib.indexOf(a.charAt(i++)),g=Ib.indexOf(a.charAt(i++)),c=c<<2|d>>4,d=(d&15)<<4|f>>2,e=(f&3)<<6|g,b+=String.fromCharCode(c),64!=f&&(b+=String.fromCharCode(d)),64!=g&&(b+=String.fromCharCode(e));while(i<a.length);return b}var L=w.lang.Ux;function G(){return!(!w.platform.iD&&!w.platform.UV&&!w.platform.bk)} function Ta(){return!(!w.platform.CK&&!w.platform.uK&&!w.platform.ZV)}function $a(){return(new Date).getTime()}function Kb(){var a=document.body.appendChild(J("div"));a.innerHTML='<v:shape id="vml_tester1" adj="1" />';var b=a.firstChild;if(!b.style)return q;b.style.behavior="url(#default#VML)";b=b?"object"==typeof b.adj:o;a.parentNode.removeChild(a);return b}function Lb(){return!!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Shape","1.1")} function Mb(){return!!J("canvas").getContext}function Nb(a){return a*Math.PI/180}z.fW=function(){var a=o,b=o,c=o,d=o,e=0,f=0,g=0,i=0;return{IO:function(){e+=1;a&&(a=q,setTimeout(function(){Pa(5054,{pic:e});a=o;e=0},1E4))},gZ:function(){f+=1;b&&(b=q,setTimeout(function(){Pa(5055,{move:f});b=o;f=0},1E4))},iZ:function(){g+=1;c&&(c=q,setTimeout(function(){Pa(5056,{zoom:g});c=o;g=0},1E4))},hZ:function(a){i+=a;d&&(d=q,setTimeout(function(){Pa(5057,{tile:i});d=o;i=0},5E3))}}}();var Za; (function(){function a(a){this.MS=a;this.timing={};this.start=+new Date}function b(a,b){if(a.length===+a.length)for(var c=0,d=a.length;c<d&&b.call(j,c,a[c],a)!==q;c++);else for(c in a)if(a.hasOwnProperty(c)&&b.call(j,c,a[c],a)===q)break}var c=[],d={push:function(a){c.push(a);if(window.localStorage&&window.JSON)try{localStorage.setItem("WPO_NR",JSON.stringify(c))}catch(b){}},get:function(a){var b=[];if(window.localStorage)try{a&&localStorage.removeItem("WPO_NR")}catch(d){}b=c;a&&(c=[]);return b}}, e,f,g,i,k={};(!window.localStorage||!window.JSON)&&document.attachEvent&&window.attachEvent("onbeforeunload",function(){l.send()});var l={send:function(a){var c=[],e=[],f=a||d.get(o),g;0<f.length&&(b(f,function(d,e){var f=[];b(e.timing,function(a,b){f.push('"'+a+'":'+b)});c.push('{"t":{'+f.join(",")+'},"a":'+e.MS+"}");!g&&(a&&e.start)&&(g=e.start)}),b(k,function(a,b){e.push(a+"="+b)}),e.push("d=["+c.join(",")+"]"),g?e.push("_st="+g):e.push("_t="+ +new Date),f=new Image,f.src="http://static.tieba.baidu.com/tb/pms/img/st.gif?"+ e.join("&"),window["___pms_img_"+1*new Date]=f)}};a.prototype={Xb:function(a,b){this.timing[a]=0<=b?b:new Date-this.start},dt:function(){this.start=+new Date},HM:function(){this.Xb("tt")},Lx:function(){this.Xb("vt")},rm:function(){f&&(d.push(this),d.get().length>=g&&l.send())},error:s()};Za={ii:{bD:function(a){var b=navigator.b_||navigator.x0||navigator.G1||{type:0};f=Math.random()<=(a.eX||0.01);g=a.max||5;i=a.w0||b.type;k={p:a.RW,mnt:i,b:50};window.localStorage&&(window.JSON&&window.addEventListener)&& (e=d.get(o),window.addEventListener("load",function(){l.send(e)},q))},Nj:function(b){return new a(b)}}}})();Za.ii.bD({RW:18,eX:0.1,max:1});z.op={WE:"#83a1ff",qp:"#808080"}; function Ob(a,b,c){b.hm||(b.hm=[],b.handle={});b.hm.push({filter:c,Jl:a});b.addEventListener||(b.addEventListener=function(a,c){b.attachEvent("on"+a,c)});b.handle.click||(b.addEventListener("click",function(a){for(var c=a.target||a.srcElement;c!=b;){Pb(b.hm,function(b,g){RegExp(g.filter).test(c.getAttribute("filter"))&&g.Jl.call(c,a,c.getAttribute("filter"))});c=c.parentNode}},q),b.handle.click=o)}function Pb(a,b){for(var c=0,d=a.length;c<d;c++)b(c,a[c])};function Qb(a,b){if(b){var c=(1E5*Math.random()).toFixed(0);z._rd["_cbk"+c]=function(a){b&&b(a);delete z._rd["_cbk"+c]};a+="&callback=BMap._rd._cbk"+c}var d=J("script",{type:"text/javascript"});d.charset="utf-8";d.src=a;d.addEventListener?d.addEventListener("load",function(a){a=a.target;a.parentNode.removeChild(a)},q):d.attachEvent&&d.attachEvent("onreadystatechange",function(){var a=window.event.srcElement;a&&("loaded"==a.readyState||"complete"==a.readyState)&&a.parentNode.removeChild(a)});setTimeout(function(){document.getElementsByTagName("head")[0].appendChild(d); d=p},1)};var Rb={map:"qgm0qb",common:"xa3tl5",style:"jshvp1",tile:"f0ve1s",vectordrawlib:"oh4fnw",newvectordrawlib:"2qhdzx",groundoverlay:"prwysx",pointcollection:"mpnucn",marker:"wxknj0",symbol:"22un4i",canvablepath:"hw30ec",vmlcontext:"axiocl",markeranimation:"ooaup1",poly:"jzb33a",draw:"uyjkcx",drawbysvg:"phpfvq", drawbyvml:"yv3uch",drawbycanvas:"kyz2fh",infowindow:"ftu4rk",oppc:"v3n2mk",opmb:"u2h5pw",menu:"5nbptm",control:"f4g2ck",navictrl:"02xk3n",geoctrl:"j5ykxt",copyrightctrl:"ocx4ox",scommon:"gquf31",local:"qba1sg",route:"sas3lk",othersearch:"1a31d5",mapclick:"xtrdtu",buslinesearch:"goqdr4",hotspot:"kcn1x3", autocomplete:"vcznyr",coordtrans:"j3hwrh",coordtransutils:"daxalh",clayer:"uwlvwi",pservice:"fpvkt2",pcommon:"myc0ms",panorama:"qhcgzc",panoramaflash:"0w4gpu",vector:"bud5rx"}; w.Ex=function(){function a(a){return d&&!!c[b+a+"_"+Rb[a]]}var b="BMap_",c=window.localStorage,d="localStorage"in window&&c!==p&&c!==j;return{WV:d,set:function(a,f){if(d){for(var g=b+a+"_",i=c.length,k;i--;)k=c.key(i),-1<k.indexOf(g)&&c.removeItem(k);try{c.setItem(b+a+"_"+Rb[a],f)}catch(l){c.clear()}}},get:function(e){return d&&a(e)?c.getItem(b+e+"_"+Rb[e]):q},CI:a}}();function I(){} w.object.extend(I,{mj:{YE:-1,MN:0,jp:1},JJ:function(){var a="drawbysvg",b="canvablepath",c=z.$H?"newvectordrawlib":"vectordrawlib";G()&&Mb()?a="drawbycanvas":Lb()?a="drawbysvg":Kb()?(a="drawbyvml",b="vmlcontext"):Mb()&&(a="drawbycanvas");return{tile:[c],control:[],marker:["symbol"],symbol:["canvablepath","common"],canvablepath:"canvablepath"===b?[]:[b],vmlcontext:[],style:[],poly:["marker",a],drawbysvg:["draw"],drawbyvml:["draw"],drawbycanvas:["draw"],infowindow:["common","marker"],menu:[],oppc:[], opmb:[],scommon:[],local:["scommon"],route:["scommon"],othersearch:["scommon"],autocomplete:["scommon"],mapclick:["scommon"],buslinesearch:["route"],hotspot:[],coordtransutils:["coordtrans"],clayer:["tile"],pservice:[],pcommon:["style","pservice"],panorama:["pcommon"],panoramaflash:["pcommon"]}},N0:{},QE:{aO:z.da+"getmodules?v=2.0&t=20140707",qS:5E3},BB:q,ud:{Pk:{},Qm:[],Xu:[]},load:function(a,b,c){var d=this.Ua(a);if(d.ed==this.mj.jp)c&&b();else{if(d.ed==this.mj.YE){this.JI(a);this.IL(a);var e=this; e.BB==q&&(e.BB=o,setTimeout(function(){for(var a=[],b=0,c=e.ud.Qm.length;b<c;b++){var d=e.ud.Qm[b],l="";ja.Ex.CI(d)?l=ja.Ex.get(d):(l="",a.push(d+"_"+Rb[d]));e.ud.Xu.push({dL:d,yD:l})}e.BB=q;e.ud.Qm.length=0;0==a.length?e.qJ():Qb(e.QE.aO+"&mod="+a.join(","))},1));d.ed=this.mj.MN}d.Vt.push(b)}},JI:function(a){if(a&&this.JJ()[a])for(var a=this.JJ()[a],b=0;b<a.length;b++)this.JI(a[b]),this.ud.Pk[a[b]]||this.IL(a[b])},IL:function(a){for(var b=0;b<this.ud.Qm.length;b++)if(this.ud.Qm[b]==a)return;this.ud.Qm.push(a)}, dX:function(a,b){var c=this.Ua(a);try{eval(b)}catch(d){return}c.ed=this.mj.jp;for(var e=0,f=c.Vt.length;e<f;e++)c.Vt[e]();c.Vt.length=0},CI:function(a,b){var c=this;c.timeout=setTimeout(function(){c.ud.Pk[a].ed!=c.mj.jp?(c.remove(a),c.load(a,b)):clearTimeout(c.timeout)},c.QE.qS)},Ua:function(a){this.ud.Pk[a]||(this.ud.Pk[a]={},this.ud.Pk[a].ed=this.mj.YE,this.ud.Pk[a].Vt=[]);return this.ud.Pk[a]},remove:function(a){delete this.Ua(a)},iT:function(a,b){for(var c=this.ud.Xu,d=o,e=0,f=c.length;e<f;e++)""== c[e].yD&&(c[e].dL==a?c[e].yD=b:d=q);d&&this.qJ()},qJ:function(){for(var a=this.ud.Xu,b=0,c=a.length;b<c;b++)this.dX(a[b].dL,a[b].yD);this.ud.Xu.length=0}});function P(a,b){this.x=a||0;this.y=b||0;this.x=this.x;this.y=this.y}P.prototype.Xa=function(a){return a&&a.x==this.x&&a.y==this.y};function K(a,b){this.width=a||0;this.height=b||0}K.prototype.Xa=function(a){return a&&this.width==a.width&&this.height==a.height};function hb(a,b){a&&(this.wb=a,this.Q="spot"+hb.Q++,b=b||{},this.Ag=b.text||"",this.Gu=b.offsets?b.offsets.slice(0):[5,5,5,5],this.TH=b.userData||p,this.uh=b.minZoom||p,this.jf=b.maxZoom||p)}hb.Q=0;w.extend(hb.prototype,{fa:function(a){this.uh==p&&(this.uh=a.D.kd);this.jf==p&&(this.jf=a.D.Wc)},ha:function(a){a instanceof H&&(this.wb=a)},V:u("wb"),Ss:ba("Ag"),RC:u("Ag"),setUserData:ba("TH"),getUserData:u("TH")});function Sb(){this.B=p;this.xb="control";this.Da=this.wI=o}w.lang.ia(Sb,w.lang.ra,"Control"); w.extend(Sb.prototype,{initialize:function(a){this.B=a;if(this.A)return a.Ha.appendChild(this.A),this.A},Ke:function(a){!this.A&&(this.initialize&&Wa(this.initialize))&&(this.A=this.initialize(a));this.k=this.k||{Xg:q};this.vA();this.Qu();this.A&&(this.A.nq=this)},vA:function(){var a=this.A;if(a){var b=a.style;b.position="absolute";b.zIndex=this.qy||"10";b.MozUserSelect="none";b.WebkitTextSizeAdjust="none";this.k.Xg||w.C.Wa(a,"BMap_noprint");G()||w.F(a,"contextmenu",pa)}},remove:function(){this.B= p;this.A&&(this.A.parentNode&&this.A.parentNode.removeChild(this.A),this.A=this.A.nq=p)},qa:function(){this.A=Ab(this.B.Ha,"<div unselectable='on'></div>");this.Da==q&&w.C.J(this.A);return this.A},Qu:function(){this.fc(this.k.anchor)},fc:function(a){if(this.MZ||!Va(a)||isNaN(a)||a<Tb||3<a)a=this.defaultAnchor;this.k=this.k||{Xg:q};this.k.pa=this.k.pa||this.defaultOffset;var b=this.k.anchor;this.k.anchor=a;if(this.A){var c=this.A,d=this.k.pa.width,e=this.k.pa.height;c.style.left=c.style.top=c.style.right= c.style.bottom="auto";switch(a){case Tb:c.style.top=e+"px";c.style.left=d+"px";break;case Ub:c.style.top=e+"px";c.style.right=d+"px";break;case Vb:c.style.bottom=e+"px";c.style.left=d+"px";break;case 3:c.style.bottom=e+"px",c.style.right=d+"px"}c=["TL","TR","BL","BR"];w.C.Ub(this.A,"anchor"+c[b]);w.C.Wa(this.A,"anchor"+c[a])}},tC:function(){return this.k.anchor},ee:function(a){a instanceof K&&(this.k=this.k||{Xg:q},this.k.pa=new K(a.width,a.height),this.A&&this.fc(this.k.anchor))},Af:function(){return this.k.pa}, jd:u("A"),show:function(){this.Da!=o&&(this.Da=o,this.A&&w.C.show(this.A))},J:function(){this.Da!=q&&(this.Da=q,this.A&&w.C.J(this.A))},isPrintable:function(){return!!this.k.Xg},Rg:function(){return!this.A&&!this.B?q:!!this.Da}});var Tb=0,Ub=1,Vb=2;function ib(a){Sb.call(this);a=a||{};this.k={Xg:q,mE:a.showZoomInfo||o,anchor:a.anchor,pa:a.offset,type:a.type,fU:a.enableGeolocation||q};this.defaultAnchor=G()?3:Tb;this.defaultOffset=new K(10,10);this.fc(a.anchor);this.Am(a.type);this.bf()}w.lang.ia(ib,Sb,"NavigationControl");w.extend(ib.prototype,{initialize:function(a){this.B=a;return this.A},Am:function(a){this.k.type=Va(a)&&0<=a&&3>=a?a:0},qo:function(){return this.k.type},bf:function(){var a=this;I.load("navictrl",function(){a.qg()})}});function Wb(a){Sb.call(this);a=a||{};this.k={anchor:a.anchor||Vb,pa:a.offset||new K(10,30),g1:a.showAddressBar||q,p_:a.enableAutoLocation||q,RK:a.locationIcon||p};var b=this;this.qy=1200;b.EY=[];this.Ud=[];I.load("geoctrl",function(){(function d(){if(0!==b.Ud.length){var a=b.Ud.shift();b[a.method].apply(b,a.arguments);d()}})();b.$N()});Pa(Ja)}w.lang.ia(Wb,Sb,"GeolocationControl");w.extend(Wb.prototype,{location:function(){this.Ud.push({method:"location",arguments:arguments})},getAddressComponent:da(p)});function Xb(a){Sb.call(this);a=a||{};this.k={Xg:q,anchor:a.anchor,pa:a.offset};this.Nb=[];this.defaultAnchor=Vb;this.defaultOffset=new K(5,2);this.fc(a.anchor);this.wI=q;this.bf()}w.lang.ia(Xb,Sb,"CopyrightControl"); w.object.extend(Xb.prototype,{initialize:function(a){this.B=a;return this.A},rv:function(a){if(a&&Va(a.id)&&!isNaN(a.id)){var b={bounds:p,content:""},c;for(c in a)b[c]=a[c];if(a=this.Ml(a.id))for(var d in b)a[d]=b[d];else this.Nb.push(b)}},Ml:function(a){for(var b=0,c=this.Nb.length;b<c;b++)if(this.Nb[b].id==a)return this.Nb[b]},AC:u("Nb"),QD:function(a){for(var b=0,c=this.Nb.length;b<c;b++)this.Nb[b].id==a&&(r=this.Nb.splice(b,1),b--,c=this.Nb.length)},bf:function(){var a=this;I.load("copyrightctrl", function(){a.qg()})}});function lb(a){Sb.call(this);a=a||{};this.k={Xg:q,size:a.size||new K(150,150),padding:5,Ja:a.isOpen===o?o:q,TY:4,pa:a.offset,anchor:a.anchor};this.defaultAnchor=3;this.defaultOffset=new K(0,0);this.Fp=this.Gp=13;this.fc(a.anchor);this.od(this.k.size);this.bf()}w.lang.ia(lb,Sb,"OverviewMapControl"); w.extend(lb.prototype,{initialize:function(a){this.B=a;return this.A},fc:function(a){Sb.prototype.fc.call(this,a)},Wd:function(){this.Wd.xn=o;this.k.Ja=!this.k.Ja;this.A||(this.Wd.xn=q)},od:function(a){a instanceof K||(a=new K(150,150));a.width=0<a.width?a.width:150;a.height=0<a.height?a.height:150;this.k.size=a},Ib:function(){return this.k.size},Ja:function(){return this.k.Ja},bf:function(){var a=this;I.load("control",function(){a.qg()})}});function jb(a){Sb.call(this);a=a||{};this.k={Xg:q,color:"black",Nc:"metric",pa:a.offset};this.defaultAnchor=Vb;this.defaultOffset=new K(81,18);this.fc(a.anchor);this.Dh={metric:{name:"metric",LI:1,nK:1E3,LM:"\u7c73",MM:"\u516c\u91cc"},us:{name:"us",LI:3.2808,nK:5280,LM:"\u82f1\u5c3a",MM:"\u82f1\u91cc"}};this.Dh[this.k.Nc]||(this.k.Nc="metric");this.rH=p;this.SG={};this.bf()}w.lang.ia(jb,Sb,"ScaleControl"); w.object.extend(jb.prototype,{initialize:function(a){this.B=a;return this.A},jk:function(a){this.k.color=a+""},B_:function(){return this.k.color},jE:function(a){this.k.Nc=this.Dh[a]&&this.Dh[a].name||this.k.Nc},tV:function(){return this.k.Nc},bf:function(){var a=this;I.load("control",function(){a.qg()})}});var Yb=0;function mb(a){Sb.call(this);a=a||{};this.defaultAnchor=Ub;this.defaultOffset=new K(10,10);this.k={Xg:q,Ug:[La,Xa,Qa,Oa],KT:["B_DIMENSIONAL_MAP","B_SATELLITE_MAP","B_NORMAL_MAP"],type:a.type||Yb,pa:a.offset||this.defaultOffset,jU:o};this.fc(a.anchor);"[object Array]"==Object.prototype.toString.call(a.mapTypes)&&(this.k.Ug=a.mapTypes.slice(0));this.bf()}w.lang.ia(mb,Sb,"MapTypeControl"); w.object.extend(mb.prototype,{initialize:function(a){this.B=a;return this.A},Fx:function(a){this.B.jn=a},bf:function(){var a=this;I.load("control",function(){a.qg()},o)}});function Zb(a){Sb.call(this);a=a||{};this.k={Xg:q,pa:a.offset,anchor:a.anchor};this.ui=q;this.av=p;this.aH=new $b({yf:"api"});this.bH=new ac(p,{yf:"api"});this.defaultAnchor=Ub;this.defaultOffset=new K(10,10);this.fc(a.anchor);this.bf();Pa(wa)}w.lang.ia(Zb,Sb,"PanoramaControl");w.extend(Zb.prototype,{initialize:function(a){this.B=a;return this.A},bf:function(){var a=this;I.load("control",function(){a.qg()})}});function bc(a){w.lang.ra.call(this);this.k={Ha:p,cursor:"default"};this.k=w.extend(this.k,a);this.xb="contextmenu";this.B=p;this.na=[];this.nf=[];this.ke=[];this.Pv=this.rr=p;this.rh=q;var b=this;I.load("menu",function(){b.ob()})}w.lang.ia(bc,w.lang.ra,"ContextMenu"); w.object.extend(bc.prototype,{fa:function(a,b){this.B=a;this.Tk=b||p},remove:function(){this.B=this.Tk=p},tv:function(a){if(a&&!("menuitem"!=a.xb||""==a.Ag||0>=a.Ei)){for(var b=0,c=this.na.length;b<c;b++)if(this.na[b]===a)return;this.na.push(a);this.nf.push(a)}},removeItem:function(a){if(a&&"menuitem"==a.xb){for(var b=0,c=this.na.length;b<c;b++)this.na[b]===a&&(this.na[b].remove(),this.na.splice(b,1),c--);b=0;for(c=this.nf.length;b<c;b++)this.nf[b]===a&&(this.nf[b].remove(),this.nf.splice(b,1),c--)}}, PA:function(){this.na.push({xb:"divider",sj:this.ke.length});this.ke.push({C:p})},SD:function(a){if(this.ke[a]){for(var b=0,c=this.na.length;b<c;b++)this.na[b]&&("divider"==this.na[b].xb&&this.na[b].sj==a)&&(this.na.splice(b,1),c--),this.na[b]&&("divider"==this.na[b].xb&&this.na[b].sj>a)&&this.na[b].sj--;this.ke.splice(a,1)}},jd:u("A"),show:function(){this.rh!=o&&(this.rh=o)},J:function(){this.rh!=q&&(this.rh=q)},tX:function(a){a&&(this.k.cursor=a)},getItem:function(a){return this.nf[a]}});var cc=E.ea+"menu_zoom_in.png",dc=E.ea+"menu_zoom_out.png";function ec(a,b,c){if(a&&Wa(b)){w.lang.ra.call(this);this.k={width:100,id:"",Yl:""};c=c||{};this.k.width=1*c.width?c.width:100;this.k.id=c.id?c.id:"";this.k.Yl=c.iconUrl?c.iconUrl:"";this.Ag=a+"";this.vy=b;this.B=p;this.xb="menuitem";this.Xq=this.tu=this.A=this.ih=p;this.mh=o;var d=this;I.load("menu",function(){d.ob()})}}w.lang.ia(ec,w.lang.ra,"MenuItem"); w.object.extend(ec.prototype,{fa:function(a,b){this.B=a;this.ih=b},remove:function(){this.B=this.ih=p},Ss:function(a){a&&(this.Ag=a+"")},Kb:function(a){a&&(this.k.Yl=a)},jd:u("A"),enable:function(){this.mh=o},disable:function(){this.mh=q}});function eb(a,b){a&&!b&&(b=a);this.pe=this.oe=this.ue=this.te=this.hl=this.Sk=p;a&&(this.hl=new H(a.lng,a.lat),this.Sk=new H(b.lng,b.lat),this.ue=a.lng,this.te=a.lat,this.pe=b.lng,this.oe=b.lat)} w.object.extend(eb.prototype,{cj:function(){return!this.hl||!this.Sk},Xa:function(a){return!(a instanceof eb)||this.cj()?q:this.Be().Xa(a.Be())&&this.zf().Xa(a.zf())},Be:u("hl"),zf:u("Sk"),vT:function(a){return!(a instanceof eb)||this.cj()||a.cj()?q:a.ue>this.ue&&a.pe<this.pe&&a.te>this.te&&a.oe<this.oe},ya:function(){return this.cj()?p:new H((this.ue+this.pe)/2,(this.te+this.oe)/2)},is:function(a){if(!(a instanceof eb)||Math.max(a.ue,a.pe)<Math.min(this.ue,this.pe)||Math.min(a.ue,a.pe)>Math.max(this.ue, this.pe)||Math.max(a.te,a.oe)<Math.min(this.te,this.oe)||Math.min(a.te,a.oe)>Math.max(this.te,this.oe))return p;var b=Math.max(this.ue,a.ue),c=Math.min(this.pe,a.pe),d=Math.max(this.te,a.te),a=Math.min(this.oe,a.oe);return new eb(new H(b,d),new H(c,a))},mr:function(a){return!(a instanceof H)||this.cj()?q:a.lng>=this.ue&&a.lng<=this.pe&&a.lat>=this.te&&a.lat<=this.oe},extend:function(a){if(a instanceof H){var b=a.lng,a=a.lat;this.hl||(this.hl=new H(0,0));this.Sk||(this.Sk=new H(0,0));if(!this.ue|| this.ue>b)this.hl.lng=this.ue=b;if(!this.pe||this.pe<b)this.Sk.lng=this.pe=b;if(!this.te||this.te>a)this.hl.lat=this.te=a;if(!this.oe||this.oe<a)this.Sk.lat=this.oe=a}},uE:function(){return this.cj()?new H(0,0):new H(Math.abs(this.pe-this.ue),Math.abs(this.oe-this.te))}});function H(a,b){isNaN(a)&&(a=Jb(a),a=isNaN(a)?0:a);Ya(a)&&(a=parseFloat(a));isNaN(b)&&(b=Jb(b),b=isNaN(b)?0:b);Ya(b)&&(b=parseFloat(b));this.lng=a;this.lat=b}H.tK=function(a){return a&&180>=a.lng&&-180<=a.lng&&74>=a.lat&&-74<=a.lat};H.prototype.Xa=function(a){return a&&this.lat==a.lat&&this.lng==a.lng};function fc(){}fc.prototype.Sg=function(){aa("lngLatToPoint\u65b9\u6cd5\u672a\u5b9e\u73b0")};fc.prototype.Zh=function(){aa("pointToLngLat\u65b9\u6cd5\u672a\u5b9e\u73b0")};function gc(){};var db={NI:function(a,b,c){I.load("coordtransutils",function(){db.RS(a,b,c)},o)},MI:function(a,b,c){I.load("coordtransutils",function(){db.QS(a,b,c)},o)}};function Q(){}Q.prototype=new fc; w.extend(Q,{qN:6370996.81,bF:[1.289059486E7,8362377.87,5591021,3481989.83,1678043.12,0],Gt:[75,60,45,30,15,0],wN:[[1.410526172116255E-8,8.98305509648872E-6,-1.9939833816331,200.9824383106796,-187.2403703815547,91.6087516669843,-23.38765649603339,2.57121317296198,-0.03801003308653,1.73379812E7],[-7.435856389565537E-9,8.983055097726239E-6,-0.78625201886289,96.32687599759846,-1.85204757529826,-59.36935905485877,47.40033549296737,-16.50741931063887,2.28786674699375,1.026014486E7],[-3.030883460898826E-8, 8.98305509983578E-6,0.30071316287616,59.74293618442277,7.357984074871,-25.38371002664745,13.45380521110908,-3.29883767235584,0.32710905363475,6856817.37],[-1.981981304930552E-8,8.983055099779535E-6,0.03278182852591,40.31678527705744,0.65659298677277,-4.44255534477492,0.85341911805263,0.12923347998204,-0.04625736007561,4482777.06],[3.09191371068437E-9,8.983055096812155E-6,6.995724062E-5,23.10934304144901,-2.3663490511E-4,-0.6321817810242,-0.00663494467273,0.03430082397953,-0.00466043876332,2555164.4], [2.890871144776878E-9,8.983055095805407E-6,-3.068298E-8,7.47137025468032,-3.53937994E-6,-0.02145144861037,-1.234426596E-5,1.0322952773E-4,-3.23890364E-6,826088.5]],ZE:[[-0.0015702102444,111320.7020616939,1704480524535203,-10338987376042340,26112667856603880,-35149669176653700,26595700718403920,-10725012454188240,1800819912950474,82.5],[8.277824516172526E-4,111320.7020463578,6.477955746671607E8,-4.082003173641316E9,1.077490566351142E10,-1.517187553151559E10,1.205306533862167E10,-5.124939663577472E9, 9.133119359512032E8,67.5],[0.00337398766765,111320.7020202162,4481351.045890365,-2.339375119931662E7,7.968221547186455E7,-1.159649932797253E8,9.723671115602145E7,-4.366194633752821E7,8477230.501135234,52.5],[0.00220636496208,111320.7020209128,51751.86112841131,3796837.749470245,992013.7397791013,-1221952.21711287,1340652.697009075,-620943.6990984312,144416.9293806241,37.5],[-3.441963504368392E-4,111320.7020576856,278.2353980772752,2485758.690035394,6070.750963243378,54821.18345352118,9540.606633304236, -2710.55326746645,1405.483844121726,22.5],[-3.218135878613132E-4,111320.7020701615,0.00369383431289,823725.6402795718,0.46104986909093,2351.343141331292,1.58060784298199,8.77738589078284,0.37238884252424,7.45]],G_:function(a,b){if(!a||!b)return 0;var c,d,a=this.qb(a);if(!a)return 0;c=this.rk(a.lng);d=this.rk(a.lat);b=this.qb(b);return!b?0:this.Se(c,this.rk(b.lng),d,this.rk(b.lat))},eo:function(a,b){if(!a||!b)return 0;a.lng=this.JC(a.lng,-180,180);a.lat=this.OC(a.lat,-74,74);b.lng=this.JC(b.lng,-180, 180);b.lat=this.OC(b.lat,-74,74);return this.Se(this.rk(a.lng),this.rk(b.lng),this.rk(a.lat),this.rk(b.lat))},qb:function(a){if(a===p||a===j)return new H(0,0);var b,c;b=new H(Math.abs(a.lng),Math.abs(a.lat));for(var d=0;d<this.bF.length;d++)if(b.lat>=this.bF[d]){c=this.wN[d];break}a=this.OI(a,c);return a=new H(a.lng.toFixed(6),a.lat.toFixed(6))},Bb:function(a){if(a===p||a===j||180<a.lng||-180>a.lng||90<a.lat||-90>a.lat)return new H(0,0);var b,c;a.lng=this.JC(a.lng,-180,180);a.lat=this.OC(a.lat,-74, 74);b=new H(a.lng,a.lat);for(var d=0;d<this.Gt.length;d++)if(b.lat>=this.Gt[d]){c=this.ZE[d];break}if(!c)for(d=this.Gt.length-1;0<=d;d--)if(b.lat<=-this.Gt[d]){c=this.ZE[d];break}a=this.OI(a,c);return a=new H(a.lng.toFixed(2),a.lat.toFixed(2))},OI:function(a,b){if(a&&b){var c=b[0]+b[1]*Math.abs(a.lng),d=Math.abs(a.lat)/b[9],d=b[2]+b[3]*d+b[4]*d*d+b[5]*d*d*d+b[6]*d*d*d*d+b[7]*d*d*d*d*d+b[8]*d*d*d*d*d*d,c=c*(0>a.lng?-1:1),d=d*(0>a.lat?-1:1);return new H(c,d)}},Se:function(a,b,c,d){return this.qN*Math.acos(Math.sin(c)* Math.sin(d)+Math.cos(c)*Math.cos(d)*Math.cos(b-a))},rk:function(a){return Math.PI*a/180},o1:function(a){return 180*a/Math.PI},OC:function(a,b,c){b!=p&&(a=Math.max(a,b));c!=p&&(a=Math.min(a,c));return a},JC:function(a,b,c){for(;a>c;)a-=c-b;for(;a<b;)a+=c-b;return a}}); w.extend(Q.prototype,{em:function(a){return Q.Bb(a)},Sg:function(a){a=Q.Bb(a);return new P(a.lng,a.lat)},Th:function(a){return Q.qb(a)},Zh:function(a){a=new H(a.x,a.y);return Q.qb(a)},Rb:function(a,b,c,d,e){if(a)return a=this.em(a,e),b=this.lc(b),new P(Math.round((a.lng-c.lng)/b+d.width/2),Math.round((c.lat-a.lat)/b+d.height/2))},kb:function(a,b,c,d,e){if(a)return b=this.lc(b),this.Th(new H(c.lng+b*(a.x-d.width/2),c.lat-b*(a.y-d.height/2)),e)},lc:function(a){return Math.pow(2,18-a)}});function gb(){this.tB="bj"}gb.prototype=new Q; w.extend(gb.prototype,{em:function(a,b){return this.FO(b,Q.Bb(a))},Th:function(a,b){return Q.qb(this.GO(b,a))},lngLatToPointFor3D:function(a,b){var c=this,d=Q.Bb(a);I.load("coordtrans",function(){var a=gc.LC(c.tB||"bj",d),a=new P(a.x,a.y);b&&b(a)},o)},pointToLngLatFor3D:function(a,b){var c=this,d=new H(a.x,a.y);I.load("coordtrans",function(){var a=gc.KC(c.tB||"bj",d),a=new H(a.lng,a.lat),a=Q.qb(a);b&&b(a)},o)},FO:function(a,b){if(I.Ua("coordtrans").ed==I.mj.jp){var c=gc.LC(a||"bj",b);return new H(c.x, c.y)}I.load("coordtrans",s());return new H(0,0)},GO:function(a,b){if(I.Ua("coordtrans").ed==I.mj.jp){var c=gc.KC(a||"bj",b);return new H(c.lng,c.lat)}I.load("coordtrans",s());return new H(0,0)},lc:function(a){return Math.pow(2,20-a)}});function hc(){this.xb="overlay"}w.lang.ia(hc,w.lang.ra,"Overlay");hc.Ul=function(a){a*=1;return!a?0:-1E5*a<<1}; w.extend(hc.prototype,{Ke:function(a){if(!this.K&&Wa(this.initialize)&&(this.K=this.initialize(a)))this.K.style.WebkitUserSelect="none";this.draw()},initialize:function(){aa("initialize\u65b9\u6cd5\u672a\u5b9e\u73b0")},draw:function(){aa("draw\u65b9\u6cd5\u672a\u5b9e\u73b0")},remove:function(){this.K&&this.K.parentNode&&this.K.parentNode.removeChild(this.K);this.K=p;this.dispatchEvent(new L("onremove"))},J:function(){this.K&&w.C.J(this.K)},show:function(){this.K&&w.C.show(this.K)},Rg:function(){return!this.K|| "none"==this.K.style.display||"hidden"==this.K.style.visibility?q:o}});z.Ee(function(a){function b(a,b){var c=J("div"),g=c.style;g.position="absolute";g.top=g.left=g.width=g.height="0";g.zIndex=b;a.appendChild(c);return c}var c=a.H;c.Ye=a.Ye=b(a.platform,200);a.Sd.nC=b(c.Ye,800);a.Sd.wD=b(c.Ye,700);a.Sd.xJ=b(c.Ye,600);a.Sd.qD=b(c.Ye,500);a.Sd.WK=b(c.Ye,400);a.Sd.XK=b(c.Ye,300);a.Sd.LY=b(c.Ye,201);a.Sd.ts=b(c.Ye,200)});function fb(){w.lang.ra.call(this);hc.call(this);this.map=p;this.Da=o;this.hb=p;this.MF=0}w.lang.ia(fb,hc,"OverlayInternal"); w.extend(fb.prototype,{initialize:function(a){this.map=a;w.lang.ra.call(this,this.Q);return p},mw:u("map"),draw:s(),remove:function(){this.map=p;w.lang.Rv(this.Q);hc.prototype.remove.call(this)},J:function(){this.Da!=q&&(this.Da=q)},show:function(){this.Da!=o&&(this.Da=o)},Rg:function(){return!this.K?q:!!this.Da},Ea:u("K"),ZL:function(a){var a=a||{},b;for(b in a)this.z[b]=a[b]},Ts:ba("zIndex"),Ri:function(){this.z.Ri=o},TT:function(){this.z.Ri=q},In:ba("Qf"),Jo:function(){this.Qf=p}});function ic(){this.map=p;this.ka={};this.je=[]} z.Ee(function(a){var b=new ic;b.map=a;a.ka=b.ka;a.je=b.je;a.addEventListener("load",function(a){b.draw(a)});a.addEventListener("moveend",function(a){b.draw(a)});w.S.ba&&8>w.S.ba||"BackCompat"==document.compatMode?a.addEventListener("zoomend",function(a){setTimeout(function(){b.draw(a)},20)}):a.addEventListener("zoomend",function(a){b.draw(a)});a.addEventListener("maptypechange",function(a){b.draw(a)});a.addEventListener("addoverlay",function(a){a=a.target;if(a instanceof fb)b.ka[a.Q]||(b.ka[a.Q]= a);else{for(var d=q,e=0,f=b.je.length;e<f;e++)if(b.je[e]===a){d=o;break}d||b.je.push(a)}});a.addEventListener("removeoverlay",function(a){a=a.target;if(a instanceof fb)delete b.ka[a.Q];else for(var d=0,e=b.je.length;d<e;d++)if(b.je[d]===a){b.je.splice(d,1);break}});a.addEventListener("clearoverlays",function(){this.Hc();for(var a in b.ka)b.ka[a].z.Ri&&(b.ka[a].remove(),delete b.ka[a]);a=0;for(var d=b.je.length;a<d;a++)b.je[a].Ri!=q&&(b.je[a].remove(),b.je[a]=p,b.je.splice(a,1),a--,d--)});a.addEventListener("infowindowopen", function(){var a=this.hb;a&&(w.C.J(a.cc),w.C.J(a.Lb))});a.addEventListener("movestart",function(){this.Mg()&&this.Mg().xH()});a.addEventListener("moveend",function(){this.Mg()&&this.Mg().nH()})});ic.prototype.draw=function(a){if(z.np){var b=z.np.Rr(this.map);"canvas"==b.xb&&b.canvas&&b.AO(b.canvas.getContext("2d"))}for(var c in this.ka)this.ka[c].draw(a);w.Wb.Db(this.je,function(a){a.draw()});this.map.H.Ya&&this.map.H.Ya.ha();z.np&&b.gE()};function jc(a){fb.call(this);a=a||{};this.z={strokeColor:a.strokeColor||"#3a6bdb",oc:a.strokeWeight||5,sd:a.strokeOpacity||0.65,strokeStyle:a.strokeStyle||"solid",Ri:a.enableMassClear===q?q:o,Vj:p,Pl:p,xf:a.enableEditing===o?o:q,eL:5,DY:q,Oe:a.enableClicking===q?q:o,Ph:a.icons&&0<a.icons.length?a.icons:p};0>=this.z.oc&&(this.z.oc=5);if(0>this.z.sd||1<this.z.sd)this.z.sd=0.65;if(0>this.z.Zf||1<this.z.Zf)this.z.Zf=0.65;"solid"!=this.z.strokeStyle&&"dashed"!=this.z.strokeStyle&&(this.z.strokeStyle="solid"); this.K=p;this.St=new eb(0,0);this.Me=[];this.Vb=[];this.Fa={}}w.lang.ia(jc,fb,"Graph");jc.hw=function(a){var b=[];if(!a)return b;Ya(a)&&w.Wb.Db(a.split(";"),function(a){a=a.split(",");b.push(new H(a[0],a[1]))});"[object Array]"==Object.prototype.toString.apply(a)&&0<a.length&&(b=a);return b};jc.FD=[0.09,0.0050,1.0E-4,1.0E-5]; w.extend(jc.prototype,{initialize:function(a){this.map=a;return p},draw:s(),Rq:function(a){this.Me.length=0;this.W=jc.hw(a).slice(0);this.fh()},fe:function(a){this.Rq(a)},fh:function(){if(this.W){var a=this;a.St=new eb;w.Wb.Db(this.W,function(b){a.St.extend(b)})}},Zd:u("W"),zm:function(a,b){b&&this.W[a]&&(this.Me.length=0,this.W[a]=new H(b.lng,b.lat),this.fh())},setStrokeColor:function(a){this.z.strokeColor=a},jV:function(){return this.z.strokeColor},$o:function(a){0<a&&(this.z.oc=a)},WJ:function(){return this.z.oc}, Yo:function(a){a==j||(1<a||0>a)||(this.z.sd=a)},kV:function(){return this.z.sd},Ms:function(a){1<a||0>a||(this.z.Zf=a)},KU:function(){return this.z.Zf},Zo:function(a){"solid"!=a&&"dashed"!=a||(this.z.strokeStyle=a)},VJ:function(){return this.z.strokeStyle},setFillColor:function(a){this.z.fillColor=a||""},JU:function(){return this.z.fillColor},Id:u("St"),remove:function(){this.map&&this.map.removeEventListener("onmousemove",this.qu);fb.prototype.remove.call(this);this.Me.length=0},xf:function(){if(!(2> this.W.length)){this.z.xf=o;var a=this;I.load("poly",function(){a.ol()},o)}},ST:function(){this.z.xf=q;var a=this;I.load("poly",function(){a.Lj()},o)}});function kc(a){fb.call(this);this.K=this.map=p;this.z={width:0,height:0,pa:new K(0,0),opacity:1,background:"transparent",Mw:1,IK:"#000",dW:"solid",point:p};this.ZL(a);this.point=this.z.point}w.lang.ia(kc,fb,"Division"); w.extend(kc.prototype,{yk:function(){var a=this.z,b=this.content,c=['<div class="BMap_Division" style="position:absolute;'];c.push("width:"+a.width+"px;display:block;");c.push("overflow:hidden;");"none"!=a.borderColor&&c.push("border:"+a.Mw+"px "+a.dW+" "+a.IK+";");c.push("opacity:"+a.opacity+"; filter:(opacity="+100*a.opacity+")");c.push("background:"+a.background+";");c.push('z-index:60;">');c.push(b);c.push("</div>");this.K=Ab(this.map.Bf().wD,c.join(""))},initialize:function(a){this.map=a;this.yk(); this.K&&w.F(this.K,G()?"touchstart":"mousedown",function(a){oa(a)});return this.K},draw:function(){var a=this.map.De(this.z.point);this.z.pa=new K(-Math.round(this.z.width/2)-Math.round(this.z.Mw),-Math.round(this.z.height/2)-Math.round(this.z.Mw));this.K.style.left=a.x+this.z.pa.width+"px";this.K.style.top=a.y+this.z.pa.height+"px"},V:function(){return this.z.point},sZ:function(){return this.map.Rb(this.V())},ha:function(a){this.z.point=a;this.draw()},uX:function(a,b){this.z.width=Math.round(a); this.z.height=Math.round(b);this.K&&(this.K.style.width=this.z.width+"px",this.K.style.height=this.z.height+"px",this.draw())}});function lc(a,b,c){a&&b&&(this.imageUrl=a,this.size=b,a=new K(Math.floor(b.width/2),Math.floor(b.height/2)),c=c||{},a=c.anchor||a,b=c.imageOffset||new K(0,0),this.imageSize=c.imageSize,this.anchor=a,this.imageOffset=b,this.infoWindowAnchor=c.infoWindowAnchor||this.anchor,this.printImageUrl=c.printImageUrl||"")} w.extend(lc.prototype,{CX:function(a){a&&(this.imageUrl=a)},NX:function(a){a&&(this.printImageUrl=a)},od:function(a){a&&(this.size=new K(a.width,a.height))},fc:function(a){a&&(this.anchor=new K(a.width,a.height))},Ns:function(a){a&&(this.imageOffset=new K(a.width,a.height))},EX:function(a){a&&(this.infoWindowAnchor=new K(a.width,a.height))},AX:function(a){a&&(this.imageSize=new K(a.width,a.height))},toString:da("Icon")});function mc(a,b){if(a){b=b||{};this.style={anchor:b.anchor||new K(0,0),fillColor:b.fillColor||"#000",Zf:b.fillOpacity||0,scale:b.scale||1,rotation:b.rotation||0,strokeColor:b.strokeColor||"#000",sd:b.strokeOpacity||1,oc:b.strokeWeight};this.xb="number"===typeof a?a:"UserDefined";this.li=this.style.anchor;this.vq=new K(0,0);this.anchor=p;this.hA=a;var c=this;I.load("symbol",function(){c.Vm()},o)}} w.extend(mc.prototype,{setPath:ba("hA"),setAnchor:function(a){this.li=this.style.anchor=a},setRotation:function(a){this.style.rotation=a},setScale:function(a){this.style.scale=a},setStrokeWeight:function(a){this.style.oc=a},setStrokeColor:function(a){a=w.lr.oB(a,this.style.sd);this.style.strokeColor=a},setStrokeOpacity:function(a){this.style.sd=a},setFillOpacity:function(a){this.style.Zf=a},setFillColor:function(a){this.style.fillColor=a}});function nc(a,b,c,d){a&&(this.Ju={},this.wJ=d?!!d:q,this.Fc=[],this.cY=a instanceof mc?a:p,this.gH=b===j?o:!!(b.indexOf("%")+1),this.Bj=isNaN(parseFloat(b))?1:this.gH?parseFloat(b)/100:parseFloat(b),this.hH=!!(c.indexOf("%")+1),this.repeat=c!=j?this.hH?parseFloat(c)/100:parseFloat(c):0)};function oc(a,b){w.lang.ra.call(this);this.content=a;this.map=p;b=b||{};this.z={width:b.width||0,height:b.height||0,maxWidth:b.maxWidth||730,pa:b.offset||new K(0,0),title:b.title||"",xD:b.maxContent||"",Gg:b.enableMaximize||q,Ir:b.enableAutoPan===q?q:o,$B:b.enableCloseOnClick===q?q:o,margin:b.margin||[10,10,40,10],jB:b.collisions||[[10,10],[10,10],[10,10],[10,10]],GV:q,yW:b.onClosing||da(o),cC:b.enableMessage===q?q:o,eC:b.enableParano===o?o:q,message:b.message,gC:b.enableSearchTool===o?o:q,yw:b.headerContent|| ""};if(0!=this.z.width&&(220>this.z.width&&(this.z.width=220),730<this.z.width))this.z.width=730;if(0!=this.z.height&&(60>this.z.height&&(this.z.height=60),650<this.z.height))this.z.height=650;if(0!=this.z.maxWidth&&(220>this.z.maxWidth&&(this.z.maxWidth=220),730<this.z.maxWidth))this.z.maxWidth=730;this.Kd=q;this.hi=E.ea;this.Qa=p;var c=this;I.load("infowindow",function(){c.ob()})}w.lang.ia(oc,w.lang.ra,"InfoWindow"); w.extend(oc.prototype,{setWidth:function(a){!a&&0!=a||(isNaN(a)||0>a)||(0!=a&&(220>a&&(a=220),730<a&&(a=730)),this.z.width=a)},setHeight:function(a){!a&&0!=a||(isNaN(a)||0>a)||(0!=a&&(60>a&&(a=60),650<a&&(a=650)),this.z.height=a)},bM:function(a){!a&&0!=a||(isNaN(a)||0>a)||(0!=a&&(220>a&&(a=220),730<a&&(a=730)),this.z.maxWidth=a)},nc:function(a){this.z.title=a},getTitle:function(){return this.z.title},Mc:ba("content"),Tj:u("content"),Ps:function(a){this.z.xD=a+""},Pd:s(),Ir:function(){this.z.Ir=o}, disableAutoPan:function(){this.z.Ir=q},enableCloseOnClick:function(){this.z.$B=o},disableCloseOnClick:function(){this.z.$B=q},Gg:function(){this.z.Gg=o},Uv:function(){this.z.Gg=q},show:function(){this.Da=o},J:function(){this.Da=q},close:function(){this.J()},Qw:function(){this.Kd=o},restore:function(){this.Kd=q},Rg:function(){return this.Ja()},Ja:da(q),V:function(){if(this.Qa&&this.Qa.V)return this.Qa.V()},Af:function(){return this.z.pa}}); Ka.prototype.bc=function(a,b){if(a instanceof oc&&b instanceof H){var c=this.H;c.gm?c.gm.ha(b):(c.gm=new R(b,{icon:new lc(E.ea+"blank.gif",{width:1,height:1}),offset:new K(0,0),clickable:q}),c.gm.AP=1);this.wa(c.gm);c.gm.bc(a)}};Ka.prototype.Hc=function(){var a=this.H.Ya||this.H.Jk;a&&a.Qa&&a.Qa.Hc()};fb.prototype.bc=function(a){this.map&&(this.map.Hc(),a.Da=o,this.map.H.Jk=a,a.Qa=this,w.lang.ra.call(a,a.Q))}; fb.prototype.Hc=function(){this.map&&this.map.H.Jk&&(this.map.H.Jk.Da=q,w.lang.Rv(this.map.H.Jk.Q),this.map.H.Jk=p)};function pc(a,b){fb.call(this);this.content=a;this.K=this.map=p;b=b||{};this.z={width:0,pa:b.offset||new K(0,0),bp:{backgroundColor:"#fff",border:"1px solid #f00",padding:"1px",whiteSpace:"nowrap",font:"12px "+E.fontFamily,zIndex:"80",MozUserSelect:"none"},position:b.position||p,Ri:b.enableMassClear===q?q:o,Oe:o};0>this.z.width&&(this.z.width=0);Gb(b.enableClicking)&&(this.z.Oe=b.enableClicking);this.point=this.z.position;var c=this;I.load("marker",function(){c.ob()})}w.lang.ia(pc,fb,"Label"); w.extend(pc.prototype,{V:function(){return this.Au?this.Au.V():this.point},ha:function(a){a instanceof H&&!this.nw()&&(this.point=this.z.position=new H(a.lng,a.lat))},Mc:ba("content"),fE:function(a){0<=a&&1>=a&&(this.z.opacity=a)},ee:function(a){a instanceof K&&(this.z.pa=new K(a.width,a.height))},Af:function(){return this.z.pa},qd:function(a){a=a||{};this.z.bp=w.extend(this.z.bp,a)},ai:function(a){return this.qd(a)},nc:function(a){this.z.title=a||""},getTitle:function(){return this.z.title},aM:function(a){this.point= (this.Au=a)?this.z.position=a.V():this.z.position=p},nw:function(){return this.Au||p},Tj:u("content")});function qc(a,b){if(0!==arguments.length){fb.apply(this,arguments);b=b||{};this.z={Ta:a,opacity:b.opacity||1,$l:b.$l||"",Ar:b.displayOnMinLevel||1,zr:b.displayOnMaxLevel||19};var c=this;I.load("groundoverlay",function(){c.ob()})}}w.lang.ia(qc,fb,"GroundOverlay"); w.extend(qc.prototype,{setBounds:function(a){this.z.Ta=a},getBounds:function(){return this.z.Ta},setOpacity:function(a){this.z.opacity=a},getOpacity:function(){return this.z.opacity},setImageURL:function(a){this.z.$l=a},getImageURL:function(){return this.z.$l},setDispalyOnMinLevel:function(a){this.z.Ar=a},getDispalyOnMinLevel:function(){return this.z.Ar},setDispalyOnMaxLevel:function(a){this.z.zr=a},getDispalyOnMaxLevel:function(){return this.z.zr}});var rc=3,sc=4;function tc(){var a=document.createElement("canvas");return!(!a.getContext||!a.getContext("2d"))} function uc(a,b){var c=this;tc()&&(a===j&&aa(Error("\u6ca1\u6709\u4f20\u5165points\u6570\u636e")),"[object Array]"!==Object.prototype.toString.call(a)&&aa(Error("points\u6570\u636e\u4e0d\u662f\u6570\u7ec4")),b=b||{},fb.apply(c,arguments),c.R={W:a},c.z={shape:b.shape||rc,size:b.size||sc,color:b.color||"#fa937e",Ri:o},this.eA=[],this.Ud=[],I.load("pointcollection",function(){for(var a=0,b;b=c.eA[a];a++)c[b.method].apply(c,b.arguments);for(a=0;b=c.Ud[a];a++)c[b.method].apply(c,b.arguments)}))} w.lang.ia(uc,fb,"PointCollection");w.extend(uc.prototype,{initialize:function(a){this.eA&&this.eA.push({method:"initialize",arguments:arguments})},setPoints:function(a){this.Ud&&this.Ud.push({method:"setPoints",arguments:arguments})},setStyles:function(a){this.Ud&&this.Ud.push({method:"setStyles",arguments:arguments})},clear:function(){this.Ud&&this.Ud.push({method:"clear",arguments:arguments})},remove:function(){this.Ud&&this.Ud.push({method:"remove",arguments:arguments})}});var vc=new lc(E.ea+"marker_red_sprite.png",new K(19,25),{anchor:new K(10,25),infoWindowAnchor:new K(10,0)}),wc=new lc(E.ea+"marker_red_sprite.png",new K(20,11),{anchor:new K(6,11),imageOffset:new K(-19,-13)}); function R(a,b){fb.call(this);b=b||{};this.point=a;this.Bp=this.map=p;this.z={pa:b.offset||new K(0,0),Qg:b.icon||vc,lk:wc,title:b.title||"",label:p,vI:b.baseZIndex||0,Oe:o,J1:q,nD:q,Ri:b.enableMassClear===q?q:o,Pb:q,KL:b.raiseOnDrag===o?o:q,QL:q,gd:b.draggingCursor||E.gd,rotation:b.rotation||0};b.icon&&!b.shadow&&(this.z.lk=p);b.enableDragging&&(this.z.Pb=b.enableDragging);Gb(b.enableClicking)&&(this.z.Oe=b.enableClicking);var c=this;I.load("marker",function(){c.ob()})}R.Lt=hc.Ul(-90)+1E6; R.UE=R.Lt+1E6;w.lang.ia(R,fb,"Marker"); w.extend(R.prototype,{Kb:function(a){if(a instanceof lc||a instanceof mc)this.z.Qg=a},fo:function(){return this.z.Qg},vx:function(a){a instanceof lc&&(this.z.lk=a)},getShadow:function(){return this.z.lk},xm:function(a){this.z.label=a||p},HC:function(){return this.z.label},Pb:function(){this.z.Pb=o},HB:function(){this.z.Pb=q},V:u("point"),ha:function(a){a instanceof H&&(this.point=new H(a.lng,a.lat))},bi:function(a,b){this.z.nD=!!a;a&&(this.pF=b||0)},nc:function(a){this.z.title=a+""},getTitle:function(){return this.z.title}, ee:function(a){a instanceof K&&(this.z.pa=a)},Af:function(){return this.z.pa},wm:ba("Bp"),Xo:function(a){this.z.rotation=a},TJ:function(){return this.z.rotation}});function xc(a,b){jc.call(this,b);b=b||{};this.z.Zf=b.fillOpacity?b.fillOpacity:0.65;this.z.fillColor=""==b.fillColor?"":b.fillColor?b.fillColor:"#fff";this.fe(a);var c=this;I.load("poly",function(){c.ob()})}w.lang.ia(xc,jc,"Polygon"); w.extend(xc.prototype,{fe:function(a,b){this.Fn=jc.hw(a).slice(0);var c=jc.hw(a).slice(0);1<c.length&&c.push(new H(c[0].lng,c[0].lat));jc.prototype.fe.call(this,c,b)},zm:function(a,b){this.Fn[a]&&(this.Fn[a]=new H(b.lng,b.lat),this.W[a]=new H(b.lng,b.lat),0==a&&!this.W[0].Xa(this.W[this.W.length-1])&&(this.W[this.W.length-1]=new H(b.lng,b.lat)),this.fh())},Zd:function(){var a=this.Fn;0==a.length&&(a=this.W);return a}});function yc(a,b){jc.call(this,b);this.Rq(a);var c=this;I.load("poly",function(){c.ob()})}w.lang.ia(yc,jc,"Polyline");function zc(a,b,c){this.point=a;this.la=Math.abs(b);xc.call(this,[],c)}zc.FD=[0.01,1.0E-4,1.0E-5,4.0E-6];w.lang.ia(zc,xc,"Circle"); w.extend(zc.prototype,{initialize:function(a){this.map=a;this.W=this.nu(this.point,this.la);this.fh();return p},ya:u("point"),Ff:function(a){a&&(this.point=a)},RJ:u("la"),$e:function(a){this.la=Math.abs(a)},nu:function(a,b){if(!a||!b||!this.map)return[];for(var c=[],d=b/6378800,e=Math.PI/180*a.lat,f=Math.PI/180*a.lng,g=0;360>g;g+=9){var i=Math.PI/180*g,k=Math.asin(Math.sin(e)*Math.cos(d)+Math.cos(e)*Math.sin(d)*Math.cos(i)),i=new H(((f-Math.atan2(Math.sin(i)*Math.sin(d)*Math.cos(e),Math.cos(d)-Math.sin(e)* Math.sin(k))+Math.PI)%(2*Math.PI)-Math.PI)*(180/Math.PI),k*(180/Math.PI));c.push(i)}d=c[0];c.push(new H(d.lng,d.lat));return c}});var Ac={};function Bc(a){this.map=a;this.fm=[];this.Gf=[];this.ng=[];this.eT=300;this.OD=0;this.eg={};this.Ii={};this.Wg=0;this.hD=o;this.VI={};this.zu=this.Ym(1);this.ve=this.Ym(2);this.tq=this.Ym(3);a.platform.appendChild(this.zu);a.platform.appendChild(this.ve);a.platform.appendChild(this.tq)}z.Ee(function(a){var b=new Bc(a);b.fa();a.sb=b}); w.extend(Bc.prototype,{fa:function(){var a=this,b=a.map;b.addEventListener("loadcode",function(){a.Nw()});b.addEventListener("addtilelayer",function(b){a.Dg(b)});b.addEventListener("removetilelayer",function(b){a.$g(b)});b.addEventListener("setmaptype",function(b){a.lg(b)});b.addEventListener("zoomstartcode",function(b){a.xc(b)});b.addEventListener("setcustomstyles",function(b){a.Os(b.target);a.gg(o)})},Nw:function(){var a=this;if(w.S.ba)try{document.execCommand("BackgroundImageCache",q,o)}catch(b){}this.loaded|| a.Ew();a.gg();this.loaded||(this.loaded=o,I.load("tile",function(){a.ZN()}))},Ew:function(){for(var a=this.map.ja().oq,b=0;b<a.length;b++){var c=new Cc;w.extend(c,a[b]);this.fm.push(c);c.fa(this.map,this.zu)}this.Os()},Ym:function(a){var b=J("div");b.style.position="absolute";b.style.overflow="visible";b.style.left=b.style.top="0";b.style.zIndex=a;return b},cf:function(){this.Wg--;var a=this;this.hD&&(this.map.dispatchEvent(new L("onfirsttileloaded")),this.hD=q);0==this.Wg&&(this.oi&&(clearTimeout(this.oi), this.oi=p),this.oi=setTimeout(function(){if(a.Wg==0){a.map.dispatchEvent(new L("ontilesloaded"));a.hD=o}a.oi=p},80))},SC:function(a,b){return"TILE-"+b.Q+"-"+a[0]+"-"+a[1]+"-"+a[2]},Bw:function(a){var b=a.rb;b&&zb(b)&&b.parentNode.removeChild(b);delete this.eg[a.name];a.loaded||(Dc(a),a.rb=p,a.im=p)},Tl:function(a,b,c){var d=this.map,e=d.ja(),f=d.Ba,g=d.uc,i=e.lc(f),k=this.HJ(),l=k[0],m=k[1],n=k[2],t=k[3],v=k[4],c="undefined"!=typeof c?c:0,e=e.k.tb,k=d.Q.replace(/^TANGRAM_/,"");for(this.Bc?this.Bc.length= 0:this.Bc=[];l<n;l++)for(var x=m;x<t;x++){var y=l,B=x;this.Bc.push([y,B]);y=k+"_"+b+"_"+y+"_"+B+"_"+f;this.VI[y]=y}this.Bc.sort(function(a){return function(b,c){return 0.4*Math.abs(b[0]-a[0])+0.6*Math.abs(b[1]-a[1])-(0.4*Math.abs(c[0]-a[0])+0.6*Math.abs(c[1]-a[1]))}}([v[0]-1,v[1]-1]));g=[Math.round(-g.lng/i),Math.round(g.lat/i)];l=-d.offsetY+d.height/2;a.style.left=-d.offsetX+d.width/2+"px";a.style.top=l+"px";this.we?this.we.length=0:this.we=[];l=0;for(d=a.childNodes.length;l<d;l++)x=a.childNodes[l], x.kq=q,this.we.push(x);if(l=this.lm)for(var A in l)delete l[A];else this.lm={};this.xe?this.xe.length=0:this.xe=[];l=0;for(d=this.Bc.length;l<d;l++){A=this.Bc[l][0];i=this.Bc[l][1];x=0;for(m=this.we.length;x<m;x++)if(n=this.we[x],n.id==k+"_"+b+"_"+A+"_"+i+"_"+f){n.kq=o;this.lm[n.id]=n;break}}l=0;for(d=this.we.length;l<d;l++)n=this.we[l],n.kq||this.xe.push(n);this.Em=[];x=(e+c)*this.map.D.devicePixelRatio;l=0;for(d=this.Bc.length;l<d;l++)A=this.Bc[l][0],i=this.Bc[l][1],t=A*e+g[0]-c/2,v=(-1-i)*e+g[1]- c/2,y=k+"_"+b+"_"+A+"_"+i+"_"+f,m=this.lm[y],n=p,m?(n=m.style,n.left=t+"px",n.top=v+"px",m.Ie||this.Em.push([A,i,m])):(0<this.xe.length?(m=this.xe.shift(),m.getContext("2d").clearRect(-c/2,-c/2,x,x),n=m.style):(m=document.createElement("canvas"),n=m.style,n.position="absolute",n.width=e+c+"px",n.height=e+c+"px",this.Iw()&&(n.WebkitTransform="scale(1.001)"),m.setAttribute("width",x),m.setAttribute("height",x),a.appendChild(m)),m.id=y,n.left=t+"px",n.top=v+"px",-1<y.indexOf("bg")&&(t="#F3F1EC",this.map.D.Nn&& (t=this.map.D.Nn),n.background=t?t:""),this.Em.push([A,i,m])),m.style.visibility="";l=0;for(d=this.xe.length;l<d;l++)this.xe[l].style.visibility="hidden";return this.Em},Iw:function(){return/M040/i.test(navigator.userAgent)},HJ:function(){var a=this.map,b=a.ja(),c=a.Ba;b.lc(c);var c=b.WC(c),d=a.uc,e=Math.ceil(d.lng/c),f=Math.ceil(d.lat/c),b=b.k.tb,c=[e,f,(d.lng-e*c)/c*b,(d.lat-f*c)/c*b];return[c[0]-Math.ceil((a.width/2-c[2])/b),c[1]-Math.ceil((a.height/2-c[3])/b),c[0]+Math.ceil((a.width/2+c[2])/b), c[1]+Math.ceil((a.height/2+c[3])/b),c]},TX:function(a,b,c,d){var e=this;e.XZ=b;var f=this.map.ja(),g=e.SC(a,c),i=f.k.tb,b=[a[0]*i+b[0],(-1-a[1])*i+b[1]],k=this.eg[g];k&&k.rb?(xb(k.rb,b),d&&(d=new P(a[0],a[1]),f=this.map.D.ae?this.map.D.ae.style:"normal",d=c.getTilesUrl(d,a[2],f),k.loaded=q,Ec(k,d)),k.loaded?this.cf():Fc(k,function(){e.cf()})):(k=this.Ii[g])&&k.rb?(c.Gb.insertBefore(k.rb,c.Gb.lastChild),this.eg[g]=k,xb(k.rb,b),d&&(d=new P(a[0],a[1]),f=this.map.D.ae?this.map.D.ae.style:"normal",d=c.getTilesUrl(d, a[2],f),k.loaded=q,Ec(k,d)),k.loaded?this.cf():Fc(k,function(){e.cf()})):(k=i*Math.pow(2,f.Ol()-a[2]),new H(a[0]*k,a[1]*k),d=new P(a[0],a[1]),f=this.map.D.ae?this.map.D.ae.style:"normal",d=c.getTilesUrl(d,a[2],f),k=new Gc(this,d,b,a,c),Fc(k,function(){e.cf()}),Hc(k),this.eg[g]=k)},cf:function(){this.Wg--;var a=this;0==this.Wg&&(this.oi&&(clearTimeout(this.oi),this.oi=p),this.oi=setTimeout(function(){if(a.Wg==0){a.map.dispatchEvent(new L("ontilesloaded"));if(ua){if(ra&&sa&&ta){var b=$a(),c=a.map.Ib(); setTimeout(function(){Pa(5030,{load_script_time:sa-ra,load_tiles_time:b-ta,map_width:c.width,map_height:c.height,map_size:c.width*c.height})},1E4);va.Xb("img_fisrt_loaded");va.Xb("map_width",c.width);va.Xb("map_height",c.height);va.Xb("map_size",c.width*c.height);va.rm()}ua=q}}a.oi=p},80))},SC:function(a,b){return this.map.ja()===Oa?"TILE-"+b.Q+"-"+this.map.Ev+"-"+a[0]+"-"+a[1]+"-"+a[2]:"TILE-"+b.Q+"-"+a[0]+"-"+a[1]+"-"+a[2]},Bw:function(a){var b=a.rb;b&&(Ic(b),zb(b)&&b.parentNode.removeChild(b)); delete this.eg[a.name];a.loaded||(Ic(b),Dc(a),a.rb=p,a.im=p)},gg:function(a){var b=this;if(b.map.ja()==Oa)I.load("coordtrans",function(){b.map.Ob||(b.map.Ob=Oa.Sj(b.map.Rn),b.map.Ev=Oa.FJ(b.map.Ob));b.OG()},o);else{if(a&&a)for(var c in this.Ii)delete this.Ii[c];b.OG(a)}},OG:function(a){for(var b=this.fm.concat(this.Gf),c=b.length,d=0;d<c;d++){var e=b[d];if(e.kd&&l.Ba<e.kd)break;if(e.zv){var f=this.Gb=e.Gb;if(a){var g=f;if(g&&g.childNodes)for(var i=g.childNodes.length,k=i-1;0<=k;k--)i=g.childNodes[k], g.removeChild(i),i=p}if(this.map.Mb()){this.ve.style.display="block";f.style.display="none";this.map.dispatchEvent(new L("vectorchanged"),{isvector:o});continue}else f.style.display="block",this.ve.style.display="none",this.map.dispatchEvent(new L("vectorchanged"),{isvector:q})}if(!e.FG&&!(e.xo&&!this.map.Mb()||e.AK&&this.map.Mb())){var l=this.map,m=l.ja(),f=m.mo(),i=l.Ba,n=l.uc;m==Oa&&n.Xa(new H(0,0))&&(n=l.uc=f.em(l.vf,l.Ob));var t=m.lc(i),i=m.WC(i),f=Math.ceil(n.lng/i),g=Math.ceil(n.lat/i),v=m.k.tb, i=[f,g,(n.lng-f*i)/i*v,(n.lat-g*i)/i*v],k=i[0]-Math.ceil((l.width/2-i[2])/v),f=i[1]-Math.ceil((l.height/2-i[3])/v),g=i[0]+Math.ceil((l.width/2+i[2])/v),x=0;m===Oa&&15==l.U()&&(x=1);m=i[1]+Math.ceil((l.height/2+i[3])/v)+x;this.sI=new H(n.lng,n.lat);var y=this.eg,v=-this.sI.lng/t,x=this.sI.lat/t,t=[Math.ceil(v),Math.ceil(x)],n=l.U(),B;for(B in y){var A=y[B],D=A.info;(D[2]!=n||D[2]==n&&(k>D[0]||g<=D[0]||f>D[1]||m<=D[1]))&&this.Bw(A)}y=-l.offsetX+l.width/2;A=-l.offsetY+l.height/2;e.Gb&&(e.Gb.style.left= Math.ceil(v+y)-t[0]+"px",e.Gb.style.top=Math.ceil(x+A)-t[1]+"px",e.Gb.style.WebkitTransform="translate3d(0,0,0)");v=[];for(l.JA=[];k<g;k++)for(x=f;x<m;x++)v.push([k,x]),l.JA.push({x:k,y:x});v.sort(function(a){return function(b,c){return 0.4*Math.abs(b[0]-a[0])+0.6*Math.abs(b[1]-a[1])-(0.4*Math.abs(c[0]-a[0])+0.6*Math.abs(c[1]-a[1]))}}([i[0]-1,i[1]-1]));i=v.length;this.Wg+=i;for(k=0;k<i;k++)this.TX([v[k][0],v[k][1],n],t,e,a)}}},Dg:function(a){var b=this,c=a.target,a=b.map.Mb();if(c instanceof cb)a&& !c.am&&(c.fa(this.map,this.ve),c.am=o);else if(c.Hf&&this.map.Dg(c.Hf),c.xo){for(a=0;a<b.ng.length;a++)if(b.ng[a]==c)return;I.load("vector",function(){c.fa(b.map,b.ve);b.ng.push(c)},o)}else{for(a=0;a<b.Gf.length;a++)if(b.Gf[a]==c)return;c.fa(this.map,this.tq);b.Gf.push(c)}},$g:function(a){var a=a.target,b=this.map.Mb();if(a instanceof cb)b&&a.am&&(a.remove(),a.am=q);else{a.Hf&&this.map.$g(a.Hf);if(a.xo)for(var b=0,c=this.ng.length;b<c;b++)a==this.ng[b]&&this.ng.splice(b,1);else{b=0;for(c=this.Gf.length;b< c;b++)a==this.Gf[b]&&this.Gf.splice(b,1)}a.remove()}},lg:function(){for(var a=this.fm,b=0,c=a.length;b<c;b++)a[b].remove();delete this.Gb;this.fm=[];this.Ii=this.eg={};this.Ew();this.gg()},xc:function(){var a=this;a.Zc&&w.C.J(a.Zc);setTimeout(function(){a.gg();a.map.dispatchEvent(new L("onzoomend"))},10)},y1:s(),Os:function(a){var b=this.map.ja();if(!this.map.Mb()&&(a?this.map.D.$X=a:a=this.map.D.$X,a))for(var c=p,c="2"==z.Kx?[z.url.proto+z.url.domain.main_domain_cdn.other[0]+"/"]:[z.url.proto+z.url.domain.main_domain_cdn.baidu[0]+ "/",z.url.proto+z.url.domain.main_domain_cdn.baidu[1]+"/",z.url.proto+z.url.domain.main_domain_cdn.baidu[2]+"/"],d=0,e;e=this.fm[d];d++)if(e.PX==o){b.k.Wc=18;this.map.Og()&&(b.k.Cw=18);e.getTilesUrl=function(b,d){var e=b.x,k=b.y,l="customimage/tile?&x="+e+"&y="+k+"&z="+d+"&udt=20150401",l=a.styleStr?l+("&styles="+encodeURIComponent(a.styleStr)):l+("&customid="+a.style);return c[Math.abs(e+k)%c.length]+l};break}}});function Gc(a,b,c,d,e){this.im=a;this.position=c;this.Wt=[];this.name=a.SC(d,e);this.info=d;this.QH=e.qs();d=J("img");yb(d);d.zJ=q;var f=d.style,a=a.map.ja();f.position="absolute";f.border="none";f.width=a.k.tb+"px";f.height=a.k.tb+"px";f.left=c[0]+"px";f.top=c[1]+"px";f.maxWidth="none";this.rb=d;this.src=b;Jc&&(this.rb.style.opacity=0);var g=this;this.rb.onload=function(){z.fW.IO();g.loaded=o;if(g.im){var a=g.im,b=a.Ii;if(!b[g.name]){a.OD++;b[g.name]=g}if(g.rb&&!zb(g.rb)&&e.Gb){e.Gb.appendChild(g.rb); if(w.S.ba<=6&&w.S.ba>0&&g.QH)g.rb.style.cssText=g.rb.style.cssText+(';filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src="'+g.src+'",sizingMethod=scale);')}var c=a.OD-a.eT,d;for(d in b){if(c<=0)break;if(!a.eg[d]){b[d].im=p;var f=b[d].rb;if(f&&f.parentNode){f.parentNode.removeChild(f);Ic(f)}f=p;b[d].rb=p;delete b[d];a.OD--;c--}}Jc&&new tb({Uc:20,duration:200,ma:function(a){if(g.rb&&g.rb.style)g.rb.style.opacity=a*1},finish:function(){g.rb&&g.rb.style&&delete g.rb.style.opacity}});Dc(g)}}; this.rb.onerror=function(){Dc(g);if(g.im){var a=g.im.map.ja();if(a.k.hC){g.error=o;g.rb.src=a.k.hC;g.rb&&!zb(g.rb)&&e.Gb.appendChild(g.rb)}}};d=p}function Fc(a,b){a.Wt.push(b)}function Hc(a){a.rb.src=0<w.S.ba&&6>=w.S.ba&&a.QH?E.ea+"blank.gif":""!==a.src&&a.rb.src==a.src?a.src+"&t = "+Date.now():a.src}function Dc(a){for(var b=0;b<a.Wt.length;b++)a.Wt[b]();a.Wt.length=0} function Ic(a){if(a){a.onload=a.onerror=p;var b=a.attributes,c,d,e;if(b){d=b.length;for(c=0;c<d;c+=1)e=b[c].name,Wa(a[e])&&(a[e]=p)}if(b=a.children){d=b.length;for(c=0;c<d;c+=1)Ic(a.children[c])}}}function Ec(a,b){a.src=b;Hc(a)}var Jc=!w.S.ba||8<w.S.ba;function Cc(a){this.Fo=a||{};this.xT=this.Fo.copyright||p;this.zY=this.Fo.transparentPng||q;this.zv=this.Fo.baseLayer||q;this.zIndex=this.Fo.zIndex||0;this.Q=Cc.nQ++}Cc.nQ=0;w.lang.ia(Cc,w.lang.ra,"TileLayer"); w.extend(Cc.prototype,{fa:function(a,b){this.zv&&(this.zIndex=-100);this.map=a;if(!this.Gb){var c=J("div"),d=c.style;d.position="absolute";d.overflow="visible";d.zIndex=this.zIndex;d.left=Math.ceil(-a.offsetX+a.width/2)+"px";d.top=Math.ceil(-a.offsetY+a.height/2)+"px";b.appendChild(c);this.Gb=c}c=a.ja();a.Og()&&c==La&&(c.k.tb=128,d=function(a){return Math.pow(2,18-a)*2},c.lc=d,c.k.de.lc=d)},remove:function(){this.Gb&&this.Gb.parentNode&&(this.Gb.innerHTML="",this.Gb.parentNode.removeChild(this.Gb)); delete this.Gb},qs:u("zY"),getTilesUrl:function(a,b){var c="";this.Fo.tileUrlTemplate&&(c=this.Fo.tileUrlTemplate.replace(/\{X\}/,a.x),c=c.replace(/\{Y\}/,a.y),c=c.replace(/\{Z\}/,b));return c},Ml:u("xT"),ja:function(){return this.ib||La}});function Kc(a,b){Hb(a)?b=a||{}:(b=b||{},b.databoxId=a);this.k={WI:b.databoxId,Jg:b.geotableId,hx:b.q||"",gt:b.tags||"",filter:b.filter||"",Cx:b.sortby||"",YX:b.styleId||"",pl:b.ak||qa,wv:b.age||36E5,zIndex:11,bW:"VectorCloudLayer",$j:b.hotspotName||"vector_md_"+(1E5*Math.random()).toFixed(0),KS:"LBS\u4e91\u9ebb\u70b9\u5c42"};this.xo=o;Cc.call(this,this.k);this.NT=z.tc+"geosearch/detail/";this.OT=z.tc+"geosearch/v2/detail/";this.to={}}w.ia(Kc,Cc,"VectorCloudLayer");function Lc(a){a=a||{};this.k=w.extend(a,{zIndex:1,bW:"VectorTrafficLayer",KS:"\u77e2\u91cf\u8def\u51b5\u5c42"});this.xo=o;Cc.call(this,this.k);this.vY=z.url.proto+z.url.domain.vector_traffic+"/gvd/?qt=lgvd&styles=pl&layers=tf";this.nb={"0":[2,1354709503,2,2,0,[],0,0],1:[2,1354709503,3,2,0,[],0,0],10:[2,-231722753,2,2,0,[],0,0],11:[2,-231722753,3,2,0,[],0,0],12:[2,-231722753,4,2,0,[],0,0],13:[2,-231722753,5,2,0,[],0,0],14:[2,-231722753,6,2,0,[],0,0],15:[2,-1,4,0,0,[],0,0],16:[2,-1,5.5,0,0,[],0,0], 17:[2,-1,7,0,0,[],0,0],18:[2,-1,8.5,0,0,[],0,0],19:[2,-1,10,0,0,[],0,0],2:[2,1354709503,4,2,0,[],0,0],3:[2,1354709503,5,2,0,[],0,0],4:[2,1354709503,6,2,0,[],0,0],5:[2,-6350337,2,2,0,[],0,0],6:[2,-6350337,3,2,0,[],0,0],7:[2,-6350337,4,2,0,[],0,0],8:[2,-6350337,5,2,0,[],0,0],9:[2,-6350337,6,2,0,[],0,0]}}w.ia(Lc,Cc,"VectorTrafficLayer");function cb(a){this.fT=[z.url.proto+z.url.domain.TILE_ONLINE_URLS[1]+"/gvd/?",z.url.proto+z.url.domain.TILE_ONLINE_URLS[2]+"/gvd/?",z.url.proto+z.url.domain.TILE_ONLINE_URLS[3]+"/gvd/?",z.url.proto+z.url.domain.TILE_ONLINE_URLS[4]+"/gvd/?"];this.k={vJ:q};for(var b in a)this.k[b]=a[b];this.Ch=this.jh=this.Ka=this.A=this.B=p;this.GK=0;var c=this;I.load("vector",function(){c.bf()})}w.extend(cb.prototype,{fa:function(a,b){this.B=a;this.A=b},remove:function(){this.A=this.B=p}});function Mc(a){Cc.call(this,a);this.k=a||{};this.AK=o;this.Hf=new Lc;this.Hf.Ix=this;if(this.k.predictDate){if(1>this.k.predictDate.weekday||7<this.k.predictDate.weekday)this.k.predictDate=1;if(0>this.k.predictDate.hour||23<this.k.predictDate.hour)this.k.predictDate.hour=0}this.pS=z.url.proto+z.url.domain.traffic+":8002/traffic/"}Mc.prototype=new Cc;Mc.prototype.fa=function(a,b){Cc.prototype.fa.call(this,a,b);this.B=a};Mc.prototype.qs=da(o); Mc.prototype.getTilesUrl=function(a,b){var c="";this.k.predictDate?c="HistoryService?day="+(this.k.predictDate.weekday-1)+"&hour="+this.k.predictDate.hour+"&t="+(new Date).getTime()+"&":(c="TrafficTileService?time="+(new Date).getTime()+"&",this.B.Og()||(c+="label=web2D&v=016&"));return(this.pS+c+"level="+b+"&x="+a.x+"&y="+a.y).replace(/-(\d+)/gi,"M$1")};var Nc=[z.url.proto+z.url.domain.TILES_YUN_HOST[0]+"/georender/gss",z.url.proto+z.url.domain.TILES_YUN_HOST[1]+"/georender/gss",z.url.proto+z.url.domain.TILES_YUN_HOST[2]+"/georender/gss",z.url.proto+z.url.domain.TILES_YUN_HOST[3]+"/georender/gss"],Oc=100; function ob(a,b){Cc.call(this);var c=this;this.AK=o;var d=q;try{document.createElement("canvas").getContext("2d"),d=o}catch(e){d=q}d&&(this.Hf=new Kc(a,b),this.Hf.Ix=this);Hb(a)?b=a||{}:(c.Op=a,b=b||{});b.geotableId&&(c.Of=b.geotableId);b.databoxId&&(c.Op=b.databoxId);d=z.tc+"geosearch";c.kc={NW:b.pointDensity||Oc,DV:d+"/detail/",EV:d+"/v2/detail/",wv:b.age||36E5,hx:b.q||"",iY:"png",e0:[5,5,5,5],aW:{backgroundColor:"#FFFFD5",borderColor:"#808080"},pl:b.ak||qa,gt:b.tags||"",filter:b.filter||"",Cx:b.sortby|| "",$j:b.hotspotName||"tile_md_"+(1E5*Math.random()).toFixed(0)};I.load("clayer",function(){c.he()})}ob.prototype=new Cc;ob.prototype.fa=function(a,b){Cc.prototype.fa.call(this,a,b);this.B=a}; ob.prototype.getTilesUrl=function(a,b){var c=a.x,d=a.y,e=this.kc,c=Nc[Math.abs(c+d)%Nc.length]+"/image?grids="+c+"_"+d+"_"+b+"&q="+e.hx+"&tags="+e.gt+"&filter="+e.filter+"&sortby="+e.Cx+"&ak="+this.kc.pl+"&age="+e.wv+"&page_size="+e.NW+"&format="+e.iY;this.Of?c+="&geotable_id="+this.Of:this.Op&&(c+="&databox_id="+this.Op);return c};ob.NR=/^point\(|\)$/ig;ob.OR=/\s+/;ob.QR=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function Pc(a,b,c){this.Le=a;this.oq=b instanceof Cc?[b]:b.slice(0);c=c||{};this.k={jY:c.tips||"",rD:"",kd:c.minZoom||3,Wc:c.maxZoom||18,BV:c.minZoom||3,Cw:c.maxZoom||18,tb:256,hY:c.textColor||"black",hC:c.errorImageUrl||"",de:c.projection||new Q};1<=this.oq.length&&(this.oq[0].zv=o);w.extend(this.k,c)} w.extend(Pc.prototype,{getName:u("Le"),bs:function(){return this.k.jY},M_:function(){return this.k.rD},pV:function(){return this.oq[0]},Z_:u("oq"),qV:function(){return this.k.tb},ho:function(){return this.k.kd},Ol:function(){return this.k.Wc},setMaxZoom:function(a){this.k.Wc=a},as:function(){return this.k.hY},mo:function(){return this.k.de},H_:function(){return this.k.hC},qV:function(){return this.k.tb},lc:function(a){return Math.pow(2,18-a)},WC:function(a){return this.lc(a)*this.k.tb}}); var Qc=[z.url.proto+z.url.domain.TILE_BASE_URLS[0]+"/it/",z.url.proto+z.url.domain.TILE_BASE_URLS[1]+"/it/",z.url.proto+z.url.domain.TILE_BASE_URLS[2]+"/it/",z.url.proto+z.url.domain.TILE_BASE_URLS[3]+"/it/",z.url.proto+z.url.domain.TILE_BASE_URLS[4]+"/it/"],Rc=[z.url.proto+z.url.domain.TILE_ONLINE_URLS[0]+"/tile/",z.url.proto+z.url.domain.TILE_ONLINE_URLS[1]+"/tile/",z.url.proto+z.url.domain.TILE_ONLINE_URLS[2]+"/tile/",z.url.proto+z.url.domain.TILE_ONLINE_URLS[3]+"/tile/",z.url.proto+z.url.domain.TILE_ONLINE_URLS[4]+ "/tile/"],Sc={dark:"dl",light:"ll",normal:"pl"},Tc=new Cc;Tc.PX=o;Tc.getTilesUrl=function(a,b,c){var d=a.x,a=a.y,e="pl",f=1;this.map.Og();!G()&&2<=window.devicePixelRatio&&(f=2);e=Sc[c];return(Rc[Math.abs(d+a)%Rc.length]+"?qt=tile&x="+(d+"").replace(/-/gi,"M")+"&y="+(a+"").replace(/-/gi,"M")+"&z="+b+"&styles="+e+"&scaler="+f+(6==w.S.ba?"&color_dep=32&colors=50":"")+"&udt=20141103").replace(/-(\d+)/gi,"M$1")}; var La=new Pc("\u5730\u56fe",Tc,{tips:"\u663e\u793a\u666e\u901a\u5730\u56fe",maxZoom:19}),Uc=new Cc;Uc.wM=[z.url.proto+z.url.domain.TIlE_PERSPECT_URLS[0]+"/resource/mappic/",z.url.proto+z.url.domain.TIlE_PERSPECT_URLS[1]+"/resource/mappic/",z.url.proto+z.url.domain.TIlE_PERSPECT_URLS[2]+"/resource/mappic/",z.url.proto+z.url.domain.TIlE_PERSPECT_URLS[3]+"/resource/mappic/"]; Uc.getTilesUrl=function(a,b){var c=a.x,d=a.y,e=256*Math.pow(2,20-b),d=Math.round((9998336-e*d)/e)-1;return url=this.wM[Math.abs(c+d)%this.wM.length]+this.map.Ob+"/"+this.map.Ev+"/3/lv"+(21-b)+"/"+c+","+d+".jpg"};var Oa=new Pc("\u4e09\u7ef4",Uc,{tips:"\u663e\u793a\u4e09\u7ef4\u5730\u56fe",minZoom:15,maxZoom:20,textColor:"white",projection:new gb});Oa.lc=function(a){return Math.pow(2,20-a)};Oa.Sj=function(a){if(!a)return"";var b=E.dB,c;for(c in b)if(-1<a.search(c))return b[c].fx;return""}; Oa.FJ=function(a){return{bj:2,gz:1,sz:14,sh:4}[a]};var Vc=new Cc({zv:o});Vc.getTilesUrl=function(a,b){var c=a.x,d=a.y;return(Qc[Math.abs(c+d)%Qc.length]+"u=x="+c+";y="+d+";z="+b+";v=009;type=sate&fm=46&udt=20141015").replace(/-(\d+)/gi,"M$1")};var Xa=new Pc("\u536b\u661f",Vc,{tips:"\u663e\u793a\u536b\u661f\u5f71\u50cf",minZoom:1,maxZoom:19,textColor:"white"}),Wc=new Cc({transparentPng:o}); Wc.getTilesUrl=function(a,b){var c=a.x,d=a.y;return(Rc[Math.abs(c+d)%Rc.length]+"?qt=tile&x="+(c+"").replace(/-/gi,"M")+"&y="+(d+"").replace(/-/gi,"M")+"&z="+b+"&styles=sl"+(6==w.S.ba?"&color_dep=32&colors=50":"")+"&udt=20141015").replace(/-(\d+)/gi,"M$1")};var Qa=new Pc("\u6df7\u5408",[Vc,Wc],{tips:"\u663e\u793a\u5e26\u6709\u8857\u9053\u7684\u536b\u661f\u5f71\u50cf",labelText:"\u8def\u7f51",minZoom:1,maxZoom:19,textColor:"white"});var Xc=1,S={};window.WY=S;function T(a,b){w.lang.ra.call(this);this.cd={};this.ym(a);b=b||{};b.aa=b.renderOptions||{};this.k={aa:{Ca:b.aa.panel||p,map:b.aa.map||p,Eg:b.aa.autoViewport||o,Js:b.aa.selectFirstResult,fs:b.aa.highlightMode,Pb:b.aa.enableDragging||q},Xw:b.onSearchComplete||s(),tL:b.onMarkersSet||s(),sL:b.onInfoHtmlSet||s(),vL:b.onResultsHtmlSet||s(),rL:b.onGetBusListComplete||s(),qL:b.onGetBusLineComplete||s(),oL:b.onBusListHtmlSet||s(),nL:b.onBusLineHtmlSet||s(),CD:b.onPolylinesSet||s(),Ko:b.reqFrom||""};this.k.aa.Eg= "undefined"!=typeof b&&"undefined"!=typeof b.renderOptions&&"undefined"!=typeof b.renderOptions.autoViewport?b.renderOptions.autoViewport:o;this.k.aa.Ca=w.pc(this.k.aa.Ca)}w.ia(T,w.lang.ra); w.extend(T.prototype,{getResults:function(){return this.rc?this.mi:this.$},enableAutoViewport:function(){this.k.aa.Eg=o},disableAutoViewport:function(){this.k.aa.Eg=q},ym:function(a){a&&(this.cd.src=a)},hE:function(a){this.k.Xw=a||s()},setMarkersSetCallback:function(a){this.k.tL=a||s()},setPolylinesSetCallback:function(a){this.k.CD=a||s()},setInfoHtmlSetCallback:function(a){this.k.sL=a||s()},setResultsHtmlSetCallback:function(a){this.k.vL=a||s()},Rl:u("ed")});var Yc={dF:z.tc,bb:function(a,b,c,d,e){var f=(1E5*Math.random()).toFixed(0);z._rd["_cbk"+f]=function(b){c=c||{};a&&a(b,c);delete z._rd["_cbk"+f]};d=d||"";b=c&&c.PM?Fb(b,encodeURI):Fb(b,encodeURIComponent);this.dF=c&&c.Lr?c.PL?c.PL:z.Ao:z.tc;d=this.dF+d+"?"+b+"&ie=utf-8&oue=1&fromproduct=jsapi";e||(d+="&res=api");Qb(d+("&callback=BMap._rd._cbk"+f))}};window.cZ=Yc;z._rd={};var N={};window.bZ=N;N.ML=function(a){return a.replace(/<\/?b>/g,"")};N.HW=function(a){return a.replace(/([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*),([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*)(,)/g,"$1,$2;")};N.IW=function(a,b){return a.replace(RegExp("(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);)(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);){"+b+"}","ig"),"$1")};var Zc=2,$c=3,ad=0,bd="bt",cd="nav",dd="walk",ed="bl",fd="bsl",gd=14,hd=15,id=18,jd=20,kd=31;z.I=window.Instance=w.lang.Jd;function ld(a,b,c){w.lang.ra.call(this);if(a){this.Ha="object"==typeof a?a:w.pc(a);this.page=1;this.ld=100;this.tI="pg";this.Ef=4;this.yI=b;this.update=o;a={page:1,Fe:100,ld:100,Ef:4,tI:"pg",update:o};c||(c=a);for(var d in c)"undefined"!=typeof c[d]&&(this[d]=c[d]);this.ma()}} w.extend(ld.prototype,{ma:function(){this.fa()},fa:function(){this.kT();this.Ha.innerHTML=this.ET()},kT:function(){isNaN(parseInt(this.page))&&(this.page=1);isNaN(parseInt(this.ld))&&(this.ld=1);1>this.page&&(this.page=1);1>this.ld&&(this.ld=1);this.page>this.ld&&(this.page=this.ld);this.page=parseInt(this.page);this.ld=parseInt(this.ld)},Q_:function(){location.search.match(RegExp("[?&]?"+this.tI+"=([^&]*)[&$]?","gi"));this.page=RegExp.$1},ET:function(){var a=[],b=this.page-1,c=this.page+1;a.push('<p style="margin:0;padding:0;white-space:nowrap">'); if(!(1>b)){if(this.page>=this.Ef){var d;a.push('<span style="margin-right:3px"><a style="color:#7777cc" href="javascript:void(0)" onclick="{temp1}">\u9996\u9875</a></span>'.replace("{temp1}","BMap.I('"+this.Q+"').toPage(1);"))}a.push('<span style="margin-right:3px"><a style="color:#7777cc" href="javascript:void(0)" onclick="{temp2}">\u4e0a\u4e00\u9875</a></span>'.replace("{temp2}","BMap.I('"+this.Q+"').toPage("+b+");"))}if(this.page<this.Ef)d=0==this.page%this.Ef?this.page-this.Ef-1:this.page-this.page% this.Ef+1,b=d+this.Ef-1;else{d=Math.floor(this.Ef/2);var e=this.Ef%2-1,b=this.ld>this.page+d?this.page+d:this.ld;d=this.page-d-e}this.page>this.ld-this.Ef&&this.page>=this.Ef&&(d=this.ld-this.Ef+1,b=this.ld);for(e=d;e<=b;e++)0<e&&(e==this.page?a.push('<span style="margin-right:3px">'+e+"</span>"):1<=e&&e<=this.ld&&(d='<span><a style="color:#7777cc;margin-right:3px" href="javascript:void(0)" onclick="{temp3}">['+e+"]</a></span>",a.push(d.replace("{temp3}","BMap.I('"+this.Q+"').toPage("+e+");")))); c>this.ld||a.push('<span><a style="color:#7777cc" href="javascript:void(0)" onclick="{temp4}">\u4e0b\u4e00\u9875</a></span>'.replace("{temp4}","BMap.I('"+this.Q+"').toPage("+c+");"));a.push("</p>");return a.join("")},toPage:function(a){a=a?a:1;"function"==typeof this.yI&&(this.yI(a),this.page=a);this.update&&this.ma()}});function bb(a,b){T.call(this,a,b);b=b||{};b.renderOptions=b.renderOptions||{};this.Wo(b.pageCapacity);"undefined"!=typeof b.renderOptions.selectFirstResult&&!b.renderOptions.selectFirstResult?this.IB():this.bC();this.ka=[];this.af=[];this.La=-1;this.Na=[];var c=this;I.load("local",function(){c.zy()},o)}w.ia(bb,T,"LocalSearch");bb.lp=10;bb.$Y=1;bb.Nm=100;bb.TE=2E3;bb.aF=1E5; w.extend(bb.prototype,{search:function(a,b){this.Na.push({method:"search",arguments:[a,b]})},vm:function(a,b,c){this.Na.push({method:"searchInBounds",arguments:[a,b,c]})},Ro:function(a,b,c,d){this.Na.push({method:"searchNearby",arguments:[a,b,c,d]})},ye:function(){delete this.ua;delete this.ed;delete this.$;delete this.T;this.La=-1;this.cb();this.k.aa.Ca&&(this.k.aa.Ca.innerHTML="")},Vl:s(),bC:function(){this.k.aa.Js=o},IB:function(){this.k.aa.Js=q},Wo:function(a){this.k.fk="number"==typeof a&&!isNaN(a)? 1>a?bb.lp:a>bb.Nm?bb.lp:a:bb.lp},Te:function(){return this.k.fk},toString:da("LocalSearch")});var md=bb.prototype;U(md,{clearResults:md.ye,setPageCapacity:md.Wo,getPageCapacity:md.Te,gotoPage:md.Vl,searchNearby:md.Ro,searchInBounds:md.vm,search:md.search,enableFirstResultSelection:md.bC,disableFirstResultSelection:md.IB});function nd(a,b){T.call(this,a,b)}w.ia(nd,T,"BaseRoute");w.extend(nd.prototype,{ye:s()});function od(a,b){T.call(this,a,b);b=b||{};this.Rs(b.policy);this.Wo(b.pageCapacity);this.$c=bd;this.Ht=gd;this.It=Xc;this.ka=[];this.La=-1;this.k.Pc=b.enableTraffic||q;this.Na=[];var c=this;I.load("route",function(){c.he()})}od.Nm=100;od.sN=[0,1,0,0,0,0,0,0,2,0,0,0,1,1,1];w.ia(od,nd,"TransitRoute"); w.extend(od.prototype,{Rs:function(a){this.k.Lc=0<=a&&4>=a?a:0},zz:function(a,b){this.Na.push({method:"_internalSearch",arguments:[a,b]})},search:function(a,b){this.Na.push({method:"search",arguments:[a,b]})},Wo:function(a){if("string"==typeof a&&(a=parseInt(a),isNaN(a))){this.k.fk=od.Nm;return}this.k.fk="number"!=typeof a?od.Nm:1<=a&&a<=od.Nm?Math.round(a):od.Nm},toString:da("TransitRoute"),bS:function(a){return a.replace(/\(.*\)/,"")}});var pd=od.prototype;U(pd,{_internalSearch:pd.zz});function qd(a,b){T.call(this,a,b);this.ka=[];this.La=-1;this.Na=[];var c=this,d=this.k.aa;1!=d.fs&&2!=d.fs&&(d.fs=1);this.Ty=this.k.aa.Pb?o:q;I.load("route",function(){c.he()});this.eD&&this.eD()}qd.FN=" \u73af\u5c9b \u65e0\u5c5e\u6027\u9053\u8def \u4e3b\u8def \u9ad8\u901f\u8fde\u63a5\u8def \u4ea4\u53c9\u70b9\u5185\u8def\u6bb5 \u8fde\u63a5\u9053\u8def \u505c\u8f66\u573a\u5185\u90e8\u9053\u8def \u670d\u52a1\u533a\u5185\u90e8\u9053\u8def \u6865 \u6b65\u884c\u8857 \u8f85\u8def \u531d\u9053 \u5168\u5c01\u95ed\u9053\u8def \u672a\u5b9a\u4e49\u4ea4\u901a\u533a\u57df POI\u8fde\u63a5\u8def \u96a7\u9053 \u6b65\u884c\u9053 \u516c\u4ea4\u4e13\u7528\u9053 \u63d0\u524d\u53f3\u8f6c\u9053".split(" "); w.ia(qd,nd,"DWRoute");w.extend(qd.prototype,{search:function(a,b,c){this.Na.push({method:"search",arguments:[a,b,c]})}});function rd(a,b){qd.call(this,a,b);b=b||{};this.k.Pc=b.enableTraffic||q;this.Rs(b.policy);this.$c=cd;this.Ht=jd;this.It=$c}w.ia(rd,qd,"DrivingRoute");rd.prototype.Rs=function(a){this.k.Lc=0<=a&&2>=a?a:0};function sd(a,b){qd.call(this,a,b);this.$c=dd;this.Ht=kd;this.It=Zc;this.Ty=q}w.ia(sd,qd,"WalkingRoute");function td(a,b){w.lang.ra.call(this);this.Df=[];this.om=[];this.k=b;this.Qb=a;this.map=this.k.aa.map||p;this.ox=this.k.ox;this.hb=p;this.Ki=0;this.Dx="";this.Hd=1;this.aw="";this.Lo=[0,0,0,0,0,0,0];this.tD=[];this.qr=[1,1,1,1,1,1,1];this.EM=[1,1,1,1,1,1,1];this.Hs=[0,0,0,0,0,0,0];this.Mo=[0,0,0,0,0,0,0];this.Aa=[{o:"",uf:0,Gm:0,x:0,y:0,hc:-1},{o:"",uf:0,Gm:0,x:0,y:0,hc:-1},{o:"",uf:0,Gm:0,x:0,y:0,hc:-1},{o:"",uf:0,Gm:0,x:0,y:0,hc:-1},{o:"",uf:0,Gm:0,x:0,y:0,hc:-1},{o:"",uf:0,Gm:0,x:0,y:0,hc:-1}, {o:"",uf:0,Gm:0,x:0,y:0,hc:-1}];this.Ih=-1;this.it=[];this.jt=[];I.load("route",s())}w.lang.ia(td,w.lang.ra,"RouteAddr");function ud(a){this.k={};w.extend(this.k,a);this.Na=[];var b=this;I.load("othersearch",function(){b.he()})}w.ia(ud,w.lang.ra,"Geocoder");w.extend(ud.prototype,{Ql:function(a,b,c){this.Na.push({method:"getPoint",arguments:[a,b,c]})},Ur:function(a,b,c){this.Na.push({method:"getLocation",arguments:[a,b,c]})},toString:da("Geocoder")});var vd=ud.prototype;U(vd,{getPoint:vd.Ql,getLocation:vd.Ur});function Geolocation(a){a=a||{};this.D={timeout:a.timeout||1E4,maximumAge:a.maximumAge||6E5};this.Ud=[];var b=this;I.load("othersearch",function(){for(var a=0,d;d=b.Ud[a];a++)b[d.method].apply(b,d.arguments)})}w.extend(Geolocation.prototype,{getCurrentPosition:function(a,b){this.Ud.push({method:"getCurrentPosition",arguments:arguments})},getStatus:da(2)});function wd(a){a=a||{};a.aa=a.renderOptions||{};this.k={aa:{map:a.aa.map||p}};this.Na=[];var b=this;I.load("othersearch",function(){b.he()})}w.ia(wd,w.lang.ra,"LocalCity");w.extend(wd.prototype,{get:function(a){this.Na.push({method:"get",arguments:[a]})},toString:da("LocalCity")});function xd(){this.Na=[];var a=this;I.load("othersearch",function(){a.he()})}w.ia(xd,w.lang.ra,"Boundary");w.extend(xd.prototype,{get:function(a,b){this.Na.push({method:"get",arguments:[a,b]})},toString:da("Boundary")});function yd(a,b){T.call(this,a,b);this.CN=ed;this.EN=hd;this.BN=fd;this.DN=id;this.Na=[];var c=this;I.load("buslinesearch",function(){c.he()})}yd.uu=E.ea+"iw_plus.gif";yd.tQ=E.ea+"iw_minus.gif";yd.lS=E.ea+"stop_icon.png";w.ia(yd,T); w.extend(yd.prototype,{getBusList:function(a){this.Na.push({method:"getBusList",arguments:[a]})},getBusLine:function(a){this.Na.push({method:"getBusLine",arguments:[a]})},setGetBusListCompleteCallback:function(a){this.k.rL=a||s()},setGetBusLineCompleteCallback:function(a){this.k.qL=a||s()},setBusListHtmlSetCallback:function(a){this.k.oL=a||s()},setBusLineHtmlSetCallback:function(a){this.k.nL=a||s()},setPolylinesSetCallback:function(a){this.k.CD=a||s()}});function zd(a){T.call(this,a);a=a||{};this.kc={input:a.input||p,UA:a.baseDom||p,types:a.types||[],Xw:a.onSearchComplete||s()};this.cd.src=a.location||"\u5168\u56fd";this.Fi="";this.Vf=p;this.BG="";this.ti();Pa(Ia);var b=this;I.load("autocomplete",function(){b.he()})}w.ia(zd,T,"Autocomplete");w.extend(zd.prototype,{ti:s(),show:s(),J:s(),iE:function(a){this.kc.types=a},ym:function(a){this.cd.src=a},search:ba("Fi"),sx:ba("BG")});var Sa;function Na(a,b){this.A="string"==typeof a?w.N(a):a;this.k={enableScrollWheelZoom:o,panoramaRenderer:"flash",swfSrc:z.ag("main_domain_nocdn","res/swf/")+"APILoader.swf",visible:o,linksControl:o,navigationControl:o,closeControl:o,indoorSceneSwitchControl:o,albumsControl:q,albumsControlOptions:{},copyrightControlOptions:{}};var b=b||{},c;for(c in b)this.k[c]=b[c];this.xa={heading:0,pitch:0};this.kn=[];this.wb=this.Oa=p;this.Lq=this.wj();this.ka=[];this.xc=1;this.mf=this.QQ=this.Bk="";this.qe={};this.rf= p;this.xg=[];this.Bq=[];this.Fq=q;var d=this;"flashRender"===this.wj()?I.load("panoramaflash",function(){d.ti()},o):I.load("panorama",function(){d.ob()},o);this.uR(this.A);"api"==b.yf?Pa(Ea):Pa(Fa);this.addEventListener("id_changed",function(){Pa(Da,{from:b.yf})})}var Ad=4,Bd=1;w.lang.ia(Na,w.lang.ra,"Panorama"); w.extend(Na.prototype,{uR:function(a){var b,c;b=a.style;c=Ua(a).position;"absolute"!=c&&"relative"!=c&&(b.position="relative",b.zIndex=0);if("absolute"===c||"relative"===c)if(a=Ua(a).zIndex,!a||"auto"===a)b.zIndex=0},QU:u("kn"),Eb:u("Oa"),rV:u("bv"),hM:u("bv"),V:u("wb"),sa:u("xa"),U:u("xc"),Kg:u("Bk"),S_:function(){return this.zZ||[]},O_:u("QQ"),$r:u("mf"),ux:function(a){a!==this.mf&&(this.mf=a,this.dispatchEvent(new L("onscene_type_changed")))},mc:function(a,b,c){"object"===typeof b&&(c=b,b=j);a!= this.Oa&&(this.Mk=this.Oa,this.Nk=this.wb,this.Oa=a,this.mf=b||"street",this.wb=p,c&&c.pov&&this.nd(c.pov))},ha:function(a){a.Xa(this.wb)||(this.Mk=this.Oa,this.Nk=this.wb,this.wb=a,this.Oa=p)},nd:function(a){a&&(this.xa=a,a=this.xa.pitch,"cvsRender"==this.wj()||Cd()?(90<a&&(a=90),-90>a&&(a=-90)):"cssRender"==this.wj()&&(45<a&&(a=45),-45>a&&(a=-45)),this.Fq=o,this.xa.pitch=a)},zc:function(a){a!=this.xc&&(a>Ad&&(a=Ad),a<Bd&&(a=Bd),a!=this.xc&&(this.xc=a))},tA:function(){if(this.B)for(var a=this.B.MC(), b=0;b<a.length;b++)(a[b]instanceof R||a[b]instanceof pc)&&a[b].point&&this.ka.push(a[b])},eE:ba("B"),Qs:function(a){this.rf=a||"none"},Vo:function(a){for(var b in a){if("object"==typeof a[b])for(var c in a[b])this.k[b][c]=a[b][c];else this.k[b]=a[b];switch(b){case "linksControl":this.dispatchEvent(new L("onlinks_visible_changed"));break;case "navigationControl":this.dispatchEvent(new L("onnavigation_visible_changed"));break;case "indoorSceneSwitchControl":this.dispatchEvent(new L("onindoor_default_switch_mode_changed")); break;case "albumsControl":this.dispatchEvent(new L("onalbums_visible_changed"));break;case "albumsControlOptions":this.dispatchEvent(new L("onalbums_options_changed"));break;case "copyrightControlOptions":this.dispatchEvent(new L("oncopyright_options_changed"))}}},Zj:function(){this.Uk.style.visibility="hidden"},yx:function(){this.Uk.style.visibility="visible"},iU:function(){this.k.enableScrollWheelZoom=o},UT:function(){this.k.enableScrollWheelZoom=q},show:function(){this.k.visible=o},J:function(){this.k.visible= q},wj:function(){return Ta()&&!G()&&"javascript"!=this.k.panoramaRenderer?"flashRender":!G()&&Mb()?"cvsRender":"cssRender"},wa:function(a){this.qe[a.Rc]=a},Fb:function(a){delete this.qe[a]},$J:function(){return this.k.visible},Lh:function(){return new K(this.A.clientWidth,this.A.clientHeight)},Ea:u("A"),CJ:function(){var a=z.ag("baidumap","?"),b=this.Eb();if(b){var b={panotype:this.$r(),heading:this.sa().heading,pitch:this.sa().pitch,pid:b,panoid:b,from:"api"},c;for(c in b)a+=c+"="+b[c]+"&"}return a.slice(0, -1)},zw:function(){this.Vo({copyrightControlOptions:{logoVisible:q}})},lE:function(){this.Vo({copyrightControlOptions:{logoVisible:o}})},OA:function(a){function b(a,b){return function(){a.Bq.push({aL:b,$K:arguments})}}for(var c=a.getPanoMethodList(),d="",e=0,f=c.length;e<f;e++)d=c[e],this[d]=b(this,d);this.xg.push(a)},RD:function(a){for(var b=this.xg.length;b--;)this.xg[b]===a&&this.xg.splice(b,1)}});var Dd=Na.prototype; U(Dd,{setId:Dd.mc,setPosition:Dd.ha,setPov:Dd.nd,setZoom:Dd.zc,setOptions:Dd.Vo,getId:Dd.Eb,getPosition:Dd.V,getPov:Dd.sa,getZoom:Dd.U,getLinks:Dd.QU,getBaiduMapUrl:Dd.CJ,hideMapLogo:Dd.zw,showMapLogo:Dd.lE,enableDoubleClickZoom:Dd.r_,disableDoubleClickZoom:Dd.g_,enableScrollWheelZoom:Dd.iU,disableScrollWheelZoom:Dd.UT,show:Dd.show,hide:Dd.J,addPlugin:Dd.OA,removePlugin:Dd.RD,getVisible:Dd.$J,addOverlay:Dd.wa,removeOverlay:Dd.Fb,getSceneType:Dd.$r,setPanoramaPOIType:Dd.Qs}); U(window,{BMAP_PANORAMA_POI_HOTEL:"hotel",BMAP_PANORAMA_POI_CATERING:"catering",BMAP_PANORAMA_POI_MOVIE:"movie",BMAP_PANORAMA_POI_TRANSIT:"transit",BMAP_PANORAMA_POI_INDOOR_SCENE:"indoor_scene",BMAP_PANORAMA_POI_NONE:"none",BMAP_PANORAMA_INDOOR_SCENE:"inter",BMAP_PANORAMA_STREET_SCENE:"street"});function Ed(){w.lang.ra.call(this);this.Rc="PanoramaOverlay_"+this.Q;this.G=p;this.Da=o}w.lang.ia(Ed,w.lang.ra,"PanoramaOverlayBase");w.extend(Ed.prototype,{P_:u("Rc"),fa:function(){aa("initialize\u65b9\u6cd5\u672a\u5b9e\u73b0")},remove:function(){aa("remove\u65b9\u6cd5\u672a\u5b9e\u73b0")},qf:function(){aa("_setOverlayProperty\u65b9\u6cd5\u672a\u5b9e\u73b0")}});function Fd(a,b){Ed.call(this);var c={position:p,altitude:2,displayDistance:o},b=b||{},d;for(d in b)c[d]=b[d];this.wb=c.position;this.qj=a;this.Ap=c.altitude;this.cP=c.displayDistance}w.lang.ia(Fd,Ed,"PanoramaLabel"); w.extend(Fd.prototype,{ha:function(a){this.wb=a;this.qf("position",a)},V:u("wb"),Mc:function(a){this.qj=a;this.qf("content",a)},Tj:u("qj"),aE:function(a){this.Ap=a;this.qf("altitude",a)},ao:u("Ap"),sa:function(){var a=this.V(),b=p,c=p;this.G&&(c=this.G.V());if(a&&c)if(a.Xa(c))b=this.G.sa();else{b={};b.heading=Gd(a.lng-c.lng,a.lat-c.lat)||0;var a=b,c=this.ao(),d=this.dn();a.pitch=Math.round(180*(Math.atan(c/d)/Math.PI))||0}return b},dn:function(){var a=0,b,c;this.G&&(b=this.G.V(),(c=this.V())&&!c.Xa(b)&& (a=Q.eo(b,c)));return a},J:function(){aa("hide\u65b9\u6cd5\u672a\u5b9e\u73b0")},show:function(){aa("show\u65b9\u6cd5\u672a\u5b9e\u73b0")},qf:s()});var Hd=Fd.prototype;U(Hd,{setPosition:Hd.ha,getPosition:Hd.V,setContent:Hd.Mc,getContent:Hd.Tj,setAltitude:Hd.aE,getAltitude:Hd.ao,getPov:Hd.sa,show:Hd.show,hide:Hd.J});function Id(a,b){Ed.call(this);var c={icon:"",title:"",panoInfo:p,altitude:2},b=b||{},d;for(d in b)c[d]=b[d];this.wb=a;this.wG=c.icon;this.OH=c.title;this.Ap=c.altitude;this.gR=c.panoInfo;this.xa={heading:0,pitch:0}}w.lang.ia(Id,Ed,"PanoramaMarker"); w.extend(Id.prototype,{ha:function(a){this.wb=a;this.qf("position",a)},V:u("wb"),nc:function(a){this.OH=a;this.qf("title",a)},oo:u("OH"),Kb:function(a){this.wG=icon;this.qf("icon",a)},fo:u("wG"),aE:function(a){this.Ap=a;this.qf("altitude",a)},ao:u("Ap"),NC:u("gR"),sa:function(){var a=p;if(this.G){var a=this.G.V(),b=this.V(),a=Gd(b.lng-a.lng,b.lat-a.lat);isNaN(a)&&(a=0);a={heading:a,pitch:0}}else a=this.xa;return a},qf:s()});var Jd=Id.prototype; U(Jd,{setPosition:Jd.ha,getPosition:Jd.V,setTitle:Jd.nc,getTitle:Jd.oo,setAltitude:Jd.aE,getAltitude:Jd.ao,getPanoInfo:Jd.NC,getIcon:Jd.fo,setIcon:Jd.Kb,getPov:Jd.sa});function Gd(a,b){var c=0;if(0!==a&&0!==b){var c=180*(Math.atan(a/b)/Math.PI),d=0;0<a&&0>b&&(d=90);0>a&&0>b&&(d=180);0>a&&0<b&&(d=270);c=(c+90)%90+d}else 0===a?c=0>b?180:0:0===b&&(c=0<a?90:270);return Math.round(c)}function Cd(){if("boolean"===typeof Kd)return Kd;if(!window.WebGLRenderingContext||w.platform.bk&&-1==navigator.userAgent.indexOf("Android 5"))return Kd=q;var a=document.createElement("canvas"),b=p;try{b=a.getContext("webgl")}catch(c){Kd=q}return Kd=b===p?q:o}var Kd;function ac(a,b){this.G=a||p;var c=this;c.G&&c.P();I.load("pservice",function(){c.vO()});"api"==(b||{}).yf?Pa(Ga):Pa(Ha);this.ad={getPanoramaById:[],getPanoramaByLocation:[],getVisiblePOIs:[],getRecommendPanosById:[],getPanoramaVersions:[],checkPanoSupportByCityCode:[],getPanoramaByPOIId:[],getCopyrightProviders:[]}}z.nm(function(a){"flashRender"!==a.wj()&&new ac(a,{yf:"api"})}); w.extend(ac.prototype,{P:function(){function a(a){if(a){if(a.id!=b.bv){b.hM(a.id);b.R=a;b.Oa!=p&&(b.Nk=b._position);for(var c in a)if(a.hasOwnProperty(c))switch(b["_"+c]=a[c],c){case "position":b.wb=a[c];break;case "id":b.Oa=a[c];break;case "links":b.kn=a[c];break;case "zoom":b.xc=a[c]}if(b.Nk){var f=b.Nk,g=b._position;c=f.lat;var i=g.lat,k=Nb(i-c),f=Nb(g.lng-f.lng);c=Math.sin(k/2)*Math.sin(k/2)+Math.cos(Nb(c))*Math.cos(Nb(i))*Math.sin(f/2)*Math.sin(f/2);b.NF=6371E3*2*Math.atan2(Math.sqrt(c),Math.sqrt(1- c))}c=new L("ondataload");c.data=a;b.dispatchEvent(c);b.dispatchEvent(new L("onposition_changed"));b.dispatchEvent(new L("onlinks_changed"));b.dispatchEvent(new L("oncopyright_changed"),{copyright:a.copyright});a.xl&&b.k.closeControl?w.C.show(b.gu):w.C.J(b.gu)}}else b.Oa=b.Mk,b.wb=b.Nk,b.dispatchEvent(new L("onnoresult"))}var b=this.G,c=this;b.addEventListener("id_changed",function(){c.ko(b.Eb(),a)});b.addEventListener("iid_changed",function(){c.zh(ac.Om+"qt=idata&iid="+b.oz+"&fn=",function(b){if(b&& b.result&&0==b.result.error){var b=b.content[0].interinfo,e={};e.xl=b.BreakID;for(var f=b.Defaultfloor,g=p,i=0;i<b.Floors.length;i++)if(b.Floors[i].Floor==f){g=b.Floors[i];break}e.id=g.StartID||g.Points[0].PID;c.ko(e.id,a,e)}})});b.addEventListener("position_changed_inner",function(){c.Ui(b.V(),a)})},ko:function(a,b){this.ad.getPanoramaById.push(arguments)},Ui:function(a,b,c){this.ad.getPanoramaByLocation.push(arguments)},VC:function(a,b,c,d){this.ad.getVisiblePOIs.push(arguments)},uw:function(a, b){this.ad.getRecommendPanosById.push(arguments)},tw:function(a){this.ad.getPanoramaVersions.push(arguments)},bB:function(a,b){this.ad.checkPanoSupportByCityCode.push(arguments)},sw:function(a,b){this.ad.getPanoramaByPOIId.push(arguments)},GJ:function(a){this.ad.getCopyrightProviders.push(arguments)}});var Ld=ac.prototype;U(Ld,{getPanoramaById:Ld.ko,getPanoramaByLocation:Ld.Ui,getPanoramaByPOIId:Ld.sw});function $b(a){Cc.call(this);"api"==(a||{}).yf?Pa(Ba):Pa(Ca)}$b.hF=z.ag("pano","tile/");$b.prototype=new Cc;$b.prototype.getTilesUrl=function(a,b){var c=$b.hF[(a.x+a.y)%$b.hF.length]+"?udt=20150114&qt=tile&styles=pl&x="+a.x+"&y="+a.y+"&z="+b;w.S.ba&&6>=w.S.ba&&(c+="&color_dep=32");return c};$b.prototype.qs=da(o);Md.Ad=new Q;function Md(){}w.extend(Md,{VT:function(a,b,c){c=w.lang.Jd(c);b={data:b};"position_changed"==a&&(b.data=Md.Ad.Zh(new P(b.data.mercatorX,b.data.mercatorY)));c.dispatchEvent(new L("on"+a),b)}});var Nd=Md;U(Nd,{dispatchFlashEvent:Nd.VT});var Od={uN:50};Od.Jt=z.ag("pano")[0];Od.Ft={width:220,height:60}; w.extend(Od,{vo:function(a,b,c,d){if(!b||!c||!c.lngLat||!c.panoInstance)d();else{this.tn===j&&(this.tn=new ac(p,{yf:"api"}));var e=this;this.tn.bB(b,function(b){b?e.tn.Ui(c.lngLat,Od.uN,function(b){if(b&&b.id){var f=b.id,k=b.ig,b=b.jg,l=ac.Ad.Sg(c.lngLat),m=e.YP(l,{x:k,y:b}),k=e.PJ(f,m,0,Od.Ft.width,Od.Ft.height);a.content=e.ZP(a.content,k,c.titleTip,c.beforeDomId);a.addEventListener("open",function(){ja.F(w.pc("infoWndPano"),"click",function(){c.panoInstance.mc(f);c.panoInstance.show();c.panoInstance.nd({heading:m, pitch:0})})})}d()}):d()})}},ZP:function(a,b,c,d){var c=c||"",e;!d||!a.split(d)[0]?(d=a,a=""):(d=a.split(d)[0],e=d.lastIndexOf("<"),d=a.substring(0,e),a=a.substring(e));e=[];var f=Od.Ft.width,g=Od.Ft.height;e.push(d);e.push("<div id='infoWndPano' class='panoInfoBox' style='height:"+g+"px;width:"+f+"px; margin-top: -19px;'>");e.push("<img class='pano_thumnail_img' width='"+f+"' height='"+g+"' border='0' alt='"+c+"\u5916\u666f' title='"+c+"\u5916\u666f' src='"+b+"' onerror='Pano.PanoEntranceUtil.thumbnailNotFound(this, "+ f+", "+g+");' />");e.push("<div class='panoInfoBoxTitleBg' style='width:"+f+"px;'></div><a href='javascript:void(0)' class='panoInfoBoxTitleContent' >\u8fdb\u5165\u5168\u666f&gt;&gt;</a>");e.push("</div>");e.push(a);return e.join("")},YP:function(a,b){var c=90-180*Math.atan2(a.y-b.y,a.x-b.x)/Math.PI;0>c&&(c+=360);return c},PJ:function(a,b,c,d,e){var f={panoId:a,panoHeading:b||0,panoPitch:c||0,width:d,height:e};return(Od.Jt+"?qt=pr3d&fovy=75&quality=80&panoid={panoId}&heading={panoHeading}&pitch={panoPitch}&width={width}&height={height}").replace(/\{(.*?)\}/g, function(a,b){return f[b]})}});var Pd=document,Qd=Math,Rd=Pd.createElement("div").style,Sd;a:{for(var Td=["t","webkitT","MozT","msT","OT"],Ud,Wd=0,Xd=Td.length;Wd<Xd;Wd++)if(Ud=Td[Wd]+"ransform",Ud in Rd){Sd=Td[Wd].substr(0,Td[Wd].length-1);break a}Sd=q} var Yd=Sd?"-"+Sd.toLowerCase()+"-":"",$d=Zd("transform"),ae=Zd("transitionProperty"),be=Zd("transitionDuration"),ce=Zd("transformOrigin"),de=Zd("transitionTimingFunction"),ee=Zd("transitionDelay"),fe=/android/gi.test(navigator.appVersion),ge=/iphone|ipad/gi.test(navigator.appVersion),he=/hp-tablet/gi.test(navigator.appVersion),ie=Zd("perspective")in Rd,je="ontouchstart"in window&&!he,ke=Sd!==q,le=Zd("transition")in Rd,ne="onorientationchange"in window?"orientationchange":"resize",oe=je?"touchstart": "mousedown",pe=je?"touchmove":"mousemove",qe=je?"touchend":"mouseup",re=je?"touchcancel":"mouseup",se=Sd===q?q:{"":"transitionend",webkit:"webkitTransitionEnd",Moz:"transitionend",O:"otransitionend",ms:"MSTransitionEnd"}[Sd],te=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(a){return setTimeout(a,1)},ue=window.cancelRequestAnimationFrame||window.F1||window.webkitCancelRequestAnimationFrame|| window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||clearTimeout,ve=ie?" translateZ(0)":""; function we(a,b){var c=this,d;c.Im="object"==typeof a?a:Pd.getElementById(a);c.Im.style.overflow="hidden";c.zb=c.Im.children[0];c.options={so:o,fp:o,x:0,y:0,jr:o,bT:q,zD:o,SK:o,sk:o,di:q,lY:0,aB:q,YC:o,Yi:o,hj:o,mC:fe,Aw:ge,nU:ge&&ie,YD:"",zoom:q,tk:1,hp:4,XT:2,aN:"scroll",Zs:q,Bx:1,uL:p,mL:function(a){a.preventDefault()},xL:p,lL:p,wL:p,kL:p,Ww:p,yL:p,pL:p,Eo:p,zL:p,Do:p};for(d in b)c.options[d]=b[d];c.x=c.options.x;c.y=c.options.y;c.options.sk=ke&&c.options.sk;c.options.Yi=c.options.so&&c.options.Yi; c.options.hj=c.options.fp&&c.options.hj;c.options.zoom=c.options.sk&&c.options.zoom;c.options.di=le&&c.options.di;c.options.zoom&&fe&&(ve="");c.zb.style[ae]=c.options.sk?Yd+"transform":"top left";c.zb.style[be]="0";c.zb.style[ce]="0 0";c.options.di&&(c.zb.style[de]="cubic-bezier(0.33,0.66,0.66,1)");c.options.sk?c.zb.style[$d]="translate("+c.x+"px,"+c.y+"px)"+ve:c.zb.style.cssText+=";position:absolute;top:"+c.y+"px;left:"+c.x+"px";c.options.di&&(c.options.mC=o);c.refresh();c.P(ne,window);c.P(oe);!je&& "none"!=c.options.aN&&(c.P("DOMMouseScroll"),c.P("mousewheel"));c.options.aB&&(c.jT=setInterval(function(){c.tO()},500));this.options.YC&&(Event.prototype.stopImmediatePropagation||(document.body.removeEventListener=function(a,b,c){var d=Node.prototype.removeEventListener;a==="click"?d.call(document.body,a,b.fK||b,c):d.call(document.body,a,b,c)},document.body.addEventListener=function(a,b,c){var d=Node.prototype.addEventListener;a==="click"?d.call(document.body,a,b.fK||(b.fK=function(a){a.SW||b(a)}), c):d.call(document.body,a,b,c)}),c.P("click",document.body,o))} we.prototype={enabled:o,x:0,y:0,fj:[],scale:1,wB:0,xB:0,Ce:[],Ze:[],TA:p,Mx:0,handleEvent:function(a){switch(a.type){case oe:if(!je&&0!==a.button)break;this.Vu(a);break;case pe:this.SQ(a);break;case qe:case re:this.fu(a);break;case ne:this.mA();break;case "DOMMouseScroll":case "mousewheel":this.wS(a);break;case se:this.sS(a);break;case "click":this.DO(a)}},tO:function(){!this.Vg&&(!this.uk&&!(this.sl||this.qx==this.zb.offsetWidth*this.scale&&this.Qo==this.zb.offsetHeight*this.scale))&&this.refresh()}, Lu:function(a){var b;this[a+"Scrollbar"]?(this[a+"ScrollbarWrapper"]||(b=Pd.createElement("div"),this.options.YD?b.className=this.options.YD+a.toUpperCase():b.style.cssText="position:absolute;z-index:100;"+("h"==a?"height:7px;bottom:1px;left:2px;right:"+(this.hj?"7":"2")+"px":"width:7px;bottom:"+(this.Yi?"7":"2")+"px;top:2px;right:1px"),b.style.cssText+=";pointer-events:none;"+Yd+"transition-property:opacity;"+Yd+"transition-duration:"+(this.options.nU?"350ms":"0")+";overflow:hidden;opacity:"+(this.options.Aw? "0":"1"),this.Im.appendChild(b),this[a+"ScrollbarWrapper"]=b,b=Pd.createElement("div"),this.options.YD||(b.style.cssText="position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);"+Yd+"background-clip:padding-box;"+Yd+"box-sizing:border-box;"+("h"==a?"height:100%":"width:100%")+";"+Yd+"border-radius:3px;border-radius:3px"),b.style.cssText+=";pointer-events:none;"+Yd+"transition-property:"+Yd+"transform;"+Yd+"transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);"+ Yd+"transition-duration:0;"+Yd+"transform: translate(0,0)"+ve,this.options.di&&(b.style.cssText+=";"+Yd+"transition-timing-function:cubic-bezier(0.33,0.66,0.66,1)"),this[a+"ScrollbarWrapper"].appendChild(b),this[a+"ScrollbarIndicator"]=b),"h"==a?(this.bK=this.cK.clientWidth,this.zV=Qd.max(Qd.round(this.bK*this.bK/this.qx),8),this.yV.style.width=this.zV+"px"):(this.TM=this.UM.clientHeight,this.HY=Qd.max(Qd.round(this.TM*this.TM/this.Qo),8),this.GY.style.height=this.HY+"px"),this.nA(a,o)):this[a+"ScrollbarWrapper"]&& (ke&&(this[a+"ScrollbarIndicator"].style[$d]=""),this[a+"ScrollbarWrapper"].parentNode.removeChild(this[a+"ScrollbarWrapper"]),this[a+"ScrollbarWrapper"]=p,this[a+"ScrollbarIndicator"]=p)},mA:function(){var a=this;setTimeout(function(){a.refresh()},fe?200:0)},Eq:function(a,b){this.uk||(a=this.so?a:0,b=this.fp?b:0,this.options.sk?this.zb.style[$d]="translate("+a+"px,"+b+"px) scale("+this.scale+")"+ve:(a=Qd.round(a),b=Qd.round(b),this.zb.style.left=a+"px",this.zb.style.top=b+"px"),this.x=a,this.y=b, this.nA("h"),this.nA("v"))},nA:function(a,b){var c="h"==a?this.x:this.y;this[a+"Scrollbar"]&&(c*=this[a+"ScrollbarProp"],0>c?(this.options.mC||(c=this[a+"ScrollbarIndicatorSize"]+Qd.round(3*c),8>c&&(c=8),this[a+"ScrollbarIndicator"].style["h"==a?"width":"height"]=c+"px"),c=0):c>this[a+"ScrollbarMaxScroll"]&&(this.options.mC?c=this[a+"ScrollbarMaxScroll"]:(c=this[a+"ScrollbarIndicatorSize"]-Qd.round(3*(c-this[a+"ScrollbarMaxScroll"])),8>c&&(c=8),this[a+"ScrollbarIndicator"].style["h"==a?"width":"height"]= c+"px",c=this[a+"ScrollbarMaxScroll"]+(this[a+"ScrollbarIndicatorSize"]-c))),this[a+"ScrollbarWrapper"].style[ee]="0",this[a+"ScrollbarWrapper"].style.opacity=b&&this.options.Aw?"0":"1",this[a+"ScrollbarIndicator"].style[$d]="translate("+("h"==a?c+"px,0)":"0,"+c+"px)")+ve)},DO:function(a){if(a.wP===o)return this.LA=a.target,this.bw=Date.now(),o;if(this.LA&&this.bw){if(600<Date.now()-this.bw)return this.bw=this.LA=p,o}else{for(var b=a.target;b!=this.zb&&b!=document.body;)b=b.parentNode;if(b==document.body)return o}for(b= a.target;1!=b.nodeType;)b=b.parentNode;b=b.tagName.toLowerCase();if("select"!=b&&"input"!=b&&"textarea"!=b)return a.stopImmediatePropagation?a.stopImmediatePropagation():a.SW=o,a.stopPropagation(),a.preventDefault(),this.bw=this.LA=p,q},Vu:function(a){var b=je?a.touches[0]:a,c,d;if(this.enabled){this.options.mL&&this.options.mL.call(this,a);(this.options.di||this.options.zoom)&&this.PH(0);this.uk=this.sl=this.Vg=q;this.GB=this.FB=this.lv=this.kv=this.KB=this.JB=0;this.options.zoom&&(je&&1<a.touches.length)&& (d=Qd.abs(a.touches[0].pageX-a.touches[1].pageX),c=Qd.abs(a.touches[0].pageY-a.touches[1].pageY),this.nY=Qd.sqrt(d*d+c*c),this.Yw=Qd.abs(a.touches[0].pageX+a.touches[1].pageX-2*this.CE)/2-this.x,this.Zw=Qd.abs(a.touches[0].pageY+a.touches[1].pageY-2*this.DE)/2-this.y,this.options.Eo&&this.options.Eo.call(this,a));if(this.options.zD&&(this.options.sk?(c=getComputedStyle(this.zb,p)[$d].replace(/[^0-9\-.,]/g,"").split(","),d=+(c[12]||c[4]),c=+(c[13]||c[5])):(d=+getComputedStyle(this.zb,p).left.replace(/[^0-9-]/g, ""),c=+getComputedStyle(this.zb,p).top.replace(/[^0-9-]/g,"")),d!=this.x||c!=this.y))this.options.di?this.Cd(se):ue(this.TA),this.fj=[],this.Eq(d,c),this.options.Ww&&this.options.Ww.call(this);this.mv=this.x;this.nv=this.y;this.bt=this.x;this.ct=this.y;this.ig=b.pageX;this.jg=b.pageY;this.startTime=a.timeStamp||Date.now();this.options.xL&&this.options.xL.call(this,a);this.P(pe,window);this.P(qe,window);this.P(re,window)}},SQ:function(a){var b=je?a.touches[0]:a,c=b.pageX-this.ig,d=b.pageY-this.jg, e=this.x+c,f=this.y+d,g=a.timeStamp||Date.now();this.options.lL&&this.options.lL.call(this,a);if(this.options.zoom&&je&&1<a.touches.length)e=Qd.abs(a.touches[0].pageX-a.touches[1].pageX),f=Qd.abs(a.touches[0].pageY-a.touches[1].pageY),this.mY=Qd.sqrt(e*e+f*f),this.uk=o,b=1/this.nY*this.mY*this.scale,b<this.options.tk?b=0.5*this.options.tk*Math.pow(2,b/this.options.tk):b>this.options.hp&&(b=2*this.options.hp*Math.pow(0.5,this.options.hp/b)),this.yo=b/this.scale,e=this.Yw-this.Yw*this.yo+this.x,f=this.Zw- this.Zw*this.yo+this.y,this.zb.style[$d]="translate("+e+"px,"+f+"px) scale("+b+")"+ve,this.options.zL&&this.options.zL.call(this,a);else{this.ig=b.pageX;this.jg=b.pageY;if(0<e||e<this.Od)e=this.options.jr?this.x+c/2:0<=e||0<=this.Od?0:this.Od;if(f>this.We||f<this.Vc)f=this.options.jr?this.y+d/2:f>=this.We||0<=this.Vc?this.We:this.Vc;this.JB+=c;this.KB+=d;this.kv=Qd.abs(this.JB);this.lv=Qd.abs(this.KB);6>this.kv&&6>this.lv||(this.options.SK&&(this.kv>this.lv+5?(f=this.y,d=0):this.lv>this.kv+5&&(e= this.x,c=0)),this.Vg=o,this.Eq(e,f),this.FB=0<c?-1:0>c?1:0,this.GB=0<d?-1:0>d?1:0,300<g-this.startTime&&(this.startTime=g,this.bt=this.x,this.ct=this.y),this.options.wL&&this.options.wL.call(this,a))}},fu:function(a){if(!(je&&0!==a.touches.length)){var b=this,c=je?a.changedTouches[0]:a,d,e,f={oa:0,time:0},g={oa:0,time:0},i=(a.timeStamp||Date.now())-b.startTime;d=b.x;e=b.y;b.Cd(pe,window);b.Cd(qe,window);b.Cd(re,window);b.options.kL&&b.options.kL.call(b,a);if(b.uk)d=b.scale*b.yo,d=Math.max(b.options.tk, d),d=Math.min(b.options.hp,d),b.yo=d/b.scale,b.scale=d,b.x=b.Yw-b.Yw*b.yo+b.x,b.y=b.Zw-b.Zw*b.yo+b.y,b.zb.style[be]="200ms",b.zb.style[$d]="translate("+b.x+"px,"+b.y+"px) scale("+b.scale+")"+ve,b.uk=q,b.refresh(),b.options.Do&&b.options.Do.call(b,a);else{if(b.Vg){if(300>i&&b.options.zD){f=d?b.NG(d-b.bt,i,-b.x,b.qx-b.xt+b.x,b.options.jr?b.xt:0):f;g=e?b.NG(e-b.ct,i,-b.y,0>b.Vc?b.Qo-b.Jm+b.y-b.We:0,b.options.jr?b.Jm:0):g;d=b.x+f.oa;e=b.y+g.oa;if(0<b.x&&0<d||b.x<b.Od&&d<b.Od)f={oa:0,time:0};if(b.y>b.We&& e>b.We||b.y<b.Vc&&e<b.Vc)g={oa:0,time:0}}f.oa||g.oa?(c=Qd.max(Qd.max(f.time,g.time),10),b.options.Zs&&(f=d-b.mv,g=e-b.nv,Qd.abs(f)<b.options.Bx&&Qd.abs(g)<b.options.Bx?b.scrollTo(b.mv,b.nv,200):(f=b.GH(d,e),d=f.x,e=f.y,c=Qd.max(f.time,c))),b.scrollTo(Qd.round(d),Qd.round(e),c)):b.options.Zs?(f=d-b.mv,g=e-b.nv,Qd.abs(f)<b.options.Bx&&Qd.abs(g)<b.options.Bx?b.scrollTo(b.mv,b.nv,200):(f=b.GH(b.x,b.y),(f.x!=b.x||f.y!=b.y)&&b.scrollTo(f.x,f.y,f.time))):b.vn(200)}else{if(je)if(b.cJ&&b.options.zoom)clearTimeout(b.cJ), b.cJ=p,b.options.Eo&&b.options.Eo.call(b,a),b.zoom(b.ig,b.jg,1==b.scale?b.options.XT:1),b.options.Do&&setTimeout(function(){b.options.Do.call(b,a)},200);else if(this.options.YC){for(d=c.target;1!=d.nodeType;)d=d.parentNode;e=d.tagName.toLowerCase();"select"!=e&&"input"!=e&&"textarea"!=e?(e=Pd.createEvent("MouseEvents"),e.initMouseEvent("click",o,o,a.view,1,c.screenX,c.screenY,c.clientX,c.clientY,a.ctrlKey,a.altKey,a.shiftKey,a.metaKey,0,p),e.wP=o,d.dispatchEvent(e)):d.focus()}b.vn(400)}b.options.yL&& b.options.yL.call(b,a)}}},vn:function(a){var b=0<=this.x?0:this.x<this.Od?this.Od:this.x,c=this.y>=this.We||0<this.Vc?this.We:this.y<this.Vc?this.Vc:this.y;if(b==this.x&&c==this.y){if(this.Vg&&(this.Vg=q,this.options.Ww&&this.options.Ww.call(this)),this.Yi&&this.options.Aw&&("webkit"==Sd&&(this.cK.style[ee]="300ms"),this.cK.style.opacity="0"),this.hj&&this.options.Aw)"webkit"==Sd&&(this.UM.style[ee]="300ms"),this.UM.style.opacity="0"}else this.scrollTo(b,c,a||0)},wS:function(a){var b=this,c,d;if("wheelDeltaX"in a)c=a.wheelDeltaX/12,d=a.wheelDeltaY/12;else if("wheelDelta"in a)c=d=a.wheelDelta/12;else if("detail"in a)c=d=3*-a.detail;else return;if("zoom"==b.options.aN){if(d=b.scale*Math.pow(2,1/3*(d?d/Math.abs(d):0)),d<b.options.tk&&(d=b.options.tk),d>b.options.hp&&(d=b.options.hp),d!=b.scale)!b.Mx&&b.options.Eo&&b.options.Eo.call(b,a),b.Mx++,b.zoom(a.pageX,a.pageY,d,400),setTimeout(function(){b.Mx--;!b.Mx&&b.options.Do&&b.options.Do.call(b,a)},400)}else c=b.x+c,d=b.y+d,0<c?c=0:c<b.Od&&(c=b.Od),d>b.We?d=b.We: d<b.Vc&&(d=b.Vc),0>b.Vc&&b.scrollTo(c,d,0)},sS:function(a){a.target==this.zb&&(this.Cd(se),this.zA())},zA:function(){var a=this,b=a.x,c=a.y,d=Date.now(),e,f,g;a.sl||(a.fj.length?(e=a.fj.shift(),e.x==b&&e.y==c&&(e.time=0),a.sl=o,a.Vg=o,a.options.di)?(a.PH(e.time),a.Eq(e.x,e.y),a.sl=q,e.time?a.P(se):a.vn(0)):(g=function(){var i=Date.now(),k;if(i>=d+e.time){a.Eq(e.x,e.y);a.sl=q;a.options.xW&&a.options.xW.call(a);a.zA()}else{i=(i-d)/e.time-1;f=Qd.sqrt(1-i*i);i=(e.x-b)*f+b;k=(e.y-c)*f+c;a.Eq(i,k);if(a.sl)a.TA= te(g)}},g()):a.vn(400))},PH:function(a){a+="ms";this.zb.style[be]=a;this.Yi&&(this.yV.style[be]=a);this.hj&&(this.GY.style[be]=a)},NG:function(a,b,c,d,e){var b=Qd.abs(a)/b,f=b*b/0.0012;0<a&&f>c?(c+=e/(6/(6.0E-4*(f/b))),b=b*c/f,f=c):0>a&&f>d&&(d+=e/(6/(6.0E-4*(f/b))),b=b*d/f,f=d);return{oa:f*(0>a?-1:1),time:Qd.round(b/6.0E-4)}},Bj:function(a){for(var b=-a.offsetLeft,c=-a.offsetTop;a=a.offsetParent;)b-=a.offsetLeft,c-=a.offsetTop;a!=this.Im&&(b*=this.scale,c*=this.scale);return{left:b,top:c}},GH:function(a, b){var c,d,e;e=this.Ce.length-1;c=0;for(d=this.Ce.length;c<d;c++)if(a>=this.Ce[c]){e=c;break}e==this.wB&&(0<e&&0>this.FB)&&e--;a=this.Ce[e];d=(d=Qd.abs(a-this.Ce[this.wB]))?500*(Qd.abs(this.x-a)/d):0;this.wB=e;e=this.Ze.length-1;for(c=0;c<e;c++)if(b>=this.Ze[c]){e=c;break}e==this.xB&&(0<e&&0>this.GB)&&e--;b=this.Ze[e];c=(c=Qd.abs(b-this.Ze[this.xB]))?500*(Qd.abs(this.y-b)/c):0;this.xB=e;e=Qd.round(Qd.max(d,c))||200;return{x:a,y:b,time:e}},P:function(a,b,c){(b||this.zb).addEventListener(a,this,!!c)}, Cd:function(a,b,c){(b||this.zb).removeEventListener(a,this,!!c)},CB:ha(2),refresh:function(){var a,b,c,d=0;b=0;this.scale<this.options.tk&&(this.scale=this.options.tk);this.xt=this.Im.clientWidth||1;this.Jm=this.Im.clientHeight||1;this.We=-this.options.lY||0;this.qx=Qd.round(this.zb.offsetWidth*this.scale);this.Qo=Qd.round((this.zb.offsetHeight+this.We)*this.scale);this.Od=this.xt-this.qx;this.Vc=this.Jm-this.Qo+this.We;this.GB=this.FB=0;this.options.uL&&this.options.uL.call(this);this.so=this.options.so&& 0>this.Od;this.fp=this.options.fp&&(!this.options.bT&&!this.so||this.Qo>this.Jm);this.Yi=this.so&&this.options.Yi;this.hj=this.fp&&this.options.hj&&this.Qo>this.Jm;a=this.Bj(this.Im);this.CE=-a.left;this.DE=-a.top;if("string"==typeof this.options.Zs){this.Ce=[];this.Ze=[];c=this.zb.querySelectorAll(this.options.Zs);a=0;for(b=c.length;a<b;a++)d=this.Bj(c[a]),d.left+=this.CE,d.top+=this.DE,this.Ce[a]=d.left<this.Od?this.Od:d.left*this.scale,this.Ze[a]=d.top<this.Vc?this.Vc:d.top*this.scale}else if(this.options.Zs){for(this.Ce= [];d>=this.Od;)this.Ce[b]=d,d-=this.xt,b++;this.Od%this.xt&&(this.Ce[this.Ce.length]=this.Od-this.Ce[this.Ce.length-1]+this.Ce[this.Ce.length-1]);b=d=0;for(this.Ze=[];d>=this.Vc;)this.Ze[b]=d,d-=this.Jm,b++;this.Vc%this.Jm&&(this.Ze[this.Ze.length]=this.Vc-this.Ze[this.Ze.length-1]+this.Ze[this.Ze.length-1])}this.Lu("h");this.Lu("v");this.uk||(this.zb.style[be]="0",this.vn(400))},scrollTo:function(a,b,c,d){var e=a;this.stop();e.length||(e=[{x:a,y:b,time:c,TW:d}]);a=0;for(b=e.length;a<b;a++)e[a].TW&& (e[a].x=this.x-e[a].x,e[a].y=this.y-e[a].y),this.fj.push({x:e[a].x,y:e[a].y,time:e[a].time||0});this.zA()},disable:function(){this.stop();this.vn(0);this.enabled=q;this.Cd(pe,window);this.Cd(qe,window);this.Cd(re,window)},enable:function(){this.enabled=o},stop:function(){this.options.di?this.Cd(se):ue(this.TA);this.fj=[];this.sl=this.Vg=q},zoom:function(a,b,c,d){var e=c/this.scale;this.options.sk&&(this.uk=o,d=d===j?200:d,a=a-this.CE-this.x,b=b-this.DE-this.y,this.x=a-a*e+this.x,this.y=b-b*e+this.y, this.scale=c,this.refresh(),this.x=0<this.x?0:this.x<this.Od?this.Od:this.x,this.y=this.y>this.We?this.We:this.y<this.Vc?this.Vc:this.y,this.zb.style[be]=d+"ms",this.zb.style[$d]="translate("+this.x+"px,"+this.y+"px) scale("+c+")"+ve,this.uk=q)}};function Zd(a){if(""===Sd)return a;a=a.charAt(0).toUpperCase()+a.substr(1);return Sd+a}Rd=p;function xe(a){this.k={anchor:Vb,offset:new K(0,0),maxWidth:"100%",imageHeight:80};var a=a||{},b;for(b in a)this.k[b]=a[b];this.dl=new ac(p,{yf:"api"});this.Cj=[];this.G=p;this.qi={height:this.k.imageHeight,width:this.k.imageHeight*ye};this.ej=this.oA=this.xl=this.Ic=p} z.nm(function(a){var b=p;a.addEventListener("position_changed",function(){a.k.albumsControl===o&&(b?b.kx(a.Eb()):(b=new xe(a.k.albumsControlOptions),b.fa(a)))});a.addEventListener("albums_visible_changed",function(){a.k.albumsControl===o?(b?b.kx(a.Eb()):(b=new xe(a.k.albumsControlOptions),b.fa(a)),b.show()):b.J()});a.addEventListener("albums_options_changed",function(){b&&b.Vo(a.k.albumsControlOptions)})});var ye=1.8; w.extend(xe.prototype,{Vo:function(a){for(var b in a)this.k[b]=a[b];a=this.k.imageHeight+"px";this.fc(this.k.anchor);this.A.style.width=isNaN(Number(this.k.maxWidth))===o?this.k.maxWidth:this.k.maxWidth+"px";this.A.style.height=a;this.Fj.style.height=a;this.Ah.style.height=a;this.qi={height:this.k.imageHeight,width:this.k.imageHeight*ye};this.Ej.style.height=this.qi.height-6+"px";this.Ej.style.width=this.qi.width-6+"px";this.kx(this.G.Eb(),o)},fa:function(a){this.G=a;this.or();this.eO();this.MV(); this.kx(a.Eb())},or:function(){var a=this.k.imageHeight+"px";this.A=J("div");var b=this.A.style;b.position="absolute";b.zIndex="2000";b.width=isNaN(Number(this.k.maxWidth))===o?this.k.maxWidth:this.k.maxWidth+"px";b.padding="8px 0";b.background="white";b.visibility="hidden";b.height=a;this.Fj=J("div");b=this.Fj.style;b.position="absolute";b.overflow="hidden";b.width="100%";b.height=a;this.Ah=J("div");b=this.Ah.style;b.height=a;this.Fj.appendChild(this.Ah);this.A.appendChild(this.Fj);this.G.A.appendChild(this.A); this.Ej=J("div",{"class":"pano_photo_item_seleted"});this.Ej.style.height=this.qi.height-6+"px";this.Ej.style.width=this.qi.width-6+"px";this.fc(this.k.anchor)},hG:function(a){for(var b=this.Cj,c=b.length-1;0<=c;c--)if(b[c].panoId==a)return c;return-1},kx:function(a,b){if(b||!this.Cj[this.Ic]||!(this.Cj[this.Ic].panoId==a&&3!==this.Cj[this.Ic].recoType)){var c=this,d=this.hG(a);!b&&-1!==d&&this.Cj[d]&&3!==this.Cj[d].recoType?this.Uo(d):this.dV(function(a){c.Cj=a;c.Jq(a);0==a.length?c.J():c.show()})}}, Jq:function(a){this.Ah.innerHTML=this.OU(a);this.Ah.style.width=(this.qi.width+8)*a.length+8+"px";var a=this.A.offsetWidth,b=this.Ah.offsetWidth;this.ej.Qr&&(b+=this.ej.Qr());b<a?this.A.style.width=b+"px":(this.A.style.width=isNaN(Number(this.k.maxWidth))===o?this.k.maxWidth:this.k.maxWidth+"px",b<this.A.offsetWidth&&(this.A.style.width=b+"px"));this.ej.refresh();this.oA=this.Ah.children;this.Ah.appendChild(this.Ej);this.Ej.style.left="-100000px";a=this.hG(this.G.Eb(),this.DZ);-1!==a&&this.Uo(a)}, OU:function(a){for(var b,c,d,e,f=[],g=this.qi.height,i=this.qi.width,k=0;k<a.length;k++)b=a[k],recoType=b.recoType,c=b.panoId,d=b.name,e=b.heading,b=b.pitch,c=Od.PJ(c,e,b,198,108),f.push('<a href="javascript:void(0);" class="pano_photo_item" data-index="'+k+'"><img style="width:'+(i-2)+"px;height:"+(g-2)+'px;" data-index="'+k+'" name="'+d+'" src="'+c+'" alt="'+d+'"/><span class="pano_photo_decs" data-index="'+k+'" style="width:'+i+"px;font-size:"+Math.floor(g/6)+"px; line-height:"+Math.floor(g/6)+ 'px;"><em class="pano_poi_'+recoType+'"></em>'+d+"</span></a>");return f.join("")},dV:function(a){var b=this,c=this.G.Eb();this.dl.uw(c,function(d){b.G.Eb()===c&&a(d)})},fc:function(a){if(!Va(a)||isNaN(a)||a<Tb||3<a)a=this.defaultAnchor;var b=this.A,c=this.k.offset.width,d=this.k.offset.height;b.style.left=b.style.top=b.style.right=b.style.bottom="auto";switch(a){case Tb:b.style.top=d+"px";b.style.left=c+"px";break;case Ub:b.style.top=d+"px";b.style.right=c+"px";break;case Vb:b.style.bottom=d+"px"; b.style.left=c+"px";break;case 3:b.style.bottom=d+"px",b.style.right=c+"px"}},eO:function(){this.cO()},cO:function(){var a=this;w.F(this.A,"touchstart",function(a){a.stopPropagation()});w.F(this.Fj,"click",function(b){if((b=(b.srcElement||b.target).getAttribute("data-index"))&&b!=a.Ic)a.Uo(b),a.G.mc(a.Cj[b].panoId)});w.F(this.Ah,"mouseover",function(b){b=(b.srcElement||b.target).getAttribute("data-index");b!==p&&a.KI(b,o)});this.G.addEventListener("size_changed",function(){isNaN(Number(a.k.maxWidth))&& a.Vo({maxWidth:a.k.maxWidth})})},Uo:function(a){this.Ej.style.left=this.oA[a].offsetLeft+8+"px";this.Ej.setAttribute("data-index",this.oA[a].getAttribute("data-index"));this.Ic=a;this.KI(a)},KI:function(a,b){var c=this.qi.width+8,d=0;this.ej.Qr&&(d=this.ej.Qr()/2);var e=this.Fj.offsetWidth-2*d,f=this.Ah.offsetLeft||this.ej.x,f=f-d,g=-a*c;g>f&&this.ej.scrollTo(g+d);c=g-c;f-=e;c<f&&(!b||b&&8<g-f)&&this.ej.scrollTo(c+e+d)},MV:function(){this.ej=G()?new we(this.Fj,{jr:q,zD:o,Yi:q,hj:q,fp:q,SK:o,aB:o, YC:o}):new ze(this.Fj)},J:function(){this.A.style.visibility="hidden"},show:function(){this.A.style.visibility="visible"}});function ze(a){this.A=a;this.zg=a.children[0];this.Tq=p;this.xk=20;this.fa()} ze.prototype={fa:function(){this.zg.style.position="relative";this.refresh();this.or();this.vl()},refresh:function(){this.nn=this.A.offsetWidth-this.Qr();this.Mz=-(this.zg.offsetWidth-this.nn-this.xk);this.Bu=this.xk;this.zg.style.left=this.Bu+"px";this.zg.children[0]&&(this.Tq=this.zg.children[0].offsetWidth);this.th&&(this.th.children[0].style.marginTop=this.Mq.children[0].style.marginTop=this.th.offsetHeight/2-this.th.children[0].offsetHeight/2+"px")},Qr:function(){return 2*this.xk},or:function(){this.Mu= J("div");this.Mu.innerHTML='<a class="pano_photo_arrow_l" href="javascript:void(0)" title="\u4e0a\u4e00\u9875"><span class="pano_arrow_l"></span></a><a class="pano_photo_arrow_r" href="javascript:void(0)" title="\u4e0b\u4e00\u9875"><span class="pano_arrow_r"></span></a>';this.th=this.Mu.children[0];this.Mq=this.Mu.children[1];this.A.appendChild(this.Mu);this.th.children[0].style.marginTop=this.Mq.children[0].style.marginTop=this.th.offsetHeight/2-this.th.children[0].offsetHeight/2+"px"},vl:function(){var a= this;w.F(this.th,"click",function(){a.scrollTo(a.zg.offsetLeft+a.nn)});w.F(this.Mq,"click",function(){a.scrollTo(a.zg.offsetLeft-a.nn)})},tS:function(){w.C.Ub(this.th,"pano_arrow_disable");w.C.Ub(this.Mq,"pano_arrow_disable");var a=this.zg.offsetLeft;a>=this.Bu&&w.C.Wa(this.th,"pano_arrow_disable");a-this.nn<=this.Mz&&w.C.Wa(this.Mq,"pano_arrow_disable")},scrollTo:function(a){a=a<this.zg.offsetLeft?Math.ceil((a-this.xk-this.nn)/this.Tq)*this.Tq+this.nn+this.xk-8:Math.ceil((a-this.xk)/this.Tq)*this.Tq+ this.xk;a<this.Mz?a=this.Mz:a>this.Bu&&(a=this.Bu);var b=this.zg.offsetLeft,c=this;new tb({Uc:60,jc:ub.mJ,duration:300,ma:function(d){c.zg.style.left=b+(a-b)*d+"px"},finish:function(){c.tS()}})}};z.Map=Ka;z.Hotspot=hb;z.MapType=Pc;z.Point=H;z.Pixel=P;z.Size=K;z.Bounds=eb;z.TileLayer=Cc;z.Projection=fc;z.MercatorProjection=Q;z.PerspectiveProjection=gb;z.Copyright=function(a,b,c){this.id=a;this.Ta=b;this.content=c};z.Overlay=hc;z.Label=pc;z.GroundOverlay=qc;z.PointCollection=uc;z.Marker=R;z.Icon=lc;z.IconSequence=nc;z.Symbol=mc;z.Polyline=yc;z.Polygon=xc;z.InfoWindow=oc;z.Circle=zc;z.Control=Sb;z.NavigationControl=ib;z.GeolocationControl=Wb;z.OverviewMapControl=lb;z.CopyrightControl=Xb; z.ScaleControl=jb;z.MapTypeControl=mb;z.PanoramaControl=Zb;z.TrafficLayer=Mc;z.CustomLayer=ob;z.ContextMenu=bc;z.MenuItem=ec;z.LocalSearch=bb;z.TransitRoute=od;z.DrivingRoute=rd;z.WalkingRoute=sd;z.Autocomplete=zd;z.Geocoder=ud;z.LocalCity=wd;z.Geolocation=Geolocation;z.BusLineSearch=yd;z.Boundary=xd;z.VectorCloudLayer=Kc;z.VectorTrafficLayer=Lc;z.Panorama=Na;z.PanoramaLabel=Fd;z.PanoramaService=ac;z.PanoramaCoverageLayer=$b;z.PanoramaFlashInterface=Md;function U(a,b){for(var c in b)a[c]=b[c]}U(window,{BMap:z,_jsload2:function(a,b){ja.Ex.WV&&ja.Ex.set(a,b);I.iT(a,b)},BMAP_API_VERSION:"2.0"});var V=Ka.prototype; U(V,{getBounds:V.Id,getCenter:V.ya,getMapType:V.ja,getSize:V.Ib,setSize:V.od,getViewport:V.cs,getZoom:V.U,centerAndZoom:V.Vd,panTo:V.Xh,panBy:V.hg,setCenter:V.Ff,setCurrentCity:V.dE,setMapType:V.lg,setViewport:V.bh,setZoom:V.zc,highResolutionEnabled:V.Og,zoomTo:V.og,zoomIn:V.EE,zoomOut:V.FE,addHotspot:V.sv,removeHotspot:V.VW,clearHotspots:V.zl,checkResize:V.lT,addControl:V.qv,removeControl:V.LL,getContainer:V.Ea,addContextMenu:V.In,removeContextMenu:V.Jo,addOverlay:V.wa,removeOverlay:V.Fb,clearOverlays:V.HI, openInfoWindow:V.bc,closeInfoWindow:V.Hc,pointToOverlayPixel:V.De,overlayPixelToPoint:V.BL,getInfoWindow:V.Mg,getOverlays:V.MC,getPanes:function(){return{floatPane:this.Sd.nC,markerMouseTarget:this.Sd.wD,floatShadow:this.Sd.xJ,labelPane:this.Sd.qD,markerPane:this.Sd.WK,markerShadow:this.Sd.XK,mapPane:this.Sd.ts}},addTileLayer:V.Dg,removeTileLayer:V.$g,pixelToPoint:V.kb,pointToPixel:V.Rb,setFeatureStyle:V.To,selectBaseElement:V.a1,setMapStyle:V.Os,enable3DBuilding:V.Zn,disable3DBuilding:V.RT}); var Ae=Pc.prototype;U(Ae,{getTileLayer:Ae.pV,getMinZoom:Ae.ho,getMaxZoom:Ae.Ol,getProjection:Ae.mo,getTextColor:Ae.as,getTips:Ae.bs});U(window,{BMAP_NORMAL_MAP:La,BMAP_PERSPECTIVE_MAP:Oa,BMAP_SATELLITE_MAP:Xa,BMAP_HYBRID_MAP:Qa});var Be=Q.prototype;U(Be,{lngLatToPoint:Be.Sg,pointToLngLat:Be.Zh});var Ce=gb.prototype;U(Ce,{lngLatToPoint:Ce.Sg,pointToLngLat:Ce.Zh});var De=eb.prototype; U(De,{equals:De.Xa,containsPoint:De.mr,containsBounds:De.vT,intersects:De.is,extend:De.extend,getCenter:De.ya,isEmpty:De.cj,getSouthWest:De.Be,getNorthEast:De.zf,toSpan:De.uE});var Ee=hc.prototype;U(Ee,{isVisible:Ee.Rg,show:Ee.show,hide:Ee.J});hc.getZIndex=hc.Ul;var He=fb.prototype;U(He,{openInfoWindow:He.bc,closeInfoWindow:He.Hc,enableMassClear:He.Ri,disableMassClear:He.TT,show:He.show,hide:He.J,getMap:He.mw,addContextMenu:He.In,removeContextMenu:He.Jo});var Ie=R.prototype; U(Ie,{setIcon:Ie.Kb,getIcon:Ie.fo,setPosition:Ie.ha,getPosition:Ie.V,setOffset:Ie.ee,getOffset:Ie.Af,getLabel:Ie.HC,setLabel:Ie.xm,setTitle:Ie.nc,setTop:Ie.bi,enableDragging:Ie.Pb,disableDragging:Ie.HB,setZIndex:Ie.Ts,getMap:Ie.mw,setAnimation:Ie.wm,setShadow:Ie.vx,hide:Ie.J,setRotation:Ie.Xo,getRotation:Ie.TJ});U(window,{BMAP_ANIMATION_DROP:1,BMAP_ANIMATION_BOUNCE:2});var Je=pc.prototype; U(Je,{setStyle:Je.qd,setStyles:Je.ai,setContent:Je.Mc,setPosition:Je.ha,getPosition:Je.V,setOffset:Je.ee,getOffset:Je.Af,setTitle:Je.nc,setZIndex:Je.Ts,getMap:Je.mw,getContent:Je.Tj});var Ke=lc.prototype;U(Ke,{setImageUrl:Ke.CX,setSize:Ke.od,setAnchor:Ke.fc,setImageOffset:Ke.Ns,setImageSize:Ke.AX,setInfoWindowAnchor:Ke.EX,setPrintImageUrl:Ke.NX});var Le=oc.prototype; U(Le,{redraw:Le.Pd,setTitle:Le.nc,setContent:Le.Mc,getContent:Le.Tj,getPosition:Le.V,enableMaximize:Le.Gg,disableMaximize:Le.Uv,isOpen:Le.Ja,setMaxContent:Le.Ps,maximize:Le.Qw,enableAutoPan:Le.Ir});var Me=jc.prototype; U(Me,{getPath:Me.Zd,setPath:Me.fe,setPositionAt:Me.zm,getStrokeColor:Me.jV,setStrokeWeight:Me.$o,getStrokeWeight:Me.WJ,setStrokeOpacity:Me.Yo,getStrokeOpacity:Me.kV,setFillOpacity:Me.Ms,getFillOpacity:Me.KU,setStrokeStyle:Me.Zo,getStrokeStyle:Me.VJ,getFillColor:Me.JU,getBounds:Me.Id,enableEditing:Me.xf,disableEditing:Me.ST});var Ne=zc.prototype;U(Ne,{setCenter:Ne.Ff,getCenter:Ne.ya,getRadius:Ne.RJ,setRadius:Ne.$e});var Oe=xc.prototype;U(Oe,{getPath:Oe.Zd,setPath:Oe.fe,setPositionAt:Oe.zm}); var Pe=hb.prototype;U(Pe,{getPosition:Pe.V,setPosition:Pe.ha,getText:Pe.RC,setText:Pe.Ss});H.prototype.equals=H.prototype.Xa;P.prototype.equals=P.prototype.Xa;K.prototype.equals=K.prototype.Xa;U(window,{BMAP_ANCHOR_TOP_LEFT:Tb,BMAP_ANCHOR_TOP_RIGHT:Ub,BMAP_ANCHOR_BOTTOM_LEFT:Vb,BMAP_ANCHOR_BOTTOM_RIGHT:3});var Qe=Sb.prototype;U(Qe,{setAnchor:Qe.fc,getAnchor:Qe.tC,setOffset:Qe.ee,getOffset:Qe.Af,show:Qe.show,hide:Qe.J,isVisible:Qe.Rg,toString:Qe.toString});var Re=ib.prototype;U(Re,{getType:Re.qo,setType:Re.Am}); U(window,{BMAP_NAVIGATION_CONTROL_LARGE:0,BMAP_NAVIGATION_CONTROL_SMALL:1,BMAP_NAVIGATION_CONTROL_PAN:2,BMAP_NAVIGATION_CONTROL_ZOOM:3});var Se=lb.prototype;U(Se,{changeView:Se.Wd,setSize:Se.od,getSize:Se.Ib});var Te=jb.prototype;U(Te,{getUnit:Te.tV,setUnit:Te.jE});U(window,{BMAP_UNIT_METRIC:"metric",BMAP_UNIT_IMPERIAL:"us"});var Ue=Xb.prototype;U(Ue,{addCopyright:Ue.rv,removeCopyright:Ue.QD,getCopyright:Ue.Ml,getCopyrightCollection:Ue.AC}); U(window,{BMAP_MAPTYPE_CONTROL_HORIZONTAL:Yb,BMAP_MAPTYPE_CONTROL_DROPDOWN:1,BMAP_MAPTYPE_CONTROL_MAP:2});var Ve=Cc.prototype;U(Ve,{getMapType:Ve.ja,getCopyright:Ve.Ml,isTransparentPng:Ve.qs});var We=bc.prototype;U(We,{addItem:We.tv,addSeparator:We.PA,removeSeparator:We.SD});var Xe=ec.prototype;U(Xe,{setText:Xe.Ss});var Ye=T.prototype; U(Ye,{getStatus:Ye.Rl,setSearchCompleteCallback:Ye.hE,getPageCapacity:Ye.Te,setPageCapacity:Ye.Wo,setLocation:Ye.ym,disableFirstResultSelection:Ye.IB,enableFirstResultSelection:Ye.bC,gotoPage:Ye.Vl,searchNearby:Ye.Ro,searchInBounds:Ye.vm,search:Ye.search});U(window,{BMAP_STATUS_SUCCESS:0,BMAP_STATUS_CITY_LIST:1,BMAP_STATUS_UNKNOWN_LOCATION:2,BMAP_STATUS_UNKNOWN_ROUTE:3,BMAP_STATUS_INVALID_KEY:4,BMAP_STATUS_INVALID_REQUEST:5,BMAP_STATUS_PERMISSION_DENIED:6,BMAP_STATUS_SERVICE_UNAVAILABLE:7,BMAP_STATUS_TIMEOUT:8}); U(window,{BMAP_POI_TYPE_NORMAL:0,BMAP_POI_TYPE_BUSSTOP:1,BMAP_POI_TYPE_BUSLINE:2,BMAP_POI_TYPE_SUBSTOP:3,BMAP_POI_TYPE_SUBLINE:4});U(window,{BMAP_TRANSIT_POLICY_LEAST_TIME:0,BMAP_TRANSIT_POLICY_LEAST_TRANSFER:2,BMAP_TRANSIT_POLICY_LEAST_WALKING:3,BMAP_TRANSIT_POLICY_AVOID_SUBWAYS:4,BMAP_LINE_TYPE_BUS:0,BMAP_LINE_TYPE_SUBWAY:1,BMAP_LINE_TYPE_FERRY:2});var Ze=nd.prototype;U(Ze,{clearResults:Ze.ye});pd=od.prototype;U(pd,{setPolicy:pd.Rs,toString:pd.toString,setPageCapacity:pd.Wo}); U(window,{BMAP_DRIVING_POLICY_LEAST_TIME:0,BMAP_DRIVING_POLICY_LEAST_DISTANCE:1,BMAP_DRIVING_POLICY_AVOID_HIGHWAYS:2});U(window,{BMAP_HIGHLIGHT_STEP:1,BMAP_HIGHLIGHT_ROUTE:2});U(window,{BMAP_ROUTE_TYPE_DRIVING:$c,BMAP_ROUTE_TYPE_WALKING:Zc});U(window,{BMAP_ROUTE_STATUS_NORMAL:ad,BMAP_ROUTE_STATUS_EMPTY:1,BMAP_ROUTE_STATUS_ADDRESS:2});var $e=rd.prototype;U($e,{setPolicy:$e.Rs});var af=zd.prototype;U(af,{show:af.show,hide:af.J,setTypes:af.iE,setLocation:af.ym,search:af.search,setInputValue:af.sx}); U(ob.prototype,{});var bf=xd.prototype;U(bf,{get:bf.get});U($b.prototype,{});U(cb.prototype,{});U(window,{BMAP_POINT_DENSITY_HIGH:200,BMAP_POINT_DENSITY_MEDIUM:Oc,BMAP_POINT_DENSITY_LOW:50});U(window,{BMAP_POINT_SHAPE_STAR:1,BMAP_POINT_SHAPE_WATERDROP:2,BMAP_POINT_SHAPE_CIRCLE:rc,BMAP_POINT_SHAPE_SQUARE:4,BMAP_POINT_SHAPE_RHOMBUS:5});U(window,{BMAP_POINT_SIZE_TINY:1,BMAP_POINT_SIZE_SMALLER:2,BMAP_POINT_SIZE_SMALL:3,BMAP_POINT_SIZE_NORMAL:sc,BMAP_POINT_SIZE_BIG:5,BMAP_POINT_SIZE_BIGGER:6,BMAP_POINT_SIZE_HUGE:7}); U(window,{BMap_Symbol_SHAPE_CAMERA:11,BMap_Symbol_SHAPE_WARNING:12,BMap_Symbol_SHAPE_SMILE:13,BMap_Symbol_SHAPE_CLOCK:14,BMap_Symbol_SHAPE_POINT:9,BMap_Symbol_SHAPE_PLANE:10,BMap_Symbol_SHAPE_CIRCLE:1,BMap_Symbol_SHAPE_RECTANGLE:2,BMap_Symbol_SHAPE_RHOMBUS:3,BMap_Symbol_SHAPE_STAR:4,BMap_Symbol_SHAPE_BACKWARD_CLOSED_ARROW:5,BMap_Symbol_SHAPE_FORWARD_CLOSED_ARROW:6,BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW:7,BMap_Symbol_SHAPE_FORWARD_OPEN_ARROW:8});U(window,{BMAP_CONTEXT_MENU_ICON_ZOOMIN:cc,BMAP_CONTEXT_MENU_ICON_ZOOMOUT:dc});z.LS(); })()
//! moment.js
//! version : 2.10.2
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.moment=b()}(this,function(){"use strict";function a(){return Ac.apply(null,arguments)}function b(a){Ac=a}function c(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function d(a){return"[object Array]"===Object.prototype.toString.call(a)}function e(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function f(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function g(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function h(a,b){for(var c in b)g(b,c)&&(a[c]=b[c]);return g(b,"toString")&&(a.toString=b.toString),g(b,"valueOf")&&(a.valueOf=b.valueOf),a}function i(a,b,c,d){return ya(a,b,c,d,!0).utc()}function j(a){return null==a._isValid&&(a._isValid=!isNaN(a._d.getTime())&&a._pf.overflow<0&&!a._pf.empty&&!a._pf.invalidMonth&&!a._pf.nullInput&&!a._pf.invalidFormat&&!a._pf.userInvalidated,a._strict&&(a._isValid=a._isValid&&0===a._pf.charsLeftOver&&0===a._pf.unusedTokens.length&&void 0===a._pf.bigHour)),a._isValid}function k(a){var b=i(0/0);return null!=a?h(b._pf,a):b._pf.userInvalidated=!0,b}function l(a,b){var c,d,e;if("undefined"!=typeof b._isAMomentObject&&(a._isAMomentObject=b._isAMomentObject),"undefined"!=typeof b._i&&(a._i=b._i),"undefined"!=typeof b._f&&(a._f=b._f),"undefined"!=typeof b._l&&(a._l=b._l),"undefined"!=typeof b._strict&&(a._strict=b._strict),"undefined"!=typeof b._tzm&&(a._tzm=b._tzm),"undefined"!=typeof b._isUTC&&(a._isUTC=b._isUTC),"undefined"!=typeof b._offset&&(a._offset=b._offset),"undefined"!=typeof b._pf&&(a._pf=b._pf),"undefined"!=typeof b._locale&&(a._locale=b._locale),Cc.length>0)for(c in Cc)d=Cc[c],e=b[d],"undefined"!=typeof e&&(a[d]=e);return a}function m(b){l(this,b),this._d=new Date(+b._d),Dc===!1&&(Dc=!0,a.updateOffset(this),Dc=!1)}function n(a){return a instanceof m||null!=a&&g(a,"_isAMomentObject")}function o(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=b>=0?Math.floor(b):Math.ceil(b)),c}function p(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&o(a[d])!==o(b[d]))&&g++;return g+f}function q(){}function r(a){return a?a.toLowerCase().replace("_","-"):a}function s(a){for(var b,c,d,e,f=0;f<a.length;){for(e=r(a[f]).split("-"),b=e.length,c=r(a[f+1]),c=c?c.split("-"):null;b>0;){if(d=t(e.slice(0,b).join("-")))return d;if(c&&c.length>=b&&p(e,c,!0)>=b-1)break;b--}f++}return null}function t(a){var b=null;if(!Ec[a]&&"undefined"!=typeof module&&module&&module.exports)try{b=Bc._abbr,require("./locale/"+a),u(b)}catch(c){}return Ec[a]}function u(a,b){var c;return a&&(c="undefined"==typeof b?w(a):v(a,b),c&&(Bc=c)),Bc._abbr}function v(a,b){return null!==b?(b.abbr=a,Ec[a]||(Ec[a]=new q),Ec[a].set(b),u(a),Ec[a]):(delete Ec[a],null)}function w(a){var b;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return Bc;if(!d(a)){if(b=t(a))return b;a=[a]}return s(a)}function x(a,b){var c=a.toLowerCase();Fc[c]=Fc[c+"s"]=Fc[b]=a}function y(a){return"string"==typeof a?Fc[a]||Fc[a.toLowerCase()]:void 0}function z(a){var b,c,d={};for(c in a)g(a,c)&&(b=y(c),b&&(d[b]=a[c]));return d}function A(b,c){return function(d){return null!=d?(C(this,b,d),a.updateOffset(this,c),this):B(this,b)}}function B(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function C(a,b,c){return a._d["set"+(a._isUTC?"UTC":"")+b](c)}function D(a,b){var c;if("object"==typeof a)for(c in a)this.set(c,a[c]);else if(a=y(a),"function"==typeof this[a])return this[a](b);return this}function E(a,b,c){for(var d=""+Math.abs(a),e=a>=0;d.length<b;)d="0"+d;return(e?c?"+":"":"-")+d}function F(a,b,c,d){var e=d;"string"==typeof d&&(e=function(){return this[d]()}),a&&(Jc[a]=e),b&&(Jc[b[0]]=function(){return E(e.apply(this,arguments),b[1],b[2])}),c&&(Jc[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function G(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function H(a){var b,c,d=a.match(Gc);for(b=0,c=d.length;c>b;b++)d[b]=Jc[d[b]]?Jc[d[b]]:G(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function I(a,b){return a.isValid()?(b=J(b,a.localeData()),Ic[b]||(Ic[b]=H(b)),Ic[b](a)):a.localeData().invalidDate()}function J(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Hc.lastIndex=0;d>=0&&Hc.test(a);)a=a.replace(Hc,c),Hc.lastIndex=0,d-=1;return a}function K(a,b,c){Yc[a]="function"==typeof b?b:function(a){return a&&c?c:b}}function L(a,b){return g(Yc,a)?Yc[a](b._strict,b._locale):new RegExp(M(a))}function M(a){return a.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e}).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function N(a,b){var c,d=b;for("string"==typeof a&&(a=[a]),"number"==typeof b&&(d=function(a,c){c[b]=o(a)}),c=0;c<a.length;c++)Zc[a[c]]=d}function O(a,b){N(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function P(a,b,c){null!=b&&g(Zc,a)&&Zc[a](b,c._a,c,a)}function Q(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function R(a){return this._months[a.month()]}function S(a){return this._monthsShort[a.month()]}function T(a,b,c){var d,e,f;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12>d;d++){if(e=i([2e3,d]),c&&!this._longMonthsParse[d]&&(this._longMonthsParse[d]=new RegExp("^"+this.months(e,"").replace(".","")+"$","i"),this._shortMonthsParse[d]=new RegExp("^"+this.monthsShort(e,"").replace(".","")+"$","i")),c||this._monthsParse[d]||(f="^"+this.months(e,"")+"|^"+this.monthsShort(e,""),this._monthsParse[d]=new RegExp(f.replace(".",""),"i")),c&&"MMMM"===b&&this._longMonthsParse[d].test(a))return d;if(c&&"MMM"===b&&this._shortMonthsParse[d].test(a))return d;if(!c&&this._monthsParse[d].test(a))return d}}function U(a,b){var c;return"string"==typeof b&&(b=a.localeData().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),Q(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function V(b){return null!=b?(U(this,b),a.updateOffset(this,!0),this):B(this,"Month")}function W(){return Q(this.year(),this.month())}function X(a){var b,c=a._a;return c&&-2===a._pf.overflow&&(b=c[_c]<0||c[_c]>11?_c:c[ad]<1||c[ad]>Q(c[$c],c[_c])?ad:c[bd]<0||c[bd]>24||24===c[bd]&&(0!==c[cd]||0!==c[dd]||0!==c[ed])?bd:c[cd]<0||c[cd]>59?cd:c[dd]<0||c[dd]>59?dd:c[ed]<0||c[ed]>999?ed:-1,a._pf._overflowDayOfYear&&($c>b||b>ad)&&(b=ad),a._pf.overflow=b),a}function Y(b){a.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+b)}function Z(a,b){var c=!0;return h(function(){return c&&(Y(a),c=!1),b.apply(this,arguments)},b)}function $(a,b){hd[a]||(Y(b),hd[a]=!0)}function _(a){var b,c,d=a._i,e=id.exec(d);if(e){for(a._pf.iso=!0,b=0,c=jd.length;c>b;b++)if(jd[b][1].exec(d)){a._f=jd[b][0]+(e[6]||" ");break}for(b=0,c=kd.length;c>b;b++)if(kd[b][1].exec(d)){a._f+=kd[b][0];break}d.match(Vc)&&(a._f+="Z"),sa(a)}else a._isValid=!1}function aa(b){var c=ld.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(_(b),void(b._isValid===!1&&(delete b._isValid,a.createFromInputFallback(b))))}function ba(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function ca(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function da(a){return ea(a)?366:365}function ea(a){return a%4===0&&a%100!==0||a%400===0}function fa(){return ea(this.year())}function ga(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=za(a).add(f,"d"),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function ha(a){return ga(a,this._week.dow,this._week.doy).week}function ia(){return this._week.dow}function ja(){return this._week.doy}function ka(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),"d")}function la(a){var b=ga(this,1,4).week;return null==a?b:this.add(7*(a-b),"d")}function ma(a,b,c,d,e){var f,g,h=ca(a,0,1).getUTCDay();return h=0===h?7:h,c=null!=c?c:e,f=e-h+(h>d?7:0)-(e>h?7:0),g=7*(b-1)+(c-e)+f+1,{year:g>0?a:a-1,dayOfYear:g>0?g:da(a-1)+g}}function na(a){var b=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==a?b:this.add(a-b,"d")}function oa(a,b,c){return null!=a?a:null!=b?b:c}function pa(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function qa(a){var b,c,d,e,f=[];if(!a._d){for(d=pa(a),a._w&&null==a._a[ad]&&null==a._a[_c]&&ra(a),a._dayOfYear&&(e=oa(a._a[$c],d[$c]),a._dayOfYear>da(e)&&(a._pf._overflowDayOfYear=!0),c=ca(e,0,a._dayOfYear),a._a[_c]=c.getUTCMonth(),a._a[ad]=c.getUTCDate()),b=0;3>b&&null==a._a[b];++b)a._a[b]=f[b]=d[b];for(;7>b;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];24===a._a[bd]&&0===a._a[cd]&&0===a._a[dd]&&0===a._a[ed]&&(a._nextDay=!0,a._a[bd]=0),a._d=(a._useUTC?ca:ba).apply(null,f),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&&(a._a[bd]=24)}}function ra(a){var b,c,d,e,f,g,h;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=oa(b.GG,a._a[$c],ga(za(),1,4).year),d=oa(b.W,1),e=oa(b.E,1)):(f=a._locale._week.dow,g=a._locale._week.doy,c=oa(b.gg,a._a[$c],ga(za(),f,g).year),d=oa(b.w,1),null!=b.d?(e=b.d,f>e&&++d):e=null!=b.e?b.e+f:f),h=ma(c,d,e,g,f),a._a[$c]=h.year,a._dayOfYear=h.dayOfYear}function sa(b){if(b._f===a.ISO_8601)return void _(b);b._a=[],b._pf.empty=!0;var c,d,e,f,g,h=""+b._i,i=h.length,j=0;for(e=J(b._f,b._locale).match(Gc)||[],c=0;c<e.length;c++)f=e[c],d=(h.match(L(f,b))||[])[0],d&&(g=h.substr(0,h.indexOf(d)),g.length>0&&b._pf.unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),j+=d.length),Jc[f]?(d?b._pf.empty=!1:b._pf.unusedTokens.push(f),P(f,d,b)):b._strict&&!d&&b._pf.unusedTokens.push(f);b._pf.charsLeftOver=i-j,h.length>0&&b._pf.unusedInput.push(h),b._pf.bigHour===!0&&b._a[bd]<=12&&(b._pf.bigHour=void 0),b._a[bd]=ta(b._locale,b._a[bd],b._meridiem),qa(b),X(b)}function ta(a,b,c){var d;return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&&12>b&&(b+=12),d||12!==b||(b=0),b):b}function ua(a){var b,d,e,f,g;if(0===a._f.length)return a._pf.invalidFormat=!0,void(a._d=new Date(0/0));for(f=0;f<a._f.length;f++)g=0,b=l({},a),null!=a._useUTC&&(b._useUTC=a._useUTC),b._pf=c(),b._f=a._f[f],sa(b),j(b)&&(g+=b._pf.charsLeftOver,g+=10*b._pf.unusedTokens.length,b._pf.score=g,(null==e||e>g)&&(e=g,d=b));h(a,d||b)}function va(a){if(!a._d){var b=z(a._i);a._a=[b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],qa(a)}}function wa(a){var b,c=a._i,e=a._f;return a._locale=a._locale||w(a._l),null===c||void 0===e&&""===c?k({nullInput:!0}):("string"==typeof c&&(a._i=c=a._locale.preparse(c)),n(c)?new m(X(c)):(d(e)?ua(a):e?sa(a):xa(a),b=new m(X(a)),b._nextDay&&(b.add(1,"d"),b._nextDay=void 0),b))}function xa(b){var c=b._i;void 0===c?b._d=new Date:e(c)?b._d=new Date(+c):"string"==typeof c?aa(b):d(c)?(b._a=f(c.slice(0),function(a){return parseInt(a,10)}),qa(b)):"object"==typeof c?va(b):"number"==typeof c?b._d=new Date(c):a.createFromInputFallback(b)}function ya(a,b,d,e,f){var g={};return"boolean"==typeof d&&(e=d,d=void 0),g._isAMomentObject=!0,g._useUTC=g._isUTC=f,g._l=d,g._i=a,g._f=b,g._strict=e,g._pf=c(),wa(g)}function za(a,b,c,d){return ya(a,b,c,d,!1)}function Aa(a,b){var c,e;if(1===b.length&&d(b[0])&&(b=b[0]),!b.length)return za();for(c=b[0],e=1;e<b.length;++e)b[e][a](c)&&(c=b[e]);return c}function Ba(){var a=[].slice.call(arguments,0);return Aa("isBefore",a)}function Ca(){var a=[].slice.call(arguments,0);return Aa("isAfter",a)}function Da(a){var b=z(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._locale=w(),this._bubble()}function Ea(a){return a instanceof Da}function Fa(a,b){F(a,0,0,function(){var a=this.utcOffset(),c="+";return 0>a&&(a=-a,c="-"),c+E(~~(a/60),2)+b+E(~~a%60,2)})}function Ga(a){var b=(a||"").match(Vc)||[],c=b[b.length-1]||[],d=(c+"").match(qd)||["-",0,0],e=+(60*d[1])+o(d[2]);return"+"===d[0]?e:-e}function Ha(b,c){var d,f;return c._isUTC?(d=c.clone(),f=(n(b)||e(b)?+b:+za(b))-+d,d._d.setTime(+d._d+f),a.updateOffset(d,!1),d):za(b).local();return c._isUTC?za(b).zone(c._offset||0):za(b).local()}function Ia(a){return 15*-Math.round(a._d.getTimezoneOffset()/15)}function Ja(b,c){var d,e=this._offset||0;return null!=b?("string"==typeof b&&(b=Ga(b)),Math.abs(b)<16&&(b=60*b),!this._isUTC&&c&&(d=Ia(this)),this._offset=b,this._isUTC=!0,null!=d&&this.add(d,"m"),e!==b&&(!c||this._changeInProgress?Za(this,Ua(b-e,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ia(this)}function Ka(a,b){return null!=a?("string"!=typeof a&&(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function La(a){return this.utcOffset(0,a)}function Ma(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Ia(this),"m")),this}function Na(){return this._tzm?this.utcOffset(this._tzm):"string"==typeof this._i&&this.utcOffset(Ga(this._i)),this}function Oa(a){return a=a?za(a).utcOffset():0,(this.utcOffset()-a)%60===0}function Pa(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Qa(){if(this._a){var a=this._isUTC?i(this._a):za(this._a);return this.isValid()&&p(this._a,a.toArray())>0}return!1}function Ra(){return!this._isUTC}function Sa(){return this._isUTC}function Ta(){return this._isUTC&&0===this._offset}function Ua(a,b){var c,d,e,f=a,h=null;return Ea(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(h=rd.exec(a))?(c="-"===h[1]?-1:1,f={y:0,d:o(h[ad])*c,h:o(h[bd])*c,m:o(h[cd])*c,s:o(h[dd])*c,ms:o(h[ed])*c}):(h=sd.exec(a))?(c="-"===h[1]?-1:1,f={y:Va(h[2],c),M:Va(h[3],c),d:Va(h[4],c),h:Va(h[5],c),m:Va(h[6],c),s:Va(h[7],c),w:Va(h[8],c)}):null==f?f={}:"object"==typeof f&&("from"in f||"to"in f)&&(e=Xa(za(f.from),za(f.to)),f={},f.ms=e.milliseconds,f.M=e.months),d=new Da(f),Ea(a)&&g(a,"_locale")&&(d._locale=a._locale),d}function Va(a,b){var c=a&&parseFloat(a.replace(",","."));return(isNaN(c)?0:c)*b}function Wa(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,"M").isAfter(b)&&--c.months,c.milliseconds=+b-+a.clone().add(c.months,"M"),c}function Xa(a,b){var c;return b=Ha(b,a),a.isBefore(b)?c=Wa(a,b):(c=Wa(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c}function Ya(a,b){return function(c,d){var e,f;return null===d||isNaN(+d)||($(b,"moment()."+b+"(period, number) is deprecated. Please use moment()."+b+"(number, period)."),f=c,c=d,d=f),c="string"==typeof c?+c:c,e=Ua(c,d),Za(this,e,a),this}}function Za(b,c,d,e){var f=c._milliseconds,g=c._days,h=c._months;e=null==e?!0:e,f&&b._d.setTime(+b._d+f*d),g&&C(b,"Date",B(b,"Date")+g*d),h&&U(b,B(b,"Month")+h*d),e&&a.updateOffset(b,g||h)}function $a(a){var b=a||za(),c=Ha(b,this).startOf("day"),d=this.diff(c,"days",!0),e=-6>d?"sameElse":-1>d?"lastWeek":0>d?"lastDay":1>d?"sameDay":2>d?"nextDay":7>d?"nextWeek":"sameElse";return this.format(this.localeData().calendar(e,this,za(b)))}function _a(){return new m(this)}function ab(a,b){var c;return b=y("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=n(a)?a:za(a),+this>+a):(c=n(a)?+a:+za(a),c<+this.clone().startOf(b))}function bb(a,b){var c;return b=y("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=n(a)?a:za(a),+a>+this):(c=n(a)?+a:+za(a),+this.clone().endOf(b)<c)}function cb(a,b,c){return this.isAfter(a,c)&&this.isBefore(b,c)}function db(a,b){var c;return b=y(b||"millisecond"),"millisecond"===b?(a=n(a)?a:za(a),+this===+a):(c=+za(a),+this.clone().startOf(b)<=c&&c<=+this.clone().endOf(b))}function eb(a){return 0>a?Math.ceil(a):Math.floor(a)}function fb(a,b,c){var d,e,f=Ha(a,this),g=6e4*(f.utcOffset()-this.utcOffset());return b=y(b),"year"===b||"month"===b||"quarter"===b?(e=gb(this,f),"quarter"===b?e/=3:"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:eb(e)}function gb(a,b){var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),f=a.clone().add(e,"months");return 0>b-f?(c=a.clone().add(e-1,"months"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,"months"),d=(b-f)/(c-f)),-(e+d)}function hb(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function ib(){var a=this.clone().utc();return 0<a.year()&&a.year()<=9999?"function"==typeof Date.prototype.toISOString?this.toDate().toISOString():I(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):I(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}function jb(b){var c=I(this,b||a.defaultFormat);return this.localeData().postformat(c)}function kb(a,b){return Ua({to:this,from:a}).locale(this.locale()).humanize(!b)}function lb(a){return this.from(za(),a)}function mb(a){var b;return void 0===a?this._locale._abbr:(b=w(a),null!=b&&(this._locale=b),this)}function nb(){return this._locale}function ob(a){switch(a=y(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a&&this.weekday(0),"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this}function pb(a){return a=y(a),void 0===a||"millisecond"===a?this:this.startOf(a).add(1,"isoWeek"===a?"week":a).subtract(1,"ms")}function qb(){return+this._d-6e4*(this._offset||0)}function rb(){return Math.floor(+this/1e3)}function sb(){return this._offset?new Date(+this):this._d}function tb(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function ub(){return j(this)}function vb(){return h({},this._pf)}function wb(){return this._pf.overflow}function xb(a,b){F(0,[a,a.length],0,b)}function yb(a,b,c){return ga(za([a,11,31+b-c]),b,c).week}function zb(a){var b=ga(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return null==a?b:this.add(a-b,"y")}function Ab(a){var b=ga(this,1,4).year;return null==a?b:this.add(a-b,"y")}function Bb(){return yb(this.year(),1,4)}function Cb(){var a=this.localeData()._week;return yb(this.year(),a.dow,a.doy)}function Db(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}function Eb(a,b){if("string"==typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!=typeof a)return null}else a=parseInt(a,10);return a}function Fb(a){return this._weekdays[a.day()]}function Gb(a){return this._weekdaysShort[a.day()]}function Hb(a){return this._weekdaysMin[a.day()]}function Ib(a){var b,c,d;for(this._weekdaysParse||(this._weekdaysParse=[]),b=0;7>b;b++)if(this._weekdaysParse[b]||(c=za([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b}function Jb(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Eb(a,this.localeData()),this.add(a-b,"d")):b}function Kb(a){var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,"d")}function Lb(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)}function Mb(a,b){F(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}function Nb(a,b){return b._meridiemParse}function Ob(a){return"p"===(a+"").toLowerCase().charAt(0)}function Pb(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"}function Qb(a){F(0,[a,3],0,"millisecond")}function Rb(){return this._isUTC?"UTC":""}function Sb(){return this._isUTC?"Coordinated Universal Time":""}function Tb(a){return za(1e3*a)}function Ub(){return za.apply(null,arguments).parseZone()}function Vb(a,b,c){var d=this._calendar[a];return"function"==typeof d?d.call(b,c):d}function Wb(a){var b=this._longDateFormat[a];return!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a]=b),b}function Xb(){return this._invalidDate}function Yb(a){return this._ordinal.replace("%d",a)}function Zb(a){return a}function $b(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)}function _b(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)}function ac(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b;this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)}function bc(a,b,c,d){var e=w(),f=i().set(d,b);return e[c](f,a)}function cc(a,b,c,d,e){if("number"==typeof a&&(b=a,a=void 0),a=a||"",null!=b)return bc(a,b,c,e);var f,g=[];for(f=0;d>f;f++)g[f]=bc(a,f,c,e);return g}function dc(a,b){return cc(a,b,"months",12,"month")}function ec(a,b){return cc(a,b,"monthsShort",12,"month")}function fc(a,b){return cc(a,b,"weekdays",7,"day")}function gc(a,b){return cc(a,b,"weekdaysShort",7,"day")}function hc(a,b){return cc(a,b,"weekdaysMin",7,"day")}function ic(){var a=this._data;return this._milliseconds=Od(this._milliseconds),this._days=Od(this._days),this._months=Od(this._months),a.milliseconds=Od(a.milliseconds),a.seconds=Od(a.seconds),a.minutes=Od(a.minutes),a.hours=Od(a.hours),a.months=Od(a.months),a.years=Od(a.years),this}function jc(a,b,c,d){var e=Ua(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}function kc(a,b){return jc(this,a,b,1)}function lc(a,b){return jc(this,a,b,-1)}function mc(){var a,b,c,d=this._milliseconds,e=this._days,f=this._months,g=this._data,h=0;return g.milliseconds=d%1e3,a=eb(d/1e3),g.seconds=a%60,b=eb(a/60),g.minutes=b%60,c=eb(b/60),g.hours=c%24,e+=eb(c/24),h=eb(nc(e)),e-=eb(oc(h)),f+=eb(e/30),e%=30,h+=eb(f/12),f%=12,g.days=e,g.months=f,g.years=h,this}function nc(a){return 400*a/146097}function oc(a){return 146097*a/400}function pc(a){var b,c,d=this._milliseconds;if(a=y(a),"month"===a||"year"===a)return b=this._days+d/864e5,c=this._months+12*nc(b),"month"===a?c:c/12;switch(b=this._days+Math.round(oc(this._months/12)),a){case"week":return b/7+d/6048e5;case"day":return b+d/864e5;case"hour":return 24*b+d/36e5;case"minute":return 24*b*60+d/6e4;case"second":return 24*b*60*60+d/1e3;case"millisecond":return Math.floor(24*b*60*60*1e3)+d;default:throw new Error("Unknown unit "+a)}}function qc(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*o(this._months/12)}function rc(a){return function(){return this.as(a)}}function sc(a){return a=y(a),this[a+"s"]()}function tc(a){return function(){return this._data[a]}}function uc(){return eb(this.days()/7)}function vc(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function wc(a,b,c){var d=Ua(a).abs(),e=ce(d.as("s")),f=ce(d.as("m")),g=ce(d.as("h")),h=ce(d.as("d")),i=ce(d.as("M")),j=ce(d.as("y")),k=e<de.s&&["s",e]||1===f&&["m"]||f<de.m&&["mm",f]||1===g&&["h"]||g<de.h&&["hh",g]||1===h&&["d"]||h<de.d&&["dd",h]||1===i&&["M"]||i<de.M&&["MM",i]||1===j&&["y"]||["yy",j];return k[2]=b,k[3]=+a>0,k[4]=c,vc.apply(null,k)}function xc(a,b){return void 0===de[a]?!1:void 0===b?de[a]:(de[a]=b,!0)}function yc(a){var b=this.localeData(),c=wc(this,!a,b);return a&&(c=b.pastFuture(+this,c)),b.postformat(c)}function zc(){var a=ee(this.years()),b=ee(this.months()),c=ee(this.days()),d=ee(this.hours()),e=ee(this.minutes()),f=ee(this.seconds()+this.milliseconds()/1e3),g=this.asSeconds();return g?(0>g?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||f?"T":"")+(d?d+"H":"")+(e?e+"M":"")+(f?f+"S":""):"P0D"}var Ac,Bc,Cc=a.momentProperties=[],Dc=!1,Ec={},Fc={},Gc=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,Hc=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Ic={},Jc={},Kc=/\d/,Lc=/\d\d/,Mc=/\d{3}/,Nc=/\d{4}/,Oc=/[+-]?\d{6}/,Pc=/\d\d?/,Qc=/\d{1,3}/,Rc=/\d{1,4}/,Sc=/[+-]?\d{1,6}/,Tc=/\d+/,Uc=/[+-]?\d+/,Vc=/Z|[+-]\d\d:?\d\d/gi,Wc=/[+-]?\d+(\.\d{1,3})?/,Xc=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Yc={},Zc={},$c=0,_c=1,ad=2,bd=3,cd=4,dd=5,ed=6;F("M",["MM",2],"Mo",function(){return this.month()+1}),F("MMM",0,0,function(a){return this.localeData().monthsShort(this,a)}),F("MMMM",0,0,function(a){return this.localeData().months(this,a)}),x("month","M"),K("M",Pc),K("MM",Pc,Lc),K("MMM",Xc),K("MMMM",Xc),N(["M","MM"],function(a,b){b[_c]=o(a)-1}),N(["MMM","MMMM"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[_c]=e:c._pf.invalidMonth=a});var fd="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),gd="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),hd={};a.suppressDeprecationWarnings=!1;var id=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,jd=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],kd=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],ld=/^\/?Date\((\-?\d+)/i;a.createFromInputFallback=Z("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i+(a._useUTC?" UTC":""))}),F(0,["YY",2],0,function(){return this.year()%100}),F(0,["YYYY",4],0,"year"),F(0,["YYYYY",5],0,"year"),F(0,["YYYYYY",6,!0],0,"year"),x("year","y"),K("Y",Uc),K("YY",Pc,Lc),K("YYYY",Rc,Nc),K("YYYYY",Sc,Oc),K("YYYYYY",Sc,Oc),N(["YYYY","YYYYY","YYYYYY"],$c),N("YY",function(b,c){c[$c]=a.parseTwoDigitYear(b)}),a.parseTwoDigitYear=function(a){return o(a)+(o(a)>68?1900:2e3)};var md=A("FullYear",!1);F("w",["ww",2],"wo","week"),F("W",["WW",2],"Wo","isoWeek"),x("week","w"),x("isoWeek","W"),K("w",Pc),K("ww",Pc,Lc),K("W",Pc),K("WW",Pc,Lc),O(["w","ww","W","WW"],function(a,b,c,d){b[d.substr(0,1)]=o(a)});var nd={dow:0,doy:6};F("DDD",["DDDD",3],"DDDo","dayOfYear"),x("dayOfYear","DDD"),K("DDD",Qc),K("DDDD",Mc),N(["DDD","DDDD"],function(a,b,c){c._dayOfYear=o(a)}),a.ISO_8601=function(){};var od=Z("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(){var a=za.apply(null,arguments);return this>a?this:a}),pd=Z("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(){var a=za.apply(null,arguments);return a>this?this:a});Fa("Z",":"),Fa("ZZ",""),K("Z",Vc),K("ZZ",Vc),N(["Z","ZZ"],function(a,b,c){c._useUTC=!0,c._tzm=Ga(a)});var qd=/([\+\-]|\d\d)/gi;a.updateOffset=function(){};var rd=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,sd=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;Ua.fn=Da.prototype;var td=Ya(1,"add"),ud=Ya(-1,"subtract");a.defaultFormat="YYYY-MM-DDTHH:mm:ssZ";var vd=Z("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(a){return void 0===a?this.localeData():this.locale(a)});F(0,["gg",2],0,function(){return this.weekYear()%100}),F(0,["GG",2],0,function(){return this.isoWeekYear()%100}),xb("gggg","weekYear"),xb("ggggg","weekYear"),xb("GGGG","isoWeekYear"),xb("GGGGG","isoWeekYear"),x("weekYear","gg"),x("isoWeekYear","GG"),K("G",Uc),K("g",Uc),K("GG",Pc,Lc),K("gg",Pc,Lc),K("GGGG",Rc,Nc),K("gggg",Rc,Nc),K("GGGGG",Sc,Oc),K("ggggg",Sc,Oc),O(["gggg","ggggg","GGGG","GGGGG"],function(a,b,c,d){b[d.substr(0,2)]=o(a)}),O(["gg","GG"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),F("Q",0,0,"quarter"),x("quarter","Q"),K("Q",Kc),N("Q",function(a,b){b[_c]=3*(o(a)-1)}),F("D",["DD",2],"Do","date"),x("date","D"),K("D",Pc),K("DD",Pc,Lc),K("Do",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),N(["D","DD"],ad),N("Do",function(a,b){b[ad]=o(a.match(Pc)[0],10)});var wd=A("Date",!0);F("d",0,"do","day"),F("dd",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),F("ddd",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),F("dddd",0,0,function(a){return this.localeData().weekdays(this,a)}),F("e",0,0,"weekday"),F("E",0,0,"isoWeekday"),x("day","d"),x("weekday","e"),x("isoWeekday","E"),K("d",Pc),K("e",Pc),K("E",Pc),K("dd",Xc),K("ddd",Xc),K("dddd",Xc),O(["dd","ddd","dddd"],function(a,b,c){var d=c._locale.weekdaysParse(a);null!=d?b.d=d:c._pf.invalidWeekday=a}),O(["d","e","E"],function(a,b,c,d){b[d]=o(a)});var xd="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),yd="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),zd="Su_Mo_Tu_We_Th_Fr_Sa".split("_");F("H",["HH",2],0,"hour"),F("h",["hh",2],0,function(){return this.hours()%12||12}),Mb("a",!0),Mb("A",!1),x("hour","h"),K("a",Nb),K("A",Nb),K("H",Pc),K("h",Pc),K("HH",Pc,Lc),K("hh",Pc,Lc),N(["H","HH"],bd),N(["a","A"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),N(["h","hh"],function(a,b,c){b[bd]=o(a),c._pf.bigHour=!0});var Ad=/[ap]\.?m?\.?/i,Bd=A("Hours",!0);F("m",["mm",2],0,"minute"),x("minute","m"),K("m",Pc),K("mm",Pc,Lc),N(["m","mm"],cd);var Cd=A("Minutes",!1);F("s",["ss",2],0,"second"),x("second","s"),K("s",Pc),K("ss",Pc,Lc),N(["s","ss"],dd);var Dd=A("Seconds",!1);F("S",0,0,function(){return~~(this.millisecond()/100)}),F(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),Qb("SSS"),Qb("SSSS"),x("millisecond","ms"),K("S",Qc,Kc),K("SS",Qc,Lc),K("SSS",Qc,Mc),K("SSSS",Tc),N(["S","SS","SSS","SSSS"],function(a,b){b[ed]=o(1e3*("0."+a))});var Ed=A("Milliseconds",!1);F("z",0,0,"zoneAbbr"),F("zz",0,0,"zoneName");var Fd=m.prototype;Fd.add=td,Fd.calendar=$a,Fd.clone=_a,Fd.diff=fb,Fd.endOf=pb,Fd.format=jb,Fd.from=kb,Fd.fromNow=lb,Fd.get=D,Fd.invalidAt=wb,Fd.isAfter=ab,Fd.isBefore=bb,Fd.isBetween=cb,Fd.isSame=db,Fd.isValid=ub,Fd.lang=vd,Fd.locale=mb,Fd.localeData=nb,Fd.max=pd,Fd.min=od,Fd.parsingFlags=vb,Fd.set=D,Fd.startOf=ob,Fd.subtract=ud,Fd.toArray=tb,Fd.toDate=sb,Fd.toISOString=ib,Fd.toJSON=ib,Fd.toString=hb,Fd.unix=rb,Fd.valueOf=qb,Fd.year=md,Fd.isLeapYear=fa,Fd.weekYear=zb,Fd.isoWeekYear=Ab,Fd.quarter=Fd.quarters=Db,Fd.month=V,Fd.daysInMonth=W,Fd.week=Fd.weeks=ka,Fd.isoWeek=Fd.isoWeeks=la,Fd.weeksInYear=Cb,Fd.isoWeeksInYear=Bb,Fd.date=wd,Fd.day=Fd.days=Jb,Fd.weekday=Kb,Fd.isoWeekday=Lb,Fd.dayOfYear=na,Fd.hour=Fd.hours=Bd,Fd.minute=Fd.minutes=Cd,Fd.second=Fd.seconds=Dd,Fd.millisecond=Fd.milliseconds=Ed,Fd.utcOffset=Ja,Fd.utc=La,Fd.local=Ma,Fd.parseZone=Na,Fd.hasAlignedHourOffset=Oa,Fd.isDST=Pa,Fd.isDSTShifted=Qa,Fd.isLocal=Ra,Fd.isUtcOffset=Sa,Fd.isUtc=Ta,Fd.isUTC=Ta,Fd.zoneAbbr=Rb,Fd.zoneName=Sb,Fd.dates=Z("dates accessor is deprecated. Use date instead.",wd),Fd.months=Z("months accessor is deprecated. Use month instead",V),Fd.years=Z("years accessor is deprecated. Use year instead",md),Fd.zone=Z("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",Ka);var Gd=Fd,Hd={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},Id={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY LT",LLLL:"dddd, MMMM D, YYYY LT"},Jd="Invalid date",Kd="%d",Ld=/\d{1,2}/,Md={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},Nd=q.prototype;Nd._calendar=Hd,Nd.calendar=Vb,Nd._longDateFormat=Id,Nd.longDateFormat=Wb,Nd._invalidDate=Jd,Nd.invalidDate=Xb,Nd._ordinal=Kd,Nd.ordinal=Yb,Nd._ordinalParse=Ld,
Nd.preparse=Zb,Nd.postformat=Zb,Nd._relativeTime=Md,Nd.relativeTime=$b,Nd.pastFuture=_b,Nd.set=ac,Nd.months=R,Nd._months=fd,Nd.monthsShort=S,Nd._monthsShort=gd,Nd.monthsParse=T,Nd.week=ha,Nd._week=nd,Nd.firstDayOfYear=ja,Nd.firstDayOfWeek=ia,Nd.weekdays=Fb,Nd._weekdays=xd,Nd.weekdaysMin=Hb,Nd._weekdaysMin=zd,Nd.weekdaysShort=Gb,Nd._weekdaysShort=yd,Nd.weekdaysParse=Ib,Nd.isPM=Ob,Nd._meridiemParse=Ad,Nd.meridiem=Pb,u("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===o(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),a.lang=Z("moment.lang is deprecated. Use moment.locale instead.",u),a.langData=Z("moment.langData is deprecated. Use moment.localeData instead.",w);var Od=Math.abs,Pd=rc("ms"),Qd=rc("s"),Rd=rc("m"),Sd=rc("h"),Td=rc("d"),Ud=rc("w"),Vd=rc("M"),Wd=rc("y"),Xd=tc("milliseconds"),Yd=tc("seconds"),Zd=tc("minutes"),$d=tc("hours"),_d=tc("days"),ae=tc("months"),be=tc("years"),ce=Math.round,de={s:45,m:45,h:22,d:26,M:11},ee=Math.abs,fe=Da.prototype;fe.abs=ic,fe.add=kc,fe.subtract=lc,fe.as=pc,fe.asMilliseconds=Pd,fe.asSeconds=Qd,fe.asMinutes=Rd,fe.asHours=Sd,fe.asDays=Td,fe.asWeeks=Ud,fe.asMonths=Vd,fe.asYears=Wd,fe.valueOf=qc,fe._bubble=mc,fe.get=sc,fe.milliseconds=Xd,fe.seconds=Yd,fe.minutes=Zd,fe.hours=$d,fe.days=_d,fe.weeks=uc,fe.months=ae,fe.years=be,fe.humanize=yc,fe.toISOString=zc,fe.toString=zc,fe.toJSON=zc,fe.locale=mb,fe.localeData=nb,fe.toIsoString=Z("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",zc),fe.lang=vd,F("X",0,0,"unix"),F("x",0,0,"valueOf"),K("x",Uc),K("X",Wc),N("X",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),N("x",function(a,b,c){c._d=new Date(o(a))}),a.version="2.10.2",b(za),a.fn=Gd,a.min=Ba,a.max=Ca,a.utc=i,a.unix=Tb,a.months=dc,a.isDate=e,a.locale=u,a.invalid=k,a.duration=Ua,a.isMoment=n,a.weekdays=fc,a.parseZone=Ub,a.localeData=w,a.isDuration=Ea,a.monthsShort=ec,a.weekdaysMin=hc,a.defineLocale=v,a.weekdaysShort=gc,a.normalizeUnits=y,a.relativeTimeThreshold=xc;var ge=a;return ge});
var AppConfig = {

    //版本号待定
    VERSION: "2.0.0",

    //服务器地址，请务必保留最后一个斜线
    //正式库：http://app.quyiyuan.com:8888/APP/
    //测试库：http://115.28.131.22/APP/   18710567635  111111
    SERVER_URL: "http://app.quyiyuan.com:8888/APP/",

    //服务总线配置
    SERVICE_BUS: {
        http: {
            //默认参数
            default_params: {
                loc: "c",
                opVersion: "2.0.0",
                //以下为临时参数
                isLogin: function () {
                    var memoryCache = KyeeAppHelper.getSimpleService("kyee.quyiyuan.service_bus.cache", "CacheServiceBus").getMemoryCache();
                    return memoryCache.get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN);
                },
                //hospitalID : "1001",
                operateCurrent_UserId: "2164389",
                operateUserSource: "0",
                hospitalID: function () {

                    //获取 StorageCache 服务
                    var storageCache = KyeeAppHelper.getSimpleService("kyee.quyiyuan.service_bus.cache", "CacheServiceBus").getStorageCache();
                    var hospitalInfo = storageCache.get("hospitalInfo");

                    if (hospitalInfo != null) {

                        return hospitalInfo.id;
                    }

                    return null;
                },
                USER_ID : function(){
                    var memoryCache = KyeeAppHelper.getSimpleService("kyee.quyiyuan.service_bus.cache", "CacheServiceBus").getMemoryCache();
                    var currentUserRecord = memoryCache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);
                    if(currentUserRecord){
                        return currentUserRecord.USER_ID;
                    }
                    return null;
                },
                USER_VS_ID : function(){
                    var memoryCache = KyeeAppHelper.getSimpleService("kyee.quyiyuan.service_bus.cache", "CacheServiceBus").getMemoryCache();
                    var currentCustomPatient = memoryCache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
                    if(currentCustomPatient){
                        return currentCustomPatient.USER_VS_ID;
                    }
                    return null;
                }
            }
        }
    },

    //当前模式，可取值为 DEV、DEPLOYMENT
    //如果为 DEV，则部分辅助开发功能会打开，例如日志输出，DEPLOYMENT 下将会关闭这些特性
    MODE: "DEV",

    //日志级别，可取值为 DEBUG、INFO、WARN、ERROR
    LOG_LEVEL: "DEBUG"
};
new KyeeModule()
    .group("kyee.quyiyuan.config")
    .type("provider")
    .name("RouterConfig")
    .action(function(){

        var tables = [
            //我的账单路由
            PAYMENT_ROUTER_TABLE,
            MYQUYI_ROUTER_TABLE,
            MESSAGE_CENTER_ROUTER_TABLE,
			REPORT_ROUTER_TABLE,
            APPOINT_ROUTER_TABLE,
            REGIST_ROUTER_TABLE,
            CENTER_ROUTER_TABLE,
            QUEUE_ROUTER_TABLE,
            INTERACTION_TABLE,
            HOME_ROUTER_TABLE,
            REBATE_ROUTER_TABLE,
            //自我诊断路由
            TRIAGE_ROUTER_TABLE,
            //关于趣医页面路由
            ABOUT_QUYI_TABLE,
            //排班路由
            SCHEDULE_ROUTER_TABLE,
            SATISFACTION_ROUTER_TABLE,
            NAVIGATION_ROUTER_TABLE
        ];

        this.getTables = function(){
            return tables;
        };

        this.$get = function(){
            return {};
        }
    })
    .build();
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/30
 * 时间: 13:12
 * 创建原因：关于趣医页面的路由
 * 修改原因：
 * 修改时间：
 */
var ABOUT_QUYI_TABLE={
    "aboutquyi":{
        url:"/aboutquyi",
        views:{
            "main_view":{
                templateUrl:"modules/business/aboutquyi/index.html",
                controller:"AboutQuyiController"
            }

        }
    },
    "aboutquyi_help":{
        url:"/aboutquyi/help",
        views:{
            "main_view":{
                templateUrl:"modules/business/aboutquyi/views/help.html",
                controller:"HelpController"
            }

        }
    },
    "aboutquyi_feedback":{
        url:"/aboutquyi/feedback",
        views:{
            "main_view":{
                templateUrl:"modules/business/aboutquyi/views/feedback.html",
                controller:"FeedbackController"
            }

        }
    },
    "aboutquyi_login":{
        url:"/aboutquyi/login",
        views:{
            "main_view":{
                templateUrl:"modules/business/login/index.html",
                controller:"LoginController"
            }

        }
    },
    "aboutquyi_webview":{
        url:"/aboutquyi/webview",
        views:{
            "main_view":{
                templateUrl:"modules/business/aboutquyi/views/weburl.html",
                controller:"WebUrlController"
            }

        }
    }
};
var APPOINT_ROUTER_TABLE={
    "appoint":{
        url:"/appoint",
        views:{
            "main_view":{
                templateUrl:"modules/business/appoint/index.html",
                controller:"AppointDeptSelectController"
            }

        }
    },
    "appoint_schedule":{
        url:"/schedule",
        views : {
            "main_view":{
                templateUrl:"modules/business/appoint/views/doctor_schedule.html",
                controller:"AppointDoctorScheduleController"
            },
            "appoint_doctor_schedule@appoint_schedule":{
                templateUrl:"modules/business/appoint/views/doctor_schedule_bydoctor.html"
            }
        }
    },
    "appoint_schedulebytime":{
        url:"/schedulebytime",
        views : {
            "appoint_doctor_schedule@appoint_schedule":{
                templateUrl:"modules/business/appoint/views/doctor_schedule_bytime.html",
                controller:"AppointDoctorSchedulebyTimeController"
            }
        }
    },
    "appoint_schedulecalendar":{
        url:"/schedulecalendar",
        views : {
            "appoint_doctor_schedule@appoint_schedule":{
                templateUrl:"modules/business/appoint/views/doctor_schedule_calendar.html",
                controller:"AppointDoctorScheduleCalendarController"
            }
        }
    },
    "appoint_schedulebydoctor":{
        url:"/schedulebydoctor",
        views : {
            "appoint_doctor_schedule@appoint_schedule":{
                templateUrl:"modules/business/appoint/views/doctor_schedule_bydoctor.html",
                controller:"AppointDoctorScheduleController"
            }
        }
    },
    "appoint_confirm":{
        url:"/appoint_confirm",
        views : {
            "main_view":{
                templateUrl:"modules/business/appoint/views/appoint_confirm.html",
                controller:"AppointConfirmController"
            }
        }
    }
};

/**
 * Created by Administrator on 2015/4/28.
 */
var CENTER_ROUTER_TABLE = {
    // certer 个人中心配置
    "center->MAIN_TAB" : {
        url: "/center->MAIN_TAB",
        views: {
            "main_view": {
                templateUrl: "modules/business/center/index.html",
                controller : "CenterController"
            }
        }
    },
    //切换就诊者
    "custom_patient" : {
        url: "/custom_patient",
        views: {
            "main_view": {
                templateUrl: "modules/business/center/views/custom_patient/custom_patient.html",
                controller : "CustomPatientController"
            }
        }
    },
    //查询就诊者
    "comm_patient_detail" : {
        url: "/comm_patient_detail",
        views: {
            "main_view": {
                templateUrl: "modules/business/center/views/custom_patient/comm_patient_detail.html",
                controller : "CommPatientDetailController"
            }
        }
    },
//    //新增就诊者
//    "add_custom_patient" : {
//        url: "/add_custom_patient",
//        views: {
//            "main_view": {
//                templateUrl: "modules/business/center/views/add_patient_info/add_custom_patient.html",
//                controller : "AddCustomPatientControllerAddCustomPatientControllerAddCustomPatientController"
//            }
//        }
//    },
    //切换就诊者
    "add_patient_info" : {
        url: "/add_patient_info",
        views: {
            "main_view": {
                templateUrl: "modules/business/center/views/add_patient_info/add_patient_info.html",
                controller : "AddPatientInfoController"
            }
        }
    },
    //切换角色
    "role_view" : {
        url: "/role_view",
        views: {
            "main_view": {
                templateUrl: "modules/business/center/views/role_view/role_view.html",
                controller : "RoleViewController"
            }
        }
    },
    //修改密码
    "change_pwd" : {
        url: "/change_pwd",
        views: {
            "main_view": {
                templateUrl: "modules/business/center/views/change_pwd/change_pwd.html",
                controller : "ChangePwdController"
            }
        }
    },
    //个人信息维护
    "update_user" : {
        url: "/update_user",
        views: {
            "main_view": {
                templateUrl: "modules/business/center/views/update_user/update_user.html",
                controller : "UpdateUserController"
            }
        }
    }
}
var HOME_ROUTER_TABLE = {

    "home" : {
        url: "/home",
        views:{
            "main_view":{
                templateUrl: "modules/main/index.html",
                controller : "MainController"
            }
        }
    },

    "hospital_selector" : {
        url: "/hospital_selector",
        views:{
            "main_view":{
                templateUrl: "modules/main/views/hospital_selector/selector.html",
                controller : "HospitalSelectorController"
            },
            "hospital_selector_list_view@hospital_selector":{
                templateUrl: "modules/main/views/hospital_selector/elements/city_list.html"
            }
        }
    },

    "hospital_list" : {
        url: "/hospital_list",
        views:{
            "hospital_selector_list_view@hospital_selector":{
                templateUrl: "modules/main/views/hospital_selector/elements/hospital_list.html"
            }
        }
    },

    "hospital_search_result" : {
        url: "/hospital_search_result",
        views:{
            "hospital_selector_list_view@hospital_selector":{
                templateUrl: "modules/main/views/hospital_selector/elements/hospital_search_result.html"
            }
        }
    },

    "hospital_detail" : {
        url: "/hospital_detail",
        views:{
            "main_view":{
                templateUrl: "modules/main/views/hospital_detail.html",
                controller : "HospitalDetailController"
            }
        }
    },

    "more->MAIN_TAB" : {
        url: "/more->MAIN_TAB",
        views:{
            "main_view":{
                templateUrl: "modules/main/views/more.html",
                controller : "MainController"
            }
        }
    }
};
var INTERACTION_TABLE = {

    //选择医生页面
    "interaction" : {
        url: "/interaction",
        views: {
            "main_view": {
                templateUrl: "modules/business/interaction/index.html",
                controller:"DoctorSelectController"
            }
        }
    },
    //医生个人主页
    "doctorPersonalPage" : {
        url: "/doctorPersonalPage",
        views: {
            "main_view": {
                templateUrl: "modules/business/interaction/views/doctor_personal_page.html",
                controller:"DoctorPersonalPageController"
            },
            "doctor_view@doctorPersonalPage":{
                templateUrl: "modules/business/interaction/views/doctor_schedule.html",
                controller:"DoctorScheduleController"
            }
        }
    },
    //医生排班
    "doctorPersonalPage.doctorSchedule" : {
        url: "/doctorSchedule",
        views: {
            "doctor_view": {
                templateUrl: "modules/business/interaction/views/doctor_schedule.html",
                controller:"DoctorScheduleController"
            }
        }
    },
    //医生简介
    "doctorPersonalPage.doctorIntroduction" : {
        url: "/doctorIntroduction",
        views: {
            "doctor_view": {
                templateUrl: "modules/business/interaction/views/doctor_introduction.html",
                controller:"DoctorIntroductionController"
            }
        }
    },
    //医生评价
    "doctorPersonalPage.doctorSuggest" : {
        url: "/doctorSuggest",
        views: {
            "doctor_view": {
                templateUrl: "modules/business/interaction/views/doctor_suggest.html",
                controller:"DoctorSuggestController"
            }
        }
    },
    //留言板
    "doctorPersonalPage.doctorMessageboard" : {
        url: "/doctorMessageboard",
        views: {
            "doctor_view": {
                templateUrl: "modules/business/interaction/views/doctor_message_board.html"
            }
        }
    }
};
var MESSAGE_CENTER_ROUTER_TABLE = {

    //消息中心
    "messagecenter->MAIN_TAB" : {
        url: "/messagecenter->MAIN_TAB",
        views: {
            "main_view": {
                templateUrl: "modules/business/messagecenter/index.html",
                controller: "MessageCenterController"
            }
        }
    },

    //查卡结果页面
    "query_card_result" : {
        url: "/query_card_result",
        views: {
            "main_view": {
                templateUrl: "modules/business/messagecenter/views/query_card_result.html",
                controller: "QueryCardResultController"
            }
        }
    }
};
var MYQUYI_ROUTER_TABLE = {
    "myquyi->MAIN_TAB": {
        url: "/myquyi->MAIN_TAB",
        cache:'false',
        views: {
            "main_view": {
                templateUrl: "modules/business/myquyi/index.html",
                controller: "MyquyiController"
            }
        }
    },
    //修改本路由名时，注意修改MyquyiService中
    // doShowMyquyiView方法中的routerMap
    "myquyi->MAIN_TAB.medicalGuide": {
        url: "/medicalGuide",
        views: {
            "myquyiSubview@myquyi->MAIN_TAB": {
                templateUrl: "modules/business/myquyi/views/medical_guide.html",
                controller: "MedicalGuideController"
            }
        }
    },
    /*begin 住院业务*/
    //修改本路由名时，注意修改MyquyiService中
    // doShowMyquyiView方法中的routerMap
    //住院业务首页
    "myquyi->MAIN_TAB.inpatientBusiness": {
        url: "/inpatientBusiness",
        views: {
            "myquyiSubview@myquyi->MAIN_TAB": {
                templateUrl: "modules/business/myquyi/views/inpaitent_business.html",
                controller: "inpatientBusinessController"
            }
        }
    },
    //住院缴费详情
    "inpatientPay": {
        url: "/inpatientPay",
        views: {
            "main_view": {
                templateUrl: "modules/business/myquyi/views/inpaitent_pay.html",
                controller: "inpatientPayController"
            }
        }
    },
    //住院费用详情
    "inpatientFee": {
        url: "/inpatientFee",
        views: {
            "main_view": {
                templateUrl: "modules/business/myquyi/views/inpaitent_fee.html",
                controller: "inpatientFeeController"
            }
        }
    },
    //切换住院号按钮--由住院业务首页跳转住院预交查询页
    "inpatientBusiness_to_prePayed": {
        url: "/inpatientBusiness_to_prePayed",
        views: {
            "main_view": {
                templateUrl: "modules/business/payment/views/pre_payed.html",
                controller : "PrePayedController"
            }
        }
    },
    //缴费按钮--由住院业务首页跳转住院预交信息页
    "inpatientBusiness_to_prePayedInfo": {
        url: "/inpatientBusiness_to_prePayedInfo",
        views: {
            "main_view": {
                templateUrl: "modules/business/payment/views/pre_payed_info.html",
                controller : "PrePayedInfoController"
            }
        }
    },
    //缴费按钮--由住院缴费详情页跳转住院预交查询页
    "inpatientPay_to_prePayed": {
        url: "/inpatientPay_to_prePayed",
        views: {
            "main_view": {
                templateUrl: "modules/business/payment/views/pre_payed.html",
                controller : "PrePayedController"
            }
        }
    },
    /*end 住院业务*/
    //修改本路由名时，注意修改MyquyiService中
    // doShowMyquyiView方法中的routerMap
    "myquyi->MAIN_TAB.careDoctors": {
        url: "/careDoctors",
        views: {
            "myquyiSubview@myquyi->MAIN_TAB": {
                templateUrl: "modules/business/myquyi/views/my_care_doctors.html",
                controller: "MyCareDoctorsController"
            }
        }
    },
    //预约挂号详情
    "appoint_regist_detail": {
        url: "/appoint_regist_detail",
        views: {
            "main_view": {
                templateUrl: "modules/business/myquyi/views/appoint_regist_detail.html",
                controller: "AppointRegistDetailController"
            }
        }
    },
    "appoint_regist_list": {
        url: "/appoint_regist_list",
        views: {
            "main_view": {
                templateUrl: "modules/business/myquyi/views/appoint_regist_list.html",
                controller: "AppointRegistListController"
            }
        }
    }

};
var NAVIGATION_ROUTER_TABLE = {
    "navigation": {
        url: "/navigation",
        views: {
            "main_view": {
                templateUrl: "modules/business/navigation/index.html"
            }

        }
    },
    "navigation_out": {
        url: "/navigation_out",
        views: {
            "main_view": {
                templateUrl: "modules/business/navigation/views/hospital_navigation.html",
                controller: "NavigationOutController"
            }

        }
    }
};
var PAYMENT_ROUTER_TABLE = {
    //我的账单
    "payment" : {
        url: "/payment",
        views:{
            "main_view" : {
                templateUrl: "modules/business/payment/index.html",
                controller : "PaymentMainController"
            }
        }
    },
    //已缴费用
    "payment.payment" : {
        url: "/payment",
        views:{
            "pay-main" : {
                templateUrl: "modules/business/payment/views/payment.html",
                controller : "PaymentController"
            }
        }
    },
    //住院费用
    "payment.inpatientPayment" : {
        url: "/inpatientPayment",
        views:{
            "pay-main" : {
                templateUrl: "modules/business/payment/views/inpatient_payment.html",
                controller : "InpatientPaymentController"
            }
        }
    },
    //已缴费用 已缴详情
    "payment.alreadyPayment" : {
        url: "/alreadyPayment",
        views:{
            "pay-main" : {
                templateUrl: "modules/business/payment/views/already_payment.html",
                controller : "AlreadyPaymentController"
            }
        }
    },
    //住院预交
    "payment.prePayed" : {
        url: "/prePayed",
        views:{
            "pay-main" : {
                templateUrl: "modules/business/payment/views/pre_payed.html",
                controller : "PrePayedController"
            }
        }
    },
    //住院预交 支付信息
    "payment.prePayedInfo" : {
        url: "/prePayedInfo",
        views:{
            "pay-main" : {
                templateUrl: "modules/business/payment/views/pre_payed_info.html",
                controller : "PrePayedInfoController"
            }
        }
    },
    //支付订单
    "payOrder" : {
        url: "/payOrder",
        views:{
            "main_view" : {
                templateUrl: "modules/business/payment/views/pay_order.html",
                controller : "PayOrderController"
            }
        }
    }
};
/**
 * Created by YANGMIAO on 2015/4/28.
 */
var QUEUE_ROUTER_TABLE = {

    /*切换效果默认全屏，如果想在tab内显示，请保持 url 为如下格式：
     'xxxx->MAIN_TAB'
     */
    //叫号查询queue
    "queue" : {
        url: "/queue",
        views: {
            "main_view": {
                templateUrl:
                    "modules/business/queue/index.html",
                controller :
                    "SelectDeptController"
            }
        }
    },
    "queue_dept_info->MAIN_TAB" : {
     url: "/queue_dept_info->MAIN_TAB",
     views: {
     "main_view": {
     templateUrl:
     "modules/business/queue/views/queue_dept_info.html",
     controller :
     "QueueDeptInfoController"
     }
     }
     },

    "queue_clinic":{
        url:"/queue_clinic",
        views:{
            "main_view":{
                templateUrl:"modules/business/queue/views/queue_clinic.html",
                controller:"QueueClinicController"
            }
        }
    },
    //叫号查询queue结束

};

var REBATE_ROUTER_TABLE = {
    "rebate" : {
        url: "/rebate",
        views: {
            "main_view": {
                templateUrl: "modules/business/rebate/index.html",
                controller : "RebateController"
            }
        }
    },
    "rebateDetail" : {
        url: "/rebateDetail",
        views: {
            "main_view": {
                templateUrl: "modules/business/rebate/views/rebate_detail.html",
                controller:"RebateDetailController"
            },
            "rebateSubview@rebateDetail":{
                templateUrl: "modules/business/rebate/views/rebate_detail_in.html",
                controller:"RebateDetailInController"
            }
        }
    },
    "rebateDetail.rebateDetailIn" : {
        url: "/rebateDetailIn",
        views: {
            "rebateSubview@rebateDetail": {
                templateUrl: "modules/business/rebate/views/rebate_detail_in.html",
                controller:"RebateDetailInController"
            }
        }
    },

    "rebateDetail.rebateDetailOut" : {
        url: "/rebateDetailOut",
        views: {
            "rebateSubview@rebateDetail": {
                templateUrl: "modules/business/rebate/views/rebate_detail_out.html",
                controller:"RebateDetailOutController"
            }
        }
    },
    "rebateBank":{
        url: "/rebateBank",
        cache:'false',
        views: {
            "main_view": {
                templateUrl: "modules/business/rebate/views/rebate_bank.html",
                controller:"RebateBankController"
            }
        }
    },
    "rebateBankAdd":{
        url: "/rebateBankAdd",
        views: {
            "main_view": {
                templateUrl: "modules/business/rebate/views/rebate_bank_add.html",
                controller:"RebateBankAddController"
            }
        }
    },
    "editBankCardMsg":{
        url: "/editBankCardMsg",
        views: {
            "main_view": {
                templateUrl: "modules/business/rebate/views/edit_bank_card_msg.html",
                controller:"EditBankCardMsgController"
            }
        }
    },

    "rebateBankBranch":{
        url: "/rebateBankBranch",
        views: {
            "main_view": {
                templateUrl: "modules/business/rebate/views/rebate_bank_branch.html",
                controller:"RebateBankBranchController"
            }
        }
    },

    "myCoupons":{
        url: "/myCoupons",
        views: {
            "main_view": {
                templateUrl: "modules/business/rebate/views/my_coupons.html",
                controller:"MyCouponsController"
            }
        }
    }
};
var REGIST_ROUTER_TABLE={
    "regist":{
        url:"/regist",
        views:{
            "main_view":{
                templateUrl:"modules/business/regist/index.html",
                controller:"RegistDeptSelectController"
            }

        }
    },
    "regist_doctorSchedule":{
        url:"/regist_doctorSchedule",
        views:{
            "main_view":{
                templateUrl:"modules/business/regist/views/regist_doctorSchedule.html",
                controller:"RegistDoctorScheduleController"
            }

        }
    },
    "regist_confirm":{
        url:"/regist_confirm",
        views:{
            "main_view":{
                templateUrl:"modules/business/regist/views/regist_confirm.html",
                controller:"RegistConfirmController"
            }

        }
    }

};


var REPORT_ROUTER_TABLE = {
    //报告单开始
    "report" : {
        url: "/report",
        views : {
            "main_view" : {
                templateUrl: "modules/business/report/index.html"
            }
        }
    },
    //报告单结束
    "medicaldetail" : {
        url: "/medicaldetail",
        views : {
            "main_view": {
                templateUrl: "modules/business/report/views/medical_detail.html",
                controller: "MedicalDetailController"
            }
        }
    }
};
var SATISFACTION_ROUTER_TABLE = {

    //满意度主页
    "satisfaction" : {
        url: "/satisfaction",
        views: {
            "main_view": {
                templateUrl: "modules/business/satisfaction/index.html",
                controller: "SatisfactionMainController"
            }
        }
    },
    //满意度选择评价页面
    "satisfaction_menu" : {
        url: "/satisfaction_menu",
        views: {
            "main_view": {
                templateUrl: "modules/business/satisfaction/views/satisfaction_menu.html",
                controller: "SatisfactionMenuController"
            },
            "satisfaction_menu_view@satisfaction_menu":{
                templateUrl: "modules/business/satisfaction/views/satisfaction_doctor.html",
                controller: "SatisfactionDoctorController"
            }
        }
    },
    //医生满意度
    "satisfaction_menu.satisfaction_doctor" : {
        url: "/satisfaction_doctor",
        views: {
            "satisfaction_menu_view": {
                templateUrl: "modules/business/satisfaction/views/satisfaction_doctor.html",
                controller: "SatisfactionDoctorController"
            }
        }
    },
    //医院满意度
    "satisfaction_menu.satisfaction_hospital" : {
        url: "/satisfaction_hospital",
        views: {
            "satisfaction_menu_view": {
                templateUrl: "modules/business/satisfaction/views/satisfaction_hospital.html",
                controller: "SatisfactionHospitalController"
            }
        }
    }
};
/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/5
 * 创建原因：排班路由
 * 修改者：
 * 修改原因：
 *
 */
var SCHEDULE_ROUTER_TABLE={
    "schedule":{
        url:"/schedule",
        views:{
            "main_view":{
                templateUrl:"modules/business/schedule/index.html",
                controller:"ScheduleDeptSelectController"
            }

        }
    }
    //"appoint_schedule":{
    //    url:"/schedule",
    //    views : {
    //        "main_view":{
    //            templateUrl:"modules/business/appoint/views/doctor_schedule.html",
    //            controller:"AppointDoctorScheduleController"
    //        },
    //        "appoint_doctor_schedule@appoint_schedule":{
    //            templateUrl:"modules/business/appoint/views/doctor_schedule_bydoctor.html"
    //        }
    //    }
    //},
    //"appoint_schedulebytime":{
    //    url:"/schedulebytime",
    //    views : {
    //        "appoint_doctor_schedule@appoint_schedule":{
    //            templateUrl:"modules/business/appoint/views/doctor_schedule_bytime.html",
    //            controller:"AppointDoctorScheduleController"
    //        }
    //    }
    //},
    //"appoint_schedulebydoctor":{
    //    url:"/schedulebydoctor",
    //    views : {
    //        "appoint_doctor_schedule@appoint_schedule":{
    //            templateUrl:"modules/business/appoint/views/doctor_schedule_bydoctor.html",
    //            controller:"AppointDoctorScheduleController"
    //        }
    //    }
    //}

};

var TRIAGE_ROUTER_TABLE = {
    //自我诊断
    "triage" : {
        url: "/triage",
        views:{
            "main_view" : {
                templateUrl: "modules/business/triage/index.html",
                controller : "TriageMainController"
            },
            "triage-main@triage":{
                templateUrl: "modules/business/triage/views/triage_pic.html",
                controller : "TriagePicController"
            }
        }
    },
    //图片导诊
    "triage.triageMain" : {
        url: "/triageMain",
        views:{
            "triage-main" : {
                templateUrl: "modules/business/triage/views/triage_pic.html",
                controller : "TriagePicController"
            }
        }
    },
    //列表导诊
    "triage.triageList" : {
        url: "/triageList",
        views:{
            "triage-main" : {
                templateUrl: "modules/business/triage/views/triage_list.html",
                controller : "TriageListController"
            }
        }
    },
    //症状列表
    "symptomList" : {
        url: "/symptomList",
        views:{
            "main_view" : {
                templateUrl: "modules/business/triage/views/symptom_list.html",
                controller : "SymptomListController"
            }
        }
    },
    //自测结果
    "DiagnosticResult" : {
        url: "/DiagnosticResult",
        views:{
            "main_view" : {
                templateUrl: "modules/business/triage/views/diagnostic_result.html",
                controller : "DiagnosticResultController"
            }
        }
    },
    //选择科室
    "triageSelectDept" : {
        url: "/triageSelectDept",
        views:{
            "main_view" : {
                templateUrl: "modules/business/triage/views/select_dept.html",
                controller : "TriageSelectDeptController"
            }
        }
    }
};
new KyeeModule()
	.group("kyee.quyiyuan.service_bus.cache")
	.require(["kyee.framework.service.utils.cache.base"])
	.type("service")
	.name("CacheServiceBus")
	.params(["KyeeCacheService"])
	.action(function(KyeeCacheService){

		return KyeeCacheService;
	})
	.build();
/**
 * 缓存全局变量
 *
 * @type {{MEMORY_CACHE: {CURRENT_USER: string, CURRENT_PWD: string, CURRENT_USER_RECORD: string, IS_LOGIN: string, CURRENT_GNQ_USER_TYPE: string}, GETSTORAGE_CACHE: {}}}
 */
var CACHE_CONSTANTS = {

    /**
     * 内存变量
     */
    MEMORY_CACHE : {
        CURRENT_USER : "currentUser",                           //当前登录用户名（手机号）
        CURRENT_PWD : "currentPwd",                             //当前登录密码（明文）
        CURRENT_USER_RECORD : "currentUserRecord",            //登录用户信息(json对象，包含许多具体信息)
        IS_LOGIN : "isLogin",                                   //是否登陆
        CURRENT_GNQ_USER_TYPE : "currentgnqUserType",         //登录用户类型
        CURRENT_HOSPITAL_ID : "currentHospitalId",            //当前医院id
        CURRENT_CUSTOM_PATIENT : "currentCustomPatient",     //当前就诊者
        CURRENT_CARD_INFO : "currentCardInfo",                 //当前卡信息
        PHONE_TYPE : "phoneType",                               //设备厂商
        VERSION_NUM : "versionNum",                             //版本号
        OPERATING_SYS : "operatingSys"                         //操作系统（“0”：android  “1”：ios）
    },

    /**
     * 缓存器变量
     */
    STORAGE_CACHE : {
        USER_VS_ID_BEFORE_1001 : "USER_VS_ID_BEFORE_1001",
        REMEMBER_PWD : "rememberPwd",    //记住密码
        AUTO_LOGIN : "autoLogin",        //自动登录
        USER : "user",                      //用户名
        PWD : "pwd",                          //密码
        CURRENT_USER_SOURCE : "currentUserSource",

        /**
         * 医院信息
         * 结构为：
         * {
         *  id : 医院id,
         *  name : 医院名称,
         *  address : 医院地址,
         *  advs : 医院广告,
         *  provinceCode ： 省份编码,
         *  provinceName : 省份名称,
         *  cityCode : 城市编码,
         *  cityName : 城市名称
         * }
         */
        HOSPITAL_INFO : "hospitalInfo",

        /**
         * 主页面信息
         * 结构为：
         * {
         *  rights : 主页面权限描述,
         *  sudokuData : 九宫格数据
         * }
         */
        HOME_DATA : "homeData",

        /**
         * 最后登录的城市信息
         * 结构为：
         * {
         *  CITY_CODE : 城市编号，
         *  CITY_ID : 城市id,
         *  CITY_NAME : 城市名称,
         *  PROVINCE_CODE : 省份编号,
         *  PROVINCE_ID ： 省份id,
         *  PROVINCE_NAME : 省份名称
         * }
         */
        LAST_CITY_INFO : "lastCityInfo"
    }
};
new KyeeModule()
	.group("kyee.quyiyuan.service_bus.http")
	.require(["kyee.framework.service.messager"])
	.type("service")
	.name("HttpServiceBus")
	.params(["KyeeMessagerService"])
	.action(function(KyeeMessagerService){
		
		var def = {

			//默认加载提示文字
			DEFAULT_LOADING_TEXT : "正在加载，请稍后...",

			/**
			 * 连接服务器
			 *
			 * @param cfg
			 */
			connect : function(cfg){

				var me = this;

				//初始化请求参数
				var params = {};
				if(AppConfig.SERVICE_BUS.http.default_params != undefined){
					for(var name in AppConfig.SERVICE_BUS.http.default_params)	{
						params[name] = AppConfig.SERVICE_BUS.http.default_params[name];
					}
				}
				if(cfg.params != undefined){
					for(var name in cfg.params){
						params[name] = cfg.params[name];
					}
				}

				KyeeMessagerService.send({
					//默认使用 GET 请求
					type : cfg.type == undefined ? "GET" : cfg.type,
					url : AppConfig.SERVER_URL + cfg.url,
					cache : cfg.cache, //无需判断 undefined 情况
					showLoading : cfg.showLoading == undefined ? true : cfg.showLoading,
					loadingText : cfg.loadingText == undefined ? me.DEFAULT_LOADING_TEXT : cfg.loadingText,
					autoHideLoading : cfg.autoHideLoading == undefined ? true : cfg.autoHideLoading,
					params : params,
					responseType : "json",
					onSuccess : function(resp){

						if(cfg.onSuccess != undefined){
							cfg.onSuccess(resp);
						}
					},
					onError : function(){

						if(cfg.onError != undefined){
							cfg.onError();
						}
					}
				});
			}
		};
		
		return def;
	})
	.build();
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/30
 * 时间: 15:45
 * 创建原因：帮助页面的数据
 * 修改原因：
 * 修改时间：
 */

var helpUrl = AppConfig.SERVER_URL + "help/";
var problemItems = [
    {
        name:"如何绑定就诊卡?",
        url: helpUrl + "bkyd.html"
    },{
        name:"更多问题",
        url: helpUrl + "cjwt.html"
    }
];
var functionItems = [
    {
        name:"个人中心",
        url: helpUrl + "grzx.html"
    },{
        name:"我的趣医",
        url: helpUrl + "wdqy.html"
    },{
        name:"预约挂号",
        url: helpUrl + "wyyy.html"
    },{
        name:"当日挂号",
        url: helpUrl + "wygh.html"
    },{
        name:"我的账单",
        url: helpUrl + "wdzd.html"
    },{
        name:"我的报告单",
        url: helpUrl + "wdbgd.html"
    },{
        name:"我的排队",
        url: helpUrl + "wdpd.html"
    },{
        name:"更多",
        url: helpUrl + "gd.html"
    }
];
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/30
 * 时间: 13:12
 * 创建原因：关于趣医页面的controller
 * 修改原因：
 * 修改时间：
 */
new KyeeModule()
    .group("kyee.quyiyuan.aboutquyi.controller")
    .require(["kyee.framework.service.versioncheck",
            "kyee.framework.service.message",
            "kyee.framework.service.view",
            "kyee.framework.service.share",
            "kyee.framework.device.deviceinfo",
            "kyee.framework.device.phone",
            "kyee.quyiyuan.service_bus.cache",
            "kyee.quyiyuan.aboutquyi.help.controller",
            "kyee.quyiyuan.aboutquyi.feedback.controller",
            "kyee.quyiyuan.aboutquyi.weburl.controller",
            "kyee.quyiyuan.aboutquyi.service",
            "kyee.quyiyuan.login.service"
            ])
    .type("controller")
    .name("AboutQuyiController")
    .params(["$scope","$state", "$timeout","$window",
        "KyeeVersionCheckService","KyeeMessageService",
        "KyeeViewService", "LoginService",
        "KyeeShareService", "HttpServiceBus",
        "KyeeDeviceInfoService", "CacheServiceBus",
        "KyeePhoneService", "AboutQuyiService"])
    .action(function($scope,$state,$timeout,$window,
                     KyeeVersionCheckService, KyeeMessageService,
                     KyeeViewService, LoginService,
                     KyeeShareService, HttpServiceBus,
                     KyeeDeviceInfoService, CacheServiceBus,
                     KyeePhoneService,AboutQuyiService){

        $scope.version = "当前版本号" + AppConfig.VERSION;

        //初始进入页面时，不显示新版本标示
        $scope.newFlagClass = ["new_flag_hide"];

        //是否显示分享界面，初次进入关于趣医界面时，不显示
        $scope.share_container_class = ["share_container_hide"];

        //默认认为是Android 平台的分享
        $scope.platform = "Android";

        $scope.officalUrl = "http://www.quyiyuan.com/";

        //调用检查新版本的服务，如果有新版本，显示新版本标示
        $timeout(function(){

            console.log("start version check now");

            KyeeVersionCheckService.getShellVersionState(function(state) {

                console.log("receive new version state:" + state);

                if (state === 1) {

                    $scope.newFlagClass = ["new_flag_show"];
                }
            }, function(){});
        }, 100);

        //检查新版本
        $scope.checkNewVersion = function() {

            KyeeVersionCheckService.checkVersionOnly();
        };

        //进入帮助页面
        $scope.enterHelpPage = function() {

            $state.go("aboutquyi_help");
        };
        //进入意见反馈页面
        $scope.enterFeedbackPage = function() {

            //var user = LoginService.userInfo.user;
            var cache = CacheServiceBus.getMemoryCache();
            var isLogin = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN);

            if (!isLogin) {

                KyeeMessageService.confirm({
                    title: "温馨提示",
                    content: "您还没登录，是否先登录？",
                    onSelect:function(isGoLogin){

                        if(isGoLogin) {

                            KyeeViewService.openModalFromUrl({
                                id : "",
                                url : "modules/business/login/index.html",
                                scope : $scope
                            });
                            //记录从关于趣医跳转到登录页面
                            LoginService.frontPage = "1";
                        }
                    }
                });
            }else {
                $state.go("aboutquyi_feedback");
            }
        };
        //点击分享按钮
        $scope.click2Share = function() {

            $scope.share_container_class = ["share_container_in"];

            KyeeDeviceInfoService.getInfo(function(info){

                $scope.platform = info.platform;
            },function(){});
        };

        $scope.cancelShare = function() {

            $scope.share_container_class = ["share_container_hide"];
        };

        $scope.share2weixin = function() {

            var params = new Array("version");
            KyeeShareService.share("wxshare", function(info){

                $scope.saveShareChannel("1");
                KyeeMessageService.message({
                    title : "系统提示",
                    content : "成功分享到朋友圈，感谢您对趣医院的帮助。",
                    okText : "知道了",
                    onOk : function(){}
                    });
            },
            function(errorCode) {

                // ERR_AUTH_DENIED -4 权限被拒绝
                // ERR_USER_CANCEL -2 用户取消

                var info = "分享失败";

                if (errorCode === -4) {

                    info = "权限被拒绝！";
                }else if (errorCode === -2) {
                    info = "分享取消！";
                }

                KyeeMessageService.message({
                    title : "系统提示",
                    content : info,
                    okText : "知道了",
                    onOk : function(){}
                });
            },params);

            $scope.cancelShare();
        };

        $scope.share2weibo = function() {

            KyeeShareService.share("weiboshare", function(info){

                    $scope.saveShareChannel("2");
                    KyeeMessageService.message({
                        title : "系统提示",
                        content : "成功分享到微博，感谢您对趣医院的帮助。",
                        okText : "知道了",
                        onOk : function(){}
                    });
                },
                function(info) {
                    KyeeMessageService.message({
                        title : "系统提示",
                        content : "分享失败",
                        okText : "知道了",
                        onOk : function(){}
                    });
                },[]);
            $scope.cancelShare();
        };

        $scope.share2qq = function() {

            KyeeShareService.share("qqshare", function(info){

                    $scope.saveShareChannel("3");
                    KyeeMessageService.message({
                        title : "系统提示",
                        content : "成功分享到QQ空间，感谢您对趣医院的帮助。",
                        okText : "知道了",
                        onOk : function(){}
                    });
                },
                function(info) {
                    KyeeMessageService.message({
                        title : "系统提示",
                        content : "分享失败",
                        okText : "知道了",
                        onOk : function(){}
                    });
                },[]);
            $scope.cancelShare();
        };

        //用户分享趣医网信息成功后，将分享渠道上传到服务器
        $scope.saveShareChannel = function(channel) {

            var userId = "0";

            var userData = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);

            if (!userData) {

                userId = userData.userId;
            }

            //0代表Android平台 1 代表IOS平台
            var platformCode = 0;

            if ($scope.platform === "iOS") {

                platformCode = 1;
            }

            HttpServiceBus.connect({
                url : "/share/action/ShareAction.jspx",
                params : {
                    loc : "c",
                    op : "saveShareHistory",
                    USER_ID:userId,
                    SHARE_TYPE:channel,
                    PHONE_STYLE:platformCode
                },
                onSuccess : function(msg){
                    console.log("分享渠道上传成功");
                },
                onError:function(msg){
                    console.log("分享渠道上传失败");
                }
            });
        };

        $scope.click2call = function() {

            KyeePhoneService.callOnly("4000801010");
        };

        $scope.click2openNet = function() {

            AboutQuyiService.webUrl = "http://www.quyiyuan.com/";

            $state.go("aboutquyi_webview");
        };
    })
    .build();
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/30
 * 时间: 17:42
 * 创建原因：
 * 修改原因：
 * 修改时间：
 */
new KyeeModule()
    .group("kyee.quyiyuan.aboutquyi.feedback.controller")
    .require([])
    .type("controller")
    .name("FeedbackController")
    .params(["$scope","$state"])
    .action(function($scope,$state){


    })
    .build();
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/30
 * 时间: 14:46
 * 创建原因：关于趣医 - 帮助页面的控制器
 * 修改原因：
 * 修改时间：
 */
new KyeeModule()
    .group("kyee.quyiyuan.aboutquyi.help.controller")
    .require(["kyee.quyiyuan.aboutquyi.service"])
    .type("controller")
    .name("HelpController")
    .params(["$scope","$state","AboutQuyiService"])
    .action(function($scope,$state, AboutQuyiService){

        $scope.problemData = AboutQuyiService.getProblemItems();
        $scope.functionData = AboutQuyiService.getFunctionItems();

        $scope.openUrl = function(url) {

            AboutQuyiService.webUrl = url;
            $state.go("aboutquyi_webview");
        };
    })
    .build();
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/5/6
 * 时间: 11:06
 * 创建原因：
 * 修改原因：
 * 修改时间：
 */
new KyeeModule()
    .group("kyee.quyiyuan.aboutquyi.weburl.controller")
    .require(["kyee.quyiyuan.aboutquyi.service"])
    .type("controller")
    .name("WebUrlController")
    .params(["$scope", "$sce", "AboutQuyiService"])
    .action(function($scope, $sce, AboutQuyiService){

        var url = AboutQuyiService.webUrl;

        $scope.openUrl = $sce.trustAsResourceUrl(url);
    })
    .build();
/**
 * 产品名称 KYMH
 * 创建用户: 李文娟
 * 日期: 2015/4/30
 * 时间: 13:18
 * 创建原因：
 * 修改原因：
 * 修改时间：
 */
new KyeeModule()
    .group("kyee.quyiyuan.aboutquyi.service")
    .require([])
    .type("service")
    .name("AboutQuyiService")
    .params([])
    .action(function(){

        var def = {

            webUrl:"http://www.quyiyuan.com/",
            getProblemItems : function() {

                console.log("problems:" + problemItems[0].name);
                return problemItems;
            },
            getFunctionItems : function() {

                return functionItems;
            }
        };

        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/5
 * 创建原因：确认预约控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.appointConfirm.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.appoint.appoint_appointConfirm.service","kyee.quyiyuan.appoint.doctor_schedule.service","kyee.quyiyuan.appoint.service"])
    .type("controller")
    .name("AppointConfirmController")
    .params(["$scope","$state", "KyeeViewService","AppointConfirmService","AppointDoctorScheduleService","AppointDeptSelectService","CacheServiceBus"])
    .action(function($scope,$state,KyeeViewService,AppointConfirmService,AppointDoctorScheduleService,AppointDeptSelectService,CacheServiceBus){
        var hospitalinfo= CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
        var hospitalId=1001;
        if(!hospitalinfo){
            hospitalId=hospitalinfo.id;
        }
        AppointConfirmService.queryClientinfo(hospitalId, function(Clientinfo){
            $scope.Clientinfo=Clientinfo;
            console.log(Clientinfo)
        });
        //获取排班页面用户点击预约时的排班数据
        $scope.AppointconfrimSchedule=AppointConfirmService.SceduleListData;
        //获取排版页面用户点击预约时的医生信息
        $scope.Appointconfrimdoctor=AppointConfirmService.doctor;
        //获取当前选择的科室
        $scope.deptData=AppointDeptSelectService.deptData;
        //如果用户选择号源时，获取用户选择的号源
       $scope.ClinicSource=AppointConfirmService.ClinicSource;
        //若是用户选择的号源，则将用户选择的号源重新放入午别字段
        if($scope.ClinicSource !=null && $scope.ClinicSource!="" && $scope.ClinicSource !=undefined){
            $scope.CLINIC_DURATION=$scope.ClinicSource.text;//xxx
        } else{
            $scope.CLINIC_DURATION=$scope.AppointconfrimSchedule.CLINIC_DURATION;
        }
        //绑定选择事件
        $scope.bind = function(params){
            console.log(params);
            $scope.showPicker = params.show;
        };
        //选择卡号
        $scope.selectItem = function(params){
            //将选中的卡号显示到页面上

        };
        //点击选择就诊卡
        $scope.showpatientCardNo=function(){
           var cardNolist= $scope.Clientinfo.rows;
            var menus=[];
            for(var i=0;i<cardNolist.length;i++){
                var resultMap={};
                resultMap["text"]=cardNolist[i].CARD_NO;
                resultMap["value"]=cardNolist[i].PATIENT_ID;
                menus.push(resultMap);
            }
            //控制器中绑定数据：
            $scope.pickerItems=menus;
            $scope.title="请选择就诊卡";
            //调用显示
            $scope.showPicker();
        };
        //点击确认预约
        $scope.appointConfirm=function(){
        //    $state.go("regist_doctorSchedule");

        };

    })
    .build();



/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/4/29
 * 创建原因：预约获取科室控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.appoint.service","kyee.quyiyuan.appoint.doctor_schedule.controller","kyee.quyiyuan.appoint.doctor_schedulecalendar.controller","kyee.quyiyuan.appoint.doctor_schedulebytime.controller"])
    .type("controller")
    .name("AppointDeptSelectController")
    .params(["$scope","$state", "KyeeViewService","AppointDeptSelectService","CacheServiceBus"])
    .action(function($scope,$state,KyeeViewService,AppointDeptSelectService,CacheServiceBus){
       var hospitalinfo= CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
        var hospitalId=1001;
        if(!hospitalinfo){
            hospitalId=hospitalinfo.id;
        }
        var data=AppointDeptSelectService.queryDept(hospitalId, function(resultData){
            $scope.LETTERS=resultData.letters;
            $scope.DEPT_DATA=resultData.resultMap;
            console.log($scope.LETTERS);
            console.log($scope.DEPT_DATA);
        });
        //点击某一科室后跳转到排班界面
        $scope.showDoctorSchedule=function(deptData){
            //将点击的某一科室对象放入科室服务中
            AppointDeptSelectService.deptData=deptData;
            $state.go("appoint_schedule");
        };
        //判断是否显示网络科室图标
        $scope.showNetDept=function(onLineDept){
            if(onLineDept!=null && onLineDept !=undefined){
                if(onLineDept==1){
                    return true;
                }else{
                    return false;
                }
            }else{
                return false;
            }
        };
        //搜索科室的keyup事件
        $scope.searchDept=function(){
            var keywords = top.hospitalKeywords;
            var result = [];
            if((keywords + "").length > 0){
                $scope.LETTERS=resultData.letters;
                $scope.DEPT_DATA=resultData.resultMap;
                for(var i in allHospitalList){

                    var record = allHospitalList[i];
                    var name = record.HOSPITAL_NAME;

                    if(name.indexOf(keywords) != -1){
                        result.push(record);
                    }
                }
            }

            $scope.hospitalSearchResult = result;
        };
        //点击自我诊断-跳转到智能导诊页面
        $scope.goTriage=function(){
            $state.go("triage");
        };
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/6
 * 创建原因：按时间查看医生排班控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.doctor_schedulebytime.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.appoint.service","kyee.framework.service.message","kyee.quyiyuan.appoint.appointConfirm.controller","kyee.quyiyuan.appoint.doctor_schedulebytime.service","kyee.quyiyuan.appoint.appoint_appointConfirm.service","kyee.quyiyuan.appoint.doctor_schedule.service"])
    .type("controller")
    .name("AppointDoctorSchedulebyTimeController")
    .params(["$scope","$state","AppointDeptSelectService","KyeeMessageService","AppointDoctorSchedulebyTimeService","AppointConfirmService","AppointDoctorScheduleService"])
    .action(function($scope,$state,AppointDeptSelectService,KyeeMessageService,AppointDoctorSchedulebyTimeService,AppointConfirmService,AppointDoctorScheduleService){
        //日期格式化
        Date.prototype.format = function(format){
            var o = {
                "M+" : this.getMonth()+1, //month
                "d+" : this.getDate(), //day
                "h+" : this.getHours(), //hour
                "m+" : this.getMinutes(), //minute
                "s+" : this.getSeconds(), //second
                "q+" : Math.floor((this.getMonth()+3)/3), //quarter
                "S" : this.getMilliseconds() //millisecond
            };
            if(/(y+)/.test(format)) {
                format = format.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            }

            for(var k in o) {
                if(new RegExp("("+ k +")").test(format)) {
                    format = format.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
                }
            }
            return format;
        };
        //获取科室服务中用户已选的科室对象
        $scope.deptData=AppointDeptSelectService.deptData;
        //初始化日期：默认当天
            var nowDate=new Date();
        $scope.clinicDate=nowDate.format("yyyy/MM/dd");
        //对日期增加，减少
        $scope.chageclinicDate=function(AddDayCount){
            var dd=new Date($scope.clinicDate);
                dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期
            var yearString=null;
            var monthString=null;
            var dayString=null;
            yearString = dd.getFullYear();
            //如果月份长度少于2，则前加 0 补位
            if ((dd.getMonth() + 1).toString().length == 1) {
                monthString = 0 + "" + (dd.getMonth() + 1).toString();
            } else {
                monthString = (dd.getMonth() + 1).toString();
            }
            //如果天数长度少于2，则前加 0 补位
            if (dd.getDate().toString().length == 1) {
                dayString = 0 + "" + dd.getDate().toString();
            } else {
                dayString = dd.getDate().toString();
            }
            $scope.clinicDate=yearString+"/"+monthString+"/"+dayString;
            detialdatabyDoctor();
        };
        //跳转到日历选择页面
        $scope.showCalendar=function(){
            $state.go("appoint_schedulecalendar");
        };
        //根据用户选择的时间，将数据按医生分组
        var detialdatabyDoctor=function(){
            var doctorSchedule= $scope.timeSchedule[$scope.clinicDate];
            doctorMap={};
            if(!doctorSchedule){
                //TODO 暂无数据
            }else{
                for(var i=0;i<doctorSchedule.length;i++){
                    var doctorCode=doctorSchedule[i].DOCTOR_CODE;
                    if (!doctorMap[doctorCode]) {
                        doctorMap[doctorCode] = [doctorSchedule[i]];
                    } else {
                        doctorMap[doctorCode].push(doctorSchedule[i]);
                    }
                }
            }
            $scope.doctorSchedulebyTime=doctorMap;
            console.log(doctorMap);
        };
        var params={"hospitalId":1001,"deptCode":$scope.deptData.DEPT_CODE};
        AppointDoctorSchedulebyTimeService.queryAppointSchedulebyTime(params, function(result){
            //预约排班所有数据
            $scope.timeSchedule =result.timeMap;
            //将日期排班放入当前服务
            AppointDoctorSchedulebyTimeService.time=result.time;
            detialdatabyDoctor();
            console.log( $scope.timeSchedule);
        });


        //医生类别：专家，普通
        $scope.showDoctorType=function(clinicType){
            //clinicType：1：专家，0：普通
            if(clinicType==1){
                return "resource/images/appoint/doctortpye1.png";
            }else{
                return "resource/images/appoint/doctortpye2.png";
            }
        };
        //医生号源的判断
        $scope.showDoctorSource=function(AmisTime,PmisTime){
            //isTime:0:无号源，1：有，2：医生下班
            if(AmisTime==1 && PmisTime==1){
                return "resource/images/appoint/doctor_exist.png";
            }else{
                return"resource/images/appoint/doctor_notexist.png";
            }
        };
        //单个医生上午是否有排班
        $scope.showAmIsTimeregist=function(scheduleList){
            if(scheduleList !=null && scheduleList !=undefined){
                if((scheduleList[0].ISTIME==1 && scheduleList[0].CLINIC_DURATION=="上午")||(scheduleList[1].ISTIME==1 && scheduleList[1].CLINIC_DURATION=="上午")){
                    return true;
                }
                else{
                    return false;
                }
            }
        };
        //单个医生上午是否有排班
        $scope.showPmIsTimeregist=function(scheduleList){
            if(scheduleList !=null && scheduleList !=undefined){
                if((scheduleList[0].ISTIME==1 && scheduleList[0].CLINIC_DURATION=="下午")||(scheduleList[1].ISTIME==1 && scheduleList[1].CLINIC_DURATION=="下午")){
                    return true;
                }
                else{
                    return false;
                }
            }
        };

        //绑定选择事件
        $scope.bind = function(params){
            console.log(params);
            $scope.showPicker = params.show;
        };
        //选择号源
        $scope.selectItem = function(params){
            //将选中的号源注入到当前服务
            AppointConfirmService.ClinicSource=params.item;
            $state.go("appoint_confirm");
        };
        //点击上下午预约时
        $scope.confirmappoint=function(schedulelist,clinicDuartion){
            AppointConfirmService.doctor=schedulelist[0];
            var clinicDuration=null;//获取用户点击的午别
            var clinicDate=null;//获取用户预约日期
            var doctorScheduleList=null;//
            for(var i=0;i<schedulelist.length;i++){
                if(schedulelist[i].CLINIC_DURATION==clinicDuartion){
                    clinicDate= schedulelist[i].CLINIC_DATE;
                    clinicDuration= schedulelist[i].CLINIC_DURATION;
                    doctorScheduleList=schedulelist[i];
                }
            }
            AppointConfirmService.SceduleListData=doctorScheduleList;
            //获取缓存中的当前就诊者信息
            var currentPatient= CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
            //从全局里获取hospitalid
            var hospitalinfo= CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=1001;
            if(!hospitalinfo){
                hospitalId=hospitalinfo.id;
            }
            var params= {
                "hospitalId":hospitalId,
                "deptCode":$scope.deptData.DEPT_CODE,
                "doctorCode":schedulelist[0].DOCTOR_CODE,
                "hbTime":clinicDuration,//---参数传入错误
                "clinicDate":clinicDate,
                "patientId":currentPatient.PATIENT_ID,
                "userVsId":currentPatient.USER_VS_ID
            };
            AppointDoctorScheduleService.queryAppointSource(params, function(ClinicDetail){
                if(ClinicDetail.rows.length>1){
                    var menus=[];
                    for(var i=0;i<ClinicDetail.rows.length;i++){
                        var resultMap={};
                        resultMap["text"]=ClinicDetail.rows[i].HB_TIME;
                        resultMap["value"]=ClinicDetail.rows[i].HID;
                        menus.push(resultMap);
                    }
                    //控制器中绑定数据：
                    $scope.pickerItems=menus;
                    $scope.title=clinicDate;
                    //调用显示
                    $scope.showPicker();
                }else{
                    $state.go("appoint_confirm");

                }
            });
        }

    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/9
 * 创建原因：预约按时间日历组件控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.doctor_schedulecalendar.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.appoint.service","kyee.framework.service.message","kyee.quyiyuan.appoint.appointConfirm.controller","kyee.quyiyuan.appoint.doctor_schedulebytime.service","kyee.quyiyuan.appoint.appoint_appointConfirm.service","kyee.quyiyuan.appoint.doctor_schedule.service"])
    .type("controller")
    .name("AppointDoctorScheduleCalendarController")
    .params(["$scope","$state","AppointDeptSelectService","KyeeMessageService","AppointDoctorSchedulebyTimeService","AppointConfirmService","AppointDoctorScheduleService"])
    .action(function($scope,$state,AppointDeptSelectService,KyeeMessageService,AppointDoctorSchedulebyTimeService,AppointConfirmService,AppointDoctorScheduleService){

        //日期格式化
        Date.prototype.format = function(format){
            var o = {
                "M+" : this.getMonth()+1, //month
                "d+" : this.getDate(), //day
                "h+" : this.getHours(), //hour
                "m+" : this.getMinutes(), //minute
                "s+" : this.getSeconds(), //second
                "q+" : Math.floor((this.getMonth()+3)/3), //quarter
                "S" : this.getMilliseconds() //millisecond
            };
            if(/(y+)/.test(format)) {
                format = format.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            }

            for(var k in o) {
                if(new RegExp("("+ k +")").test(format)) {
                    format = format.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
                }
            }
            return format;
        };

        //选择
        $scope.itemClick = function(params){
            console.log(params);
            //将选中的号源注入到当前服务
            AppointDoctorSchedulebyTimeService.clickDate=params;
            $state.go("appoint_schedulebytime");
        };
        //初始化日期：默认当天
        var nowDate=new Date();
        $scope.DateMoth=nowDate.format("yyyy/MM");
        $scope.changeDateMonth=function(AddMonthCount){
            if(AddMonthCount==-1){
                $scope.prevMonth();
            }else{
                $scope.nextMonth();
            }
            var dd=new Date($scope.DateMoth);
            dd.setMonth(dd.getMonth()+AddMonthCount);//获取AddMonthCount月后的日期
            var yearString=null;
            var monthString=null;
            yearString = dd.getFullYear();
            //如果月份长度少于2，则前加 0 补位
            if ((dd.getMonth() + 1).toString().length == 1) {
                monthString = 0 + "" + (dd.getMonth() + 1).toString();
            } else {
                monthString = (dd.getMonth() + 1).toString();
            }
            $scope.DateMoth=yearString+"/"+monthString;
            //给日历组件赋值
            $scope.yearmonth({
                year:yearString,
                month:monthString
            });
        };
        //获取科室服务中用户已选的科室对象
        $scope.deptData=AppointDeptSelectService.deptData;
        //绑定选择事件
        $scope.bind = function(params){
            console.log(params);
            $scope.nextMonth = params.nextMonth;
            $scope.prevMonth = params.prevMonth;
         //   $scope.yearmonth=params.getYearAndMonth;
            $scope.yearmonth=params.setYearAndMonth;
        };

        //标记有排班的日期
        $scope.mark={};
        for(var i in AppointDoctorSchedulebyTimeService.time){
            AppointDoctorSchedulebyTimeService.time[i]=new Date(AppointDoctorSchedulebyTimeService.time[i]).format("yyyy/MM/dd");
            $scope.mark[AppointDoctorSchedulebyTimeService.time[i]] = "appoint-calendar-check";
        }
    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/4/29
 * 创建原因：预约根据科室编码获取医生排班控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.doctor_schedule.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.appoint.service","kyee.quyiyuan.appoint.doctor_schedule.service","kyee.framework.service.message","kyee.quyiyuan.appoint.appointConfirm.controller","kyee.quyiyuan.interaction.doctorPersonalPage.service","kyee.quyiyuan.appoint.appoint_appointConfirm.service"])
    .type("controller")
    .name("AppointDoctorScheduleController")
    .params(["$scope","$state","AppointDoctorScheduleService","AppointDeptSelectService","KyeeMessageService","DoctorPersonalPageService","CacheServiceBus","AppointConfirmService"])
    .action(function($scope,$state,AppointDoctorScheduleService,AppointDeptSelectService,KyeeMessageService,DoctorPersonalPageService,CacheServiceBus,AppointConfirmService){
      //初始化默认医生类别：0：全部 1：专家 2：普通
        $scope.doctorType=0;
        //日期格式化
        Date.prototype.format = function(format){
            var o = {
                "M+" : this.getMonth()+1, //month
                "d+" : this.getDate(), //day
                "h+" : this.getHours(), //hour
                "m+" : this.getMinutes(), //minute
                "s+" : this.getSeconds(), //second
                "q+" : Math.floor((this.getMonth()+3)/3), //quarter
                "S" : this.getMilliseconds() //millisecond
            };
            if(/(y+)/.test(format)) {
                format = format.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            }

            for(var k in o) {
                if(new RegExp("("+ k +")").test(format)) {
                    format = format.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
                }
            }
            return format;
        };
        //获取科室服务中用户已选的科室对象
        $scope.deptData=AppointDeptSelectService.deptData;
        //从全局里获取hospitalid
        var hospitalinfo= CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
        var hospitalId=1001;
        if(!hospitalinfo){
            hospitalId=hospitalinfo.id;
        }
        var params={"hospitalId":hospitalId,"deptCode":$scope.deptData.DEPT_CODE};
        AppointDoctorScheduleService.queryAppointSchedule(params, function(result,doctorScheduleTable){
            //预约排班所有数据
            $scope.doctorSchedule=doctorScheduleTable;
            //将后台返回的数据绑定到当前服务中
            AppointDoctorScheduleService.doctorScheduleTable=doctorScheduleTable;
            //排班中对应日期的数据
            $scope.scheduleDay=result.scheduleday;
            ////排班中星期几的数据
            $scope.scheduleWeek=result.scheduleWeek;
            //多个医生的号源
            $scope.arrisschudleTime=result.arrisschudleTime;
            ////上午排班日期
            $scope.schduleAmDate=result.arrschduleAmDate;
            ////下午排班日期
            $scope.schdulePmDate=result.arrschdulePmDate;
        });
        //医生类别：专家，普通
        $scope.showDoctorType=function(clinicType){
            //clinicType：1：专家，0：普通
            if(clinicType==1){
                return "resource/images/appoint/doctortpye1.png";
            }else{
                return "resource/images/appoint/doctortpye2.png";
            }
        };
        //医生号源的判断
        $scope.showDoctorSource=function(doctorSource){
            if(doctorSource=="有"){
                return "resource/images/appoint/doctor_exist.png";
            }else{
                return"resource/images/appoint/doctor_notexist.png";
            }
        };
        //医生类别过滤 1:专家  2：普通 0：全部
        $scope.showdoctor=function(flag){
            $scope.doctorType=flag;
            //setTimeout(function(){
                var resultTypeSchedule=[];
                var doctorScheduleLis=  AppointDoctorScheduleService.doctorScheduleTable;
                if(!doctorScheduleLis){
                    //TODO 暂无数据
                }
                if(flag==1){
                    for(var i=0;i<doctorScheduleLis.length;i++){
                        if(doctorScheduleLis[i].DOCTOR_CLINIC_TYPE=='1'){
                            resultTypeSchedule.push(doctorScheduleLis[i]);
                        }
                    }
                }else if(flag==2){
                    for(var i=0;i<doctorScheduleLis.length;i++){
                        if(doctorScheduleLis[i].DOCTOR_CLINIC_TYPE=='0'||doctorScheduleLis[i].DOCTOR_CLINIC_TYPE==''||doctorScheduleLis[i].DOCTOR_CLINIC_TYPE==undefined){
                            resultTypeSchedule.push(doctorScheduleLis[i]);
                        }
                    }
                }else {
                    resultTypeSchedule=doctorScheduleLis;
                }
                $scope.doctorSchedule=resultTypeSchedule;
            //}, 1500);
        };
        //星期的样式显示
        $scope.showweekcolor=function(scheduleWeek){
            if( scheduleWeek=="六"||scheduleWeek=="日"){
                return true;
            }else{
                return false;
            }
        };
        //日期的样式显示
        $scope.showdatecolor=function(scheduleDate,schduleAmDate,schdulePmDate){
            var res=schduleAmDate.indexOf(scheduleDate);
            var arr=schdulePmDate.indexOf(scheduleDate);
            if( res!=-1|| arr!=-1 ){
                return false;
            }else{
                return true;
            }
        };
        //根据排班日期判断医生上午的排班显示
        $scope.showschdule=function(schduleAmDate,day,scheduleListdor,flag){
            // result 0:无排班数据，1：有排班可预约，2：有排班数据不可预约（如医生下班）
            var result=0;
            if(flag=="上午"){
                var isTimeDay=null;
                for(var i=0;i<scheduleListdor.length;i++){
                    var clinicDate =new Date(scheduleListdor[i].CLINIC_DATE).format("yyyy/MM/dd");
                    var clinicd = new Date(clinicDate).getDate();
                    if(clinicd==day && scheduleListdor[i].CLINIC_DURATION=="上午"){
                        var isTimeDay= scheduleListdor[i].ISTIME;
                    }
                }
                var result=schduleAmDate.indexOf(day);
                if(result !=-1 && isTimeDay==1){
                    result=1;
                    return result;
                }else if(result !=-1 && isTimeDay!=1){
                    result=2;
                    return result;
                }
                else{
                    return  result;
                }
            }else{
                var isTimeDay=null;
                for(var i=0;i<scheduleListdor.length;i++){
                    var clinicDate =new Date(scheduleListdor[i].CLINIC_DATE).format("yyyy/MM/dd");
                    var clinicd = new Date(clinicDate).getDate();
                    if(clinicd==day && scheduleListdor[i].CLINIC_DURATION=="下午"){
                        var isTimeDay= scheduleListdor[i].ISTIME;
                    }
                }
                var result=schduleAmDate.indexOf(day);
                if(result !=-1 && isTimeDay==1){
                    result=1;
                    return result;
                }else if(result !=-1 && isTimeDay!=1){
                    result=2;
                    return result;
                }
                else{
                    return  result;
                }
            }
        };

        //展开显示单个医生的排班
        var showScheduleIndex=0;
        $scope.showOneSchedule=function(index){
            if(showScheduleIndex==index){
                showScheduleIndex=index;
                return true;//显示排班
            }else{
                return false;//不显示排班
            }
        };
        //点击未来一周医生排班
       $scope.showDoctorSchedule=function(index){
           showScheduleIndex=index;
       };
        //点击更多，跳转到医生详情中的更多排班
        $scope.showMoreDOctorSchedule=function(doctor){
            DoctorPersonalPageService.paramData=doctor;
            DoctorPersonalPageService.deptData =$scope.deptData;
            $state.go("doctorPersonalPage");
        };

        //绑定选择事件
        $scope.bind = function(params){
            console.log(params);
            $scope.showPicker = params.show;
        };
        //选择号源
        $scope.selectItem = function(params){
            //将选中的号源注入到当前服务
            AppointConfirmService.ClinicSource=params.item;
            $state.go("appoint_confirm");
        };
        //点击上下午预约时
        $scope.confirmappoint=function(clinicDay,doctor,clinicDuartion){
            AppointConfirmService.doctor=doctor;
            var scheduleList= doctor.DOCTOR_SCHEDULE_LIST;
            var clinicDuration=null;//获取用户点击的午别
            var clinicDate=null;//获取用户预约日期
            var doctorScheduleList=null;//
            for(var i=0;i<scheduleList.length;i++){
                var clinicDate =new Date(scheduleList[i].CLINIC_DATE).format("yyyy/MM/dd");
                var clinicd = new Date(clinicDate).getDate();
                if(clinicd==clinicDay && scheduleList[i].CLINIC_DURATION==clinicDuartion){
                    clinicDate=scheduleList[i].CLINIC_DATE;
                    clinicDuration= scheduleList[i].CLINIC_DURATION;
                    doctorScheduleList=scheduleList[i];
                }
            }
            AppointConfirmService.SceduleListData=doctorScheduleList;
            //获取缓存中的当前就诊者信息
            var currentPatient= CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
            //从全局里获取hospitalid
            var hospitalinfo= CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=1001;
            if(!hospitalinfo){
                hospitalId=hospitalinfo.id;
            }
           var params= {
               "hospitalId":hospitalId,
               "deptCode":$scope.deptData.DEPT_CODE,
               "doctorCode":doctor.DOCTOR_CODE,
               "hbTime":clinicDuration,//---参数传入错误
               "clinicDate":clinicDate,
               "patientId":currentPatient.PATIENT_ID,
               "userVsId":currentPatient.USER_VS_ID
           };
            AppointDoctorScheduleService.queryAppointSource(params, function(ClinicDetail){
                if(ClinicDetail.rows.length>1){
                    var menus=[];
                    for(var i=0;i<ClinicDetail.rows.length;i++){
                        var resultMap={};
                        resultMap["text"]=ClinicDetail.rows[i].HB_TIME;
                        resultMap["value"]=ClinicDetail.rows[i].HID;
                        menus.push(resultMap);
                    }
                    //控制器中绑定数据：
                    $scope.pickerItems=menus;
                        $scope.title=clinicDate;
                    //调用显示
                    $scope.showPicker();
                }else{
                    $state.go("appoint_confirm");

                }
            });
        }

    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/6
 * 创建原因：根据日期计算阴历日期
 * 修改者：
 * 修改原因：
 *
 */
var CalendarData=new Array(100);
var madd=new Array(12);
var tgString="甲乙丙丁戊己庚辛壬癸";
var dzString="子丑寅卯辰巳午未申酉戌亥";
var numString="一二三四五六七八九十";
var monString="正二三四五六七八九十冬腊";
var weekString="日一二三四五六";
var sx="鼠牛虎兔龙蛇马羊猴鸡狗猪";
var cYear,cMonth,cDay,TheDate;
CalendarData = new Array(0xA4B,0x5164B,0x6A5,0x6D4,0x415B5,0x2B6,0x957,0x2092F,0x497,0x60C96,0xD4A,0xEA5,0x50DA9,0x5AD,0x2B6,0x3126E, 0x92E,0x7192D,0xC95,0xD4A,0x61B4A,0xB55,0x56A,0x4155B, 0x25D,0x92D,0x2192B,0xA95,0x71695,0x6CA,0xB55,0x50AB5,0x4DA,0xA5B,0x30A57,0x52B,0x8152A,0xE95,0x6AA,0x615AA,0xAB5,0x4B6,0x414AE,0xA57,0x526,0x31D26,0xD95,0x70B55,0x56A,0x96D,0x5095D,0x4AD,0xA4D,0x41A4D,0xD25,0x81AA5,0xB54,0xB6A,0x612DA,0x95B,0x49B,0x41497,0xA4B,0xA164B, 0x6A5,0x6D4,0x615B4,0xAB6,0x957,0x5092F,0x497,0x64B, 0x30D4A,0xEA5,0x80D65,0x5AC,0xAB6,0x5126D,0x92E,0xC96,0x41A95,0xD4A,0xDA5,0x20B55,0x56A,0x7155B,0x25D,0x92D,0x5192B,0xA95,0xB4A,0x416AA,0xAD5,0x90AB5,0x4BA,0xA5B, 0x60A57,0x52B,0xA93,0x40E95);
madd[0]=0;
madd[1]=31;
madd[2]=59;
madd[3]=90;
madd[4]=120;
madd[5]=151;
madd[6]=181;
madd[7]=212;
madd[8]=243;
madd[9]=273;
madd[10]=304;
madd[11]=334;

function GetBit(m,n){
    return (m>>n)&1;
}
function e2c(){
    TheDate= (arguments.length!=3) ? new Date() : new Date(arguments[0],arguments[1],arguments[2]);
    var total,m,n,k;
    var isEnd=false;
    var tmp=TheDate.getYear();
    if(tmp<1900){
        tmp+=1900;
    }
    total=(tmp-1921)*365+Math.floor((tmp-1921)/4)+madd[TheDate.getMonth()]+TheDate.getDate()-38;

    if(TheDate.getYear()%4==0&&TheDate.getMonth()>1) {
        total++;
    }
    for(m=0;;m++){
        k=(CalendarData[m]<0xfff)?11:12;
        for(n=k;n>=0;n--){
            if(total<=29+GetBit(CalendarData[m],n)){
                isEnd=true; break;
            }
            total=total-29-GetBit(CalendarData[m],n);
        }
        if(isEnd) break;
    }
    cYear=1921 + m;
    cMonth=k-n+1;
    cDay=total;
    if(k==12){
        if(cMonth==Math.floor(CalendarData[m]/0x10000)+1){
            cMonth=1-cMonth;
        }
        if(cMonth>Math.floor(CalendarData[m]/0x10000)+1){
            cMonth--;
        }
    }
}

function GetcDateString(){
    var tmp="";
    tmp+=tgString.charAt((cYear-4)%10);
    tmp+=dzString.charAt((cYear-4)%12);
    tmp+="(";
    tmp+=sx.charAt((cYear-4)%12);
    tmp+=")年 ";
    if(cMonth<1){
        tmp+="(闰)";
        tmp+=monString.charAt(-cMonth-1);
    }else{
        tmp+=monString.charAt(cMonth-1);
    }
    tmp+="月";
    tmp+=(cDay<11)?"初":((cDay<20)?"十":((cDay<30)?"廿":"三十"));
    if (cDay%10!=0||cDay==10){
        tmp+=numString.charAt((cDay-1)%10);
    }
    return tmp;
}

function GetLunarDay(solarYear,solarMonth,solarDay){
//solarYear = solarYear<1900?(1900+solarYear):solarYear;
    if(solarYear<1921 || solarYear>2020){
        return "";
    }else{
        solarMonth = (parseInt(solarMonth)>0) ? (solarMonth-1) : 11;
        e2c(solarYear,solarMonth,solarDay);
        return GetcDateString();
    }
}

var D=new Date();
var yy=D.getFullYear();
var mm=D.getMonth()+1;
var dd=D.getDate();
var ww=D.getDay();
var ss=parseInt(D.getTime() / 1000);
if (yy<100) yy="19"+yy;
function showCal(){
    document.write(GetLunarDay(yy,mm,dd));
}
/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/5
 * 创建原因：确认预约服务
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.appoint_appointConfirm.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("AppointConfirmService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){
        var clinicData = {
            //获取就诊者信息
            queryClientinfo : function(params, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        op : "queryCardInAppoint",
                        hospitalID:params.HOSPITAL_ID,
                        USER_VS_ID:34090
                    },
                    onSuccess : function(data){
                        if(data !=null && data !=undefined){
                            var Clientinfo=data.data;
                            onSuccess(Clientinfo);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            }

        };
        return clinicData;
    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/4/29
 * 创建原因：预约获取科室的服务
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("AppointDeptSelectService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){

        var deptData = {
            //获取预约科室列表
            queryDept : function(hospitalId, onSuccess){
                HttpServiceBus.connect({
                    url : "/appoint/action/AppointActionC.jspx",
                    params : {
                        op : "getAppointableDeptDictActionC",
                        hospitalId:hospitalId
                    },
                    onSuccess : function(data){
                        if(data.success){
                            var deptTables=data.data.rows;
                            var resultData=deptData.dealDeptData(deptTables);
                            onSuccess(resultData);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            },
            //处理后台返回的科室数据
            dealDeptData:function(deptTables){
                var  letters=[];//获取字母数组
                var resultMap={};//获取字母对应的科室
                var result={};//返回处理后的数据
                for(var i=0; i<deptTables.length ;i++){
                    if(resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] == undefined){
                        var list = [];
                        list.push(deptTables[i]);
                        resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] = list;
                        letters.push(deptTables[i].FULL_UPPER_SPELL.substr(0,1));
                        letters=letters.sort();
                    }else{
                        resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)].push(deptTables[i]);
                    }
                }
                result["letters"]=letters;
                result["resultMap"]=resultMap;
                return result;
            }
        };
        return deptData ;
    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/6
 * 创建原因：预约按时间查询医生排班
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.doctor_schedulebytime.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("AppointDoctorSchedulebyTimeService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){
        var doctorScheduleData =
        {
            queryAppointSchedulebyTime : function(params, onSuccess){
                HttpServiceBus.connect({
                    url : "/appoint/action/AppointActionC.jspx",
                    params : {
                        op : "getAppointLabelDictByTimeActionC",
                        hospitalID:params.hospitalId,
                        DEPT_CODE:params.deptCode
                    },
                    onSuccess : function(data){
                        if(data.success){
                            var doctorScheduleTable=data.data.data.rows;
                            var result=doctorScheduleData.dealScheduleData(doctorScheduleTable);
                            onSuccess(result);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            },
            //处理后台返回的排班数据
            dealScheduleData:function(doctorScheduleTable){
                var result={};
                var time=[];
                var timeMap={};
                for(var i=0;i<doctorScheduleTable.length;i++){
                    //医生擅长简介长度修改
                    doctorScheduleTable[i].DOCTOR_DESC=doctorScheduleData.doctorinfo(doctorScheduleTable[i].DOCTOR_DESC);
                    var clinicDate=doctorScheduleTable[i].CLINIC_DATE;
                        if (!timeMap[clinicDate]) {
                            timeMap[clinicDate] = [doctorScheduleTable[i]];
                             time.push(clinicDate);
                        } else {
                            timeMap[clinicDate].push(doctorScheduleTable[i]);
                        }
                    console.log(timeMap);
                }
                result["time"]=time;
                result["timeMap"]=timeMap;
                return result;
            },
            //医生擅长
            doctorinfo:function(doctorInfo){
                if(doctorInfo==null && doctorInfo==undefined)
                {
                    return "";
                }else{
                    if (doctorInfo.length > 30) {
                        return doctorInfo.substring(0,30) + "......";
                    }
                    else{
                        return doctorInfo;
                    }
                }
            }

        };
        return doctorScheduleData;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/4/29
 * 创建原因：预约根据科室编码获取医生排班服务
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.appoint.doctor_schedule.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("AppointDoctorScheduleService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){
        var doctorScheduleData =
        {
            queryAppointSchedule : function(params, onSuccess){
                HttpServiceBus.connect({
                    url : "/appoint/action/AppointActionC.jspx",
                    params : {
                        op : "getAppointLabelDictActionC",
                        hospitalID:params.hospitalId,
                        DEPT_CODE:params.deptCode
                    },
                    onSuccess : function(data){
                        if(data.success){
                            var doctorScheduleTable=data.data.data.rows;
                            var result=doctorScheduleData.dealScheduleData(doctorScheduleTable);
                            onSuccess(result,doctorScheduleTable);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            },
            //处理后台返回的排班数据
            dealScheduleData:function(doctorScheduleTable){
                var result={};//返回处理好的数据
                var arrschduleAmDate=[];//多个医生的上午排班日期
                var arrschdulePmDate=[];//多个医生的下午排班日期
                var arrisschudleTime=[];//多个医生的号源：是否有号
                var scheduleday=[];//医生的排班日期
                var scheduleWeek=[];//医生的排班周（星期几）
                for(var i=0;i<doctorScheduleTable.length;i++){
                    var servicetime=doctorScheduleTable[i].SERVER_TIME;
                    var  APPOINT_DAY=doctorScheduleTable[i].APPOINT_DAY;
                    //计算排班的日期
                    scheduleday=doctorScheduleData.arrerTodate(new Date(servicetime),APPOINT_DAY);
                    //计算排班星期
                    scheduleWeek=doctorScheduleData.schduleWeek(new Date(servicetime),APPOINT_DAY);
                    //医生擅长简介长度修改
                    doctorScheduleTable[i].DOCTOR_DESC=doctorScheduleData.doctorinfo(doctorScheduleTable[i].DOCTOR_DESC);
                    var schduleAmDate=[];//一个医生的上午排班日期
                    var schdulePmDate=[];//一个医生的下午排班日期
                    var isschudleTime=[];//一个医生的排班号
                    for(var k=0;k<scheduleday.length;k++){
                        for(var j=0;j<doctorScheduleTable[i].DOCTOR_SCHEDULE_LIST.length;j++){
                            var clinicDate=  doctorScheduleTable[i].DOCTOR_SCHEDULE_LIST[j].CLINIC_DATE;
                            var clinicDur=  doctorScheduleTable[i].DOCTOR_SCHEDULE_LIST[j].CLINIC_DURATION;
                            var isTime=doctorScheduleTable[i].DOCTOR_SCHEDULE_LIST[j].ISTIME;//一个医生的排班号源 1：有，0：无
                            isschudleTime.push(isTime);
                            var da = new Date(clinicDate);
                            clinicDate=da.getDate();//获取 CLINIC_DATE日期中的天
                            if(clinicDate==scheduleday[k] && "上午"==(clinicDur)){
                                schduleAmDate.push(clinicDate);
                            }
                            if(clinicDate==scheduleday[k] && "下午"==clinicDur){
                                schdulePmDate.push(clinicDate);
                            }
                        }
                    }
                    if(isschudleTime.indexOf("1") !=-1){
                        arrisschudleTime.push("有");
                    }else{
                        arrisschudleTime.push("无");
                    }
                    arrschduleAmDate.push(schduleAmDate);//多个医生的上午排班日期
                    arrschdulePmDate.push(schdulePmDate);//多个医生的下午排班日期

                }
                result["arrschduleAmDate"]=arrschduleAmDate;//多个医生的上午排班日期
                result["arrschdulePmDate"]=arrschdulePmDate;//多个医生的下午排班日期
                result["arrisschudleTime"]=arrisschudleTime;//多个医生的号源
                result["scheduleday"]=scheduleday;//医生的排班日期
                result["scheduleWeek"]=scheduleWeek;//医生的排班星期
                return result;
            },
            //界面展示的排班星期
             schduleWeek:function(serviceTime,arr){
                var weekDay=[];//星期
                var day=[];//日期
                var result = '';
                var arrlen=7;//默认页面展示天数
                serviceTime = serviceTime.format("yyyy/MM/dd");
                if(arr.length>7){
                    arrlen=7;
                }else{
                    arrlen=arr.length;
                }
                for(var i=0;i<arrlen;i++){
                    var dd = new Date(serviceTime);
                    dd.setDate(dd.getDate()+arr[i]-1);//获取AddDayCount天后的日期
                    var y = dd.getYear();
                    var m = dd.getMonth()+1;//获取当前月份的日期
                    var d = dd.getDate();
                    day.push( y+"/"+m+"/"+d);
                }
                for(var i=0;i<day.length;i++){
                    var mdate = new Date(day[i]).format("yyyy/MM/dd");
                    var weekday=new Array(7);
                    weekday[0]="日";//周日
                    weekday[1]="一";//周一
                    weekday[2]="二";//周二
                    weekday[3]="三";//周二
                    weekday[4]="四";//周三
                    weekday[5]="五";//周四
                    weekday[6]="六";//周五
                    result = weekday[new Date(mdate).getDay()];
                    weekDay.push(result)
                }
                return weekDay;
            },
            //界面展示的排班日期
             arrerTodate:function(serviceTime,arr){
                var arrlen=7;//默认页面展示天数
                var day=[];//排班日期
                serviceTime = serviceTime.format("yyyy/MM/dd");
                if(arr.length>7){
                    arrlen=7;
                }else{
                    arrlen=arr.length;
                }
                for(var i=0;i<arrlen;i++){
                    var dd = new Date(serviceTime);
                    dd.setDate(dd.getDate()+arr[i]-1);//获取AddDayCount天后的日期
                    var y = dd.getYear();
                    var m = dd.getMonth()+1;//获取当前月份的日期
                    var d = dd.getDate();
                    day.push(d);
                }
                return day;
            },
            //医生擅长
             doctorinfo:function(doctorInfo){
                if(doctorInfo==null && doctorInfo==undefined)
                {
                    return "";
                }else{
                    if (doctorInfo.length > 30) {
                        return doctorInfo.substring(0,30) + "......";
                    }
                    else{
                        return doctorInfo;
                    }
                }
            },
            queryAppointSource : function(params, onSuccess){
                HttpServiceBus.connect({
                    url : "/appoint/action/AppointActionC.jspx",
                    params : {
                        op : "getClinicDetailActionC",
                        hospitalID:params.hospitalId,
                        DEPT_CODE:params.deptCode,
                        CLINIC_DATE:params.clinicDate,
                        HB_TIME:params.hbTime,
                        DOCTOR_CODE:params.doctorCode,
                        PATIENT_ID:params.patientId,
                        USER_VS_ID:params.userVsId
                    },
                    onSuccess : function(data){
                        if(data.success){
                            var ClinicDetail=data.data;
                            onSuccess(ClinicDetail);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            }
        };
        return doctorScheduleData;
    })
    .build();


/**
 * Created by Administrator on 2015/4/25.
 *个人中心的控制器，属于根控制器
 * 赵婷
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller")
    .require([
        "kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.framework.service.view",
        "kyee.quyiyuan.center.controller.custom_patient",
        "kyee.quyiyuan.center.controller.role_view",
        "kyee.quyiyuan.center.controller.change_pwd",
        "kyee.quyiyuan.center.controller.update_user",
        "kyee.quyiyuan.center.controller.query_his_card",
        "kyee.quyiyuan.center.controller.add_patient_info",
        "kyee.quyiyuan.center.controller.add_custom_patient",
        "kyee.quyiyuan.login.service"
    ])
    .type("controller")
    .name("CenterController")
    .params(["$scope", "$state","CenterService","KyeeMessageService", "KyeeViewService", "LoginService"])
    .action(function($scope, $state,CenterService, KyeeMessageService, KyeeViewService, LoginService){
        $scope.userName = "个人中心";
        $scope.openModal = function(url) {
            KyeeViewService.openModalFromUrl({
                scope: $scope,
                url: url
            });
        }
        $scope.Cancellation = function(){
            KyeeMessageService.confirm({
                title: "提示信息",
                content: "确认需要注销？",
                onSelect:function(select){
                //获取用户的选择，判断是否注销
                   if(select)
                   {
                       LoginService.logoff();   //调用注销接口 add by tianxin
                       $scope.openModal("modules/business/login/index.html");
                   }
                }
            });
        }
        $scope.go = function(){
            $state.go("custom_patient");
        }
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：新增就诊者控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.add_custom_patient")
    .require([
        "kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.framework.service.view",
        "kyee.quyiyuan.center.controller.add_custom_patient",
        "kyee.quyiyuan.center.AddCustomPatientService.service"])
    .type("controller")
    .name("AddCustomPatientController")
    .params(["$scope","KyeeMessageService", "KyeeViewService","AddCustomPatientService","CacheServiceBus","$state","UpdateUserService"])
    .action(function($scope,KyeeMessageService, KyeeViewService,AddCustomPatientService,CacheServiceBus,$state,UpdateUserService){
        $scope.userInfo = {
            PHONE_NUMBER : "",
            NAME : "",
            shenfen : "",
            xingbie : "",
            paramName:"idNo_Check",
            phoneNumDisabled : false,
            validateBtnDisabled : false,
            loginNum: "",
            validateMsgText : "获取验证码",
            sms:"",
            showChilds:"",
            isChild:"0",
            isertong:"true",
            BIRTHDAY:""
        };
        $scope.queryHospitalParam = function(){
            //是否显示就诊卡
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            console.info("是否显示就儿童");
            AddCustomPatientService.queryHospitalParam($scope.hospitalId,$scope.userInfo.paramName, function(data){
                $scope.userInfo.showChilds = data.data.idNo_Check;
                if($scope.userInfo.showChilds == 0 ){
                    console.info("不显示儿童"+$scope.userInfo.showChilds);
                    $scope.userInfo.showChilds = false;
                }else if($scope.showChilds == 1 ){
                    console.info("显示儿童"+$scope.userInfo.showChilds);
                    $scope.showChilds = true;
                }
                console.info("0不显示，1显示:"+$scope.userInfo.showChilds);
            });
        };
        $scope.addCustomPatient = function(){
            AddCustomPatientService.addCustomPatient($scope.post,$scope.hospitalId,function(data){
                console.info("提交成功~");
            });
        }
        $scope.IdNoisExist = function(){
            $scope.userId = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
            AddCustomPatientService.IdNoisExist($scope.userInfo.shenfen,$scope.userId,function(data){
                console.info("提交成功~");
                $scope.messagesID = data.message ;
                if($scope.messagesID == "身份证不存在"){
                    $scope.addCustomPatient();
                    $scope.backToFront();
                }else{
                    AddCustomPatientService.idIsNulls();
                }
            });
        }
        $scope.queryHospitalParam();
        //判断男女之术！
        $scope.createSex=function()
        {
            var ID_NO = $scope.userInfo.shenfen;
            var Id = ID_NO.trim();
            var sex = Id.substring(16,17);
            if (!isNaN(sex))
            {
                if(Id.length > 16){
                    if (sex%2==0)
                    {
                        return "女";
                    }else
                    {
                        return "男";
                    }
                }
            }
        };
        $scope.hideModal = function(){
            KyeeViewService.removeModal({
                scope:$scope
            });
        };
        $scope.yingcangshenfen = function(){
            console.info("隐藏身份证");
            $scope.showshenfen = true ;
            $scope.userInfo.isChild = 1;
            $scope.userInfo.isertong = false;
        };
        $scope.xianshishenfen = function(){
            console.info("显示身份证");
            $scope.showshenfen = false ;
            $scope.userInfo.isChild = 0 ;
            $scope.userInfo.isertong = true;
        };
        $scope.nan = function(){
            $scope.userInfo.xingbie = 1 ;
            console.info($scope.userInfo.xingbie);
        };
        $scope.nv = function(){
            $scope.userInfo.xingbie = 2 ;
            console.info($scope.userInfo.xingbie);
        };
        $scope.sendRegCheckCodeActionC = function(){
            AddCustomPatientService.sendRegCheckCodeActionC($scope.hospitalId,$scope.userInfo.PHONE_NUMBER,$scope.userInfo.NAME,function(data){
                var chineseRegex = /[^\x00-\xff]/g;
                var a = data.data.MESSAGE_CONTENT.replace(chineseRegex,"");
                $scope.userInfo.sms = a.substring(0,4);
                console.info("短信验证码"+$scope.userInfo.loginNum );
            });
        };
        $scope.getValiteCode = function(){
            console.info("发送验证码");
            //bug 此处暂时留空
            if(AddCustomPatientService.getValiteCode($scope.userInfo.PHONE_NUMBER)){
                $scope.sendRegCheckCodeActionC();
                $scope.userInfo.phoneNumDisabled = true;
                $scope.userInfo.validateBtnDisabled = true;
            }

        };
        //提交
        $scope.tijiao = function(){
            console.info("1111111111111111111111111111111");
            if($scope.userInfo.validateMsgText != "获取验证码"){
            if(AddCustomPatientService.tijiao($scope)){
                $scope.userId = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
                $scope.userInfo.BIRTHDAY = AddCustomPatientService.convertIdNo($scope.userInfo.shenfen);
                $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
                $scope.post = JSON.stringify(
                {STATUS:1,USER_VS_ID:null,ROLE_CODE:null,SEX:$scope.userInfo.xingbie,
                    IS_SELECTED:null,IS_CHILD:$scope.userInfo.isChild,IS_DEFAULT:null,DATE_OF_BIRTH:$scope.userInfo.BIRTHDAY,
                    USER_ID:$scope.userId,OFTEN_NAME:$scope.userInfo.NAME,PATIENT_CARD:null,ADDRESS:null,
                    PHONE:$scope.userInfo.PHONE_NUMBER,CARD_NO:null,ID_NO:$scope.userInfo.shenfen,
                    FLAG:1,FLAG_AUTH:"认证成功",ID_NO_SECERT:$scope.userInfo.shenfen})
                $scope.IdNoisExist();
            }
            }else{
                UpdateUserService.SmsisNulls();
            }
        };
        //返回到上一个页面
        $scope.backToFront=function(){
            console.info("返回~");
            UpdateUserService.DadNoShow();
            $scope.hideModal();
        }
//        //返回到上一个页面
//        $scope.backToFront=function(){
//            console.info("返回~");
//            $state.go("center->MAIN_TAB");
//        }
    })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：附加就诊者控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.add_patient_info")
    .require(["kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.framework.service.view",
        "kyee.quyiyuan.center.AddPatientInfoService.service",
        "kyee.quyiyuan.center.controller.add_custom_patient",
        "kyee.quyiyuan.center.controller.comm_patient_detail",
        "kyee.quyiyuan.center.AddPatientInfoService.service",
        "kyee.quyiyuan.center.CommPatientDetailService.service"])
    .type("controller")
    .name("AddPatientInfoController")
    .params(["$scope",
        "$state",
        "KyeeMessageService",
        "KyeeViewService",
        "AddPatientInfoService",
        "CommPatientDetailService",
        "CacheServiceBus",
        "HospitalSelectorService"])
        .action(function($scope,
                         $state,
                         KyeeMessageService,
                         KyeeViewService,
                         AddPatientInfoService,
                         CommPatientDetailService,
                         CacheServiceBus,
                         HospitalSelectorService){
        $scope.sec =""
        $scope.ToNew = function(){
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            if($scope.hospitalId!=null&&$scope.hospitalId!=undefined&&$scope.hospitalId!=""){
                $scope.openModal('modules/business/center/views/add_patient_info/add_custom_patient.html');
            }else{
                AddPatientInfoService.ToNewFalse();
            }
        }
        $scope.queryCommPatient = function(){
            $scope.userId = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            $scope.shouldShowDelete = false;
            $scope.shouldShowReorder = false;
            $scope.listCanSwipe = true;
            AddPatientInfoService.queryCommPatient($scope.userId, $scope.hospitalId, function(data){
                var aa=new Date();
                $scope.Year = aa.getFullYear();
                for(var a=0;a<data.data.length;a++){
                    var b = data.data[a].ID_NO.substring(6,10);
//                    console.info(data.data[a].ID_NO);
                    if(a>=0){
                        if($scope.Year-b>=0){
                        data.data[a].age = $scope.Year-b ;
                        }else{
                        data.data[a].age = 0;
                        }
                    }
                }
            //分辨男女
                for(var i=0;i<data.data.length;i++)
                {
                    if(data.data[i].SEX == 1){
                        data.data[i].SEX = "男";
                        $scope.sec = 1;
                        data.data[i].pngPhoto = "resource/images/center/men.png";
                    }else{
                        data.data[i].SEX = "女";
                        $scope.sec = 2;
                        data.data[i].pngPhoto = "resource/images/center/girl.png";
                    }
                }
                if(!($scope.hospitalId == 1001)){
                    data.data.splice(0,1);
                }
                $scope.all = data.data;
            });
        };
        //删除
        $scope.edit = function(item){
                console.log(item);
                $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
                $scope.post = JSON.stringify(
                    {STATUS:0,USER_VS_ID:item.USER_VS_ID,ROLE_CODE:item.ROLE_CODE,SEX:item.sec,
                        IS_SELECTED:item.IS_SELECTED,IS_CHILD:item.IS_CHILD,IS_DEFAULT:item.IS_DEFAULT,
                        DATE_OF_BIRTH:item.DATE_OF_BIRTH,
                        USER_ID:item.USER_ID,OFTEN_NAME:item.OFTEN_NAME,PATIENT_CARD:null,ADDRESS:null,
                        PHONE:item.PHONE,CARD_NO:null,ID_NO:item.ID_NO,
                        FLAG:item.FLAG,FLAG_AUTH:"认证成功",ID_NO_SECERT:item.ID_NO})
                $scope.deleteCustomPatient();
        };
        $scope.deleteCustomPatient = function(){
            AddPatientInfoService.deleteCustomPatient($scope.post,$scope.hospitalId,function(data){
                if(data.message == "无法删除当前就诊者，请切换就诊者后重试！"||data.message == "当前就诊者存在预约或挂号记录，无法删除！"
                    ||data.message == "删除常用就诊者失败！" ){
                    AddPatientInfoService.deletePatientSms(data.message);
                }else if(data.message == "删除常用就诊者成功！"){
//                    items.splice($index, 1)
                    console.info("提交成功~");
                    AddPatientInfoService.deletePatientSms(data.message);
                    $scope.backToFront();
                }
            });
        }
        //返回到上一个页面
        $scope.backToFront=function(){
            console.info("返回~");
            $state.go("center->MAIN_TAB");
        }
            $scope.openModal = function(url){
            KyeeViewService.openModalFromUrl({
                scope : $scope,
                url : url
            });
        };
        //跳到选择医院
        $scope.backSelectHid=function(){
            console.info("返回~");
            $state.go("hospital_selector");
        }

        $scope.selecthid=function(){
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            if($scope.hospitalId!=null&&$scope.hospitalId!=undefined&&$scope.hospitalId!=""){
                $scope.queryCommPatient();
            }else{
                HospitalSelectorService.enter("add_patient_info");
                $scope.backSelectHid();
            }

        }
        $scope.selecthid();
        $scope.xuanzhong = function(item){
            console.log(item);
            var a = AddPatientInfoService.def=item.ID;
            item.orgphone = item.PHONE;
            CommPatientDetailService.item = item;
            CommPatientDetailService.item.loginNum = "";
            $scope.openModal('modules/business/center/views/add_patient_info/comm_patient_detail.html');
        }
        })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：就诊者信息控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.comm_patient_detail")
    .require([
        "kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.framework.service.view",
        "kyee.quyiyuan.center.controller.query_his_card",
        "kyee.quyiyuan.center.controller.comm_patient_detail",
        "kyee.quyiyuan.center.CommPatientDetailService.service",
        "kyee.quyiyuan.center.authentication.controller"])
    .type("controller")
    .name("CommPatientDetailController")
    .params(["$scope",
        "$state",
        "KyeeMessageService",
        "KyeeViewService",
        "CommPatientDetailService",
        "CacheServiceBus",
        "HospitalSelectorService",
        "UpdateUserService",
        "QueryHisCardService"])
    .action(function($scope,
                     $state,
                     KyeeMessageService,
                     KyeeViewService,
                     CommPatientDetailService,
                     CacheServiceBus,
                     HospitalSelectorService,
                     UpdateUserService,
                     QueryHisCardService){
        $scope.userInfo = {
            phoneNumDisabled : false,
            validateBtnDisabled : false,
            validateMsgText : "获取验证码",
            SmsMom:false,
            AZURE:"",
            FLAG:"3",
            IS_CHILD:"0",
            CARD_NO:"",
            clickHealth:false,
            Health:"查询",
            IDisShow:false,
            idNo_Checkc:false,
            MedicalPayc:false,
            showCard:false,
            aaas:checked="true"
        };
        $scope.queryBindCardNo = function(){
            console.info("获取就诊卡信息");
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            CommPatientDetailService.queryBindCardNo($scope.item.USER_VS_ID,$scope.hospitalId,function(data){
                $scope.userInfo.CARD_NO = data.data.CARD_NO;
                $scope.userInfo.VCARD_NO = data.data.VCARD_NO;
                console.info("CARD_NO:"+$scope.userInfo.CARD_NO+"VCARD_NO:"+$scope.userInfo.VCARD_NO);

                //作为中转拿了一次参数，查卡的时候也可以拿。（写在回调函数中，确保有值）
                CommPatientDetailService.lastClassInfro = {
                    current_user_record:{
                        USER_VS_ID:$scope.item.USER_VS_ID,
                        OFTEN_NAME:$scope.item.OFTEN_NAME,
                        PHONE:$scope.item.PHONE,
                        ID_NO:$scope.item.ID_NO
                    },
                    commCardNo:$scope.userInfo.CARD_NO
                };
            });
        };
        //是否显示短信验证
        $scope.xianshi = function(){
            if($scope.item.PHONE!=null&&$scope.item.PHONE!=undefined
                && $scope.item.orgphone == $scope.item.PHONE){
                $scope.userInfo.AZURE = 1;
                console.info("验证码默认通过");
                $scope.userInfo.SmsMom = false;
            }else{
                console.info("验证码为空");
                $scope.userInfo.AZURE = 0;
                $scope.userInfo.SmsMom = true;
                console.info($scope.userInfo.SmsMom);
            }
        };
        $scope.hideModal = function(){
            KyeeViewService.removeModal({
                scope:$scope
            });
        };
        $scope.item = CommPatientDetailService.item;
        console.log("取得传过来的信息");
        $scope.openModal = function(url){
            KyeeViewService.openModalFromUrl({
                scope : $scope,
                url : url
            });
        };
        $scope.aaa = function(data){
            if($scope.item.SEX == data){
                return "checked";
            }else{
                return "";
            }
        };
        //发送验证码
        $scope.getValiteCode = function(){
            console.info("发送验证码");
            //bug 此处暂时留空
            if(CommPatientDetailService.getValiteCode($scope.item.PHONE)){
                $scope.sendRegCheckCodeActionC();
                $scope.userInfo.phoneNumDisabled = true;
                $scope.userInfo.validateBtnDisabled = true;
            }

        };
        $scope.sendRegCheckCodeActionC = function(){
            CommPatientDetailService.sendRegCheckCodeActionC($scope.hospitalId,$scope.item.PHONE,$scope.item.OFTEN_NAME,function(data){
                var chineseRegex = /[^\x00-\xff]/g;
                var a = data.data.MESSAGE_CONTENT.replace(chineseRegex,"");
                $scope.userInfo.sms = a.substring(0,4);
                console.info("短信验证码"+$scope.item.loginNum );
            });
        };
        $scope.yingcangshenfen = function(){
            console.info("隐藏身份证");
            $scope.showshenfen = true ;
            $scope.isertong = true;
            $scope.userInfo.IS_CHILD = 1;
        };
        $scope.xianshishenfen = function(){
            console.info("显示身份证");
            $scope.showshenfen = false ;
            $scope.isertong = false;
            $scope.userInfo.IS_CHILD = 1;
        };
        //身份证识别男女
        $scope.createSex=function()
        {
            var ID_NO = $scope.item.ID_NO;
            var Id = ID_NO.trim();
            var sex = Id.substring(16,17);
            if (!isNaN(sex))
            {
                if(Id.length > 16){
                    if (sex%2==0)
                    {
                        $scope.item.SEXc = 2;
                        return "女";
                    }else
                    {
                        $scope.item.SEXc = 1;
                        return "男";
                    }
                }
            }
        };
        $scope.updateCustomPatient = function(){
            CommPatientDetailService.updateCustomPatient($scope.post,$scope.hospitalId,function(data){
                if(data.message == "抱歉！该就诊者已关联卡，不能更改！"||data.message == "修改常用就诊者失败！"){
                    CommPatientDetailService.CustomPatientSms(data.message);
                }else if(data.message == "修改常用就诊者成功！"){
                    CommPatientDetailService.CustomPatientSms(data.message);
                    $scope.backToFront();
                }
            });
        };
        $scope.queryMedicalSecurityCardInfo = function(){
            console.info("获取医保卡信息");
            CommPatientDetailService.queryMedicalSecurityCardInfo($scope.hospitalId,$scope.item.USER_VS_ID,
                $scope.item.OFTEN_NAME,$scope.item.ID_NO,function(data){
                    if(data.success){
                    $scope.item.STATUS = data.data.STATUS;
                    if(data.data.STATUS = 0003){
                        $scope.userInfo.Health = "未绑定";
                        $scope.userInfo.clickHealth = false;
                    }else if(data.data.STATUS = 0002){
                        $scope.userInfo.Health = "绑定中";
                        $scope.userInfo.clickHealth = false;
                    }else if(data.data.STATUS = 0001){
                        $scope.userInfo.Health = "已绑定";
                        $scope.userInfo.clickHealth = true ;
                        $scope.item.Y_CARD = data.data.MEDICAL_SECURITY_CARD_NO ;
                    }else if(data.data.STATUS = 0000){
                        $scope.userInfo.Health = "绑定失败";
                        $scope.userInfo.clickHealth = false ;
                    }
                    }
                });
        };
        $scope.ToCard = function(){
                if($scope.item.ID_NO!=null&&$scope.item.ID_NO!=undefined&&
                    $scope.item.OFTEN_NAME!=null&&$scope.item.OFTEN_NAME!=undefined){
                    if($scope.item.PHONE!=null&&$scope.item.PHONE!=undefined){
                    $scope.xianshi();
                    if(CommPatientDetailService.tijiao($scope)){
                        QueryHisCardService.lastClassFlag = 2;
                        $scope.openModal('modules/business/center/views/update_user/query_his_card.html');
                    }else{
//                        UpdateUserService.IDisNull();
                    }
                    }else{
                        CommPatientDetailService.PhoneisNull();
                    }
                }else{
                    CommPatientDetailService.IDisNull();
                }

        }
        //认证状态
        $scope.renzheng = function(){
            if($scope.userInfo.FLAG == 1){
                console.info("先显示未认证，以后拿到了FLAG就根据来判断");
                return "已认证";
            }else if($scope.userInfo.FLAG == 2){
                return "未认证";
            }else if($scope.userInfo.FLAG == 3){
                return "未认证";
            }
        };
        $scope.ToRealName = function(){
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            if($scope.item.ID_NO!=null&&$scope.item.ID_NO!=undefined&&
                $scope.item.OFTEN_NAME!=null&&$scope.item.OFTEN_NAME!=undefined){
                if($scope.item.PHONE!=null&&$scope.item.PHONE!=undefined){
                $scope.xianshi();
                if(CommPatientDetailService.tijiao($scope)){
                    $scope.openModal('modules/business/center/views/authentication/authentication.html');
                }else{
//                        UpdateUserService.IDisNull();
                }
                }else{
                    CommPatientDetailService.PhoneisNull();
                }
            }else{
                CommPatientDetailService.IDisNull();
            }
        }
        //是否显示参数
        $scope.queryHospitalParam = function(){
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
                paramName = "idNo_Check,MedicalPay,showCard";
                CommPatientDetailService.queryHospitalParam(paramName,$scope.hospitalId,function(data){
                $scope.userId = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
                CommPatientDetailService.HOSPITAL_YB = {USER_ID: $scope.userId, USER_VS_ID:$scope.item.USER_VS_ID,
                    OFTEN_NAME:$scope.item.OFTEN_NAME,ID_NO:$scope.item.ID_NO};
                CommPatientDetailService.HOSPITAL_SM = {OFTEN_NAME:$scope.item.OFTEN_NAME,
                    ID_NO:$scope.item.ID_NO,PHONE:$scope.item.PHONE,FLAG:$scope.userInfo.FLAG};
                CommPatientDetailService.HOSPITAL_JZ = {USER_ID: $scope.userId, USER_VS_ID:$scope.item.USER_VS_ID,
                    OFTEN_NAME:$scope.item.OFTEN_NAME,ID_NO:$scope.item.ID_NO,PHONE:$scope.item.PHONE};
                CommPatientDetailService.F_LAG = 1;
                UpdateUserService.F_LAG = 0;
                if($scope.item.OFTEN_NAME == "体验就诊者"){
                    console.info("体验就诊者");
                    $scope.userInfo.IDisShow = true;
                    $scope.userInfo.FLAG = "1";
                }
                console.info(data);
                $scope.idNo_Check = data.data.idNo_Check;
                $scope.MedicalPay = data.data.MedicalPay;
                $scope.showCard = data.data.showCard;
                if($scope.idNo_Check == "0"){
                    $scope.userInfo.idNo_Checkc = false;
                }else if($scope.idNo_Check == "1"){
                    $scope.userInfo.idNo_Checkc = true;
                }
                if($scope.MedicalPay == "0"){
                    $scope.userInfo.MedicalPayc = false;
                }else if($scope.MedicalPay == "1"){
                    $scope.userInfo.MedicalPayc = true;
                    $scope.queryMedicalSecurityCardInfo();
                }
                if($scope.showCard == "0"){
                    $scope.userInfo.showCard = true;
                }else if($scope.showCard == "1"){
                    $scope.userInfo.showCard = false;
                }
                $scope.queryBindCardNo();
            });
        };

        $scope.queryHospitalParam();
        //提交
        $scope.tijiao = function(){
            $scope.xianshi();
            if($scope.userInfo.validateMsgText != "获取验证码"||$scope.userInfo.AZURE == 1){
            if($scope.item.PHONE!=null&&$scope.item.PHONE!=undefined&&$scope.item.PHONE!=null&&$scope.item.PHONE!=undefined&&
                $scope.item.ID_NO!=null&&$scope.item.ID_NO!=undefined){
                if(CommPatientDetailService.tijiao($scope)){
                    $scope.userId = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
                    $scope.userInfo.BIRTHDAY = CommPatientDetailService.convertIdNo($scope.item.ID_NO);
                    $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
                    $scope.post = JSON.stringify(
                        {STATUS:1,USER_VS_ID:$scope.item.USER_VS_ID,ROLE_CODE:$scope.item.ROLE_CODE,SEX:$scope.item.SEXc,
                            IS_SELECTED:$scope.item.IS_SELECTED,IS_CHILD:$scope.userInfo.IS_CHILD,IS_DEFAULT:$scope.item.IS_DEFAULT,
                            DATE_OF_BIRTH:$scope.userInfo.BIRTHDAY,
                            USER_ID:$scope.item.USER_ID,OFTEN_NAME:$scope.item.OFTEN_NAME,PATIENT_CARD:null,ADDRESS:null,
                            PHONE:$scope.item.PHONE,CARD_NO:null,ID_NO:$scope.item.ID_NO,
                            FLAG:$scope.item.FLAG,FLAG_AUTH:"认证成功",ID_NO_SECERT:$scope.item.ID_NO})
                    $scope.updateCustomPatient();
                }
            }else{
                CommPatientDetailService.onClickTo();
            }
            }else{
                UpdateUserService.SmsisNulls();
            }
        };
        //返回到上一个页面
        $scope.backToFront=function(){
            console.info("返回~");
            $scope.hideModal();
        };
    })
    .build();
/**
 * 产品名称 KYMH
 * 创建用户: 朱学亮
 * 日期: 2015/5/10
 * 时间: 15:45
 * 创建原因：实名认证的controller
 * 修改原因：
 * 修改用户：
 * 修改时间：
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.authentication.controller")
    .require(["kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.quyiyuan.center.authentication.service",
        "kyee.quyiyuan.center.updateuser.service",
        "kyee.framework.device.deviceinfo",
        "kyee.framework.device.camera"])
    .type("controller")
    .name("AuthenticationController")
    .params(["$scope",
        "KyeeMessageService",
        "KyeeViewService",
        "AuthenticationService",
        "UpdateUserService",
        "CacheServiceBus",
        "KyeeDeviceInfoService",
        "KyeeCameraService"])
    .action(function($scope,
                     KyeeMessageService,
                     KyeeViewService,
                     AuthenticationService,
                     UpdateUserService,
                     CacheServiceBus,
                     KyeeDeviceInfoService,
                     KyeeCameraService){

        $scope.hideModal = function(){
            KyeeViewService.hideModal({
                scope:$scope
            });
        };

        // 获取上级页面传入的参数 OFTEN_NAME，FLAG，ID_NO，PHONE
        // FLAG 表示：0-正在审核；1-认证成功；2-认证失败；3-未认证；

        /**
         * HOSPITAL_SM = {OFTEN_NAME,ID_NO,PHONE,FLAG};
         */
        var cache = CacheServiceBus.getMemoryCache();
        var current_patient = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
        $scope.bindData = current_patient;//UpdateUserService.HOSPITAL_SM;
        $scope.userInfo = {
            name : $scope.bindData.OFTEN_NAME,
            idNo : $scope.bindData.ID_NO,
            phone : $scope.bindData.PHONE
        };

        $scope.idCardPic = "resource/images/center/sfz.jpg";
        $scope.idCardPicStyle = "width: 200px";

        $scope.takePic = function() {
            console.log("选取图片");
            $scope.goToCamera();
        };

        $scope.goToCamera = function() {

            if ($scope.platform == "android") {
                var options = {
                    quality: 40,
                    destinationType: Camera.DestinationType.FILE_URI,
                    targetWidth: 900,  //设置图片宽度
                    targetHeight: 1200,//设置图片高度
                    allowEdit: true,
                    encodingType: Camera.EncodingType.JPEG,
                    sourceType: Camera.PictureSourceType.CAMERA
                };
                KyeeCameraService.getPicture(
                    // 调用成功时返回的值
                    function(retVal){
                        console.log(retVal);
                    },
                    // 调用失败时返回的值
                    function(retVal){
                        console.log(retVal);
                    },options);
            } else if ($scope.platform == "iOS") {
                var options = {
                    quality: 40,
                    destinationType: Camera.DestinationType.FILE_URI,
                    targetWidth: 200,  //设置图片宽度
                    targetHeight: 200,//设置图片高度
                    saveToPhotoAlbum: true,
                    allowEdit: true,
                    sourceType: Camera.PictureSourceType.CAMERA
                };
                KyeeCameraService.getPicture(
                    // 调用成功时返回的值
                    function(retVal){
                        console.log("success");
                        console.log(retVal);
                        $scope.idCardPic = retVal;
                        $scope.idCardPicStyle = "width: 200px";
                        $scope.$digest();
                    },
                    // 调用失败时返回的值
                    function(retVal){
                        console.log(retVal);
                    },options);
            }
        };

        $scope.goToAlbum = function() {

            if ($scope.platform == "android") {
                // android设备选取相册
            } else if ($scope.platform == "iOS") {
                var options = {
                    quality: 40,
                    destinationType: Camera.DestinationType.FILE_URI,
                    targetWidth: 900,//设置图片宽度
                    targetHeight: 1200,//设置图片高度
                    saveToPhotoAlbum: true,
                    allowEdit: true,
                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY
                };
                KyeeCameraService.getPicture(
                    // 调用成功时返回的值
                    function(retVal){
                        console.log("success");
                        console.log(retVal);
                        $scope.idCardPic = retVal;
                        $scope.idCardPicStyle = "width: 200px";
                        $scope.$digest();
                    },
                    // 调用失败时返回的值
                    function(retVal){
                        console.log(retVal);
                    },options);
            }
        };

        // 1. 校验当前就诊者信息是否完善-->
        // 2. 校验是否选择了新的照片-->
        // 3. 使用插件显示进度-->
        // 4. 上传照片。
        $scope.submitPic = function() {
            console.log("提交照片");
            //校验当前就诊者信息是否完善
            if(!$scope.bindData.OFTEN_NAME || $scope.bindData.OFTEN_NAME == ""||
                !$scope.bindData.ID_NO || $scope.bindData.ID_NO == "" ||
                !$scope.bindData.PHONE || $scope.bindData.PHONE == "") {
                // 提示用户需要完善信息
                KyeeMessageService.message({
                    title : "温馨提示",
                    content : "请完善当前就诊者信息！",
                    okText : "知道了"
                });
            } else if($scope.idCardPic == "resource/images/center/sfz.jpg") {
                // 提示用户需要选择照片
                KyeeMessageService.message({
                    title : "温馨提示",
                    content : "请选择照片！",
                    okText : "知道了"
                });
            } else {
                // 上传照片
                AuthenticationService.uploadIdCard($scope.idCardPic, $scope.userInfo);
            }
        };

        // 获取当前设备平台 iOS or android
        KyeeDeviceInfoService.getInfo(function(info){
            $scope.platform = info.platform;
            //alert($scope.platform);
        },function(){});

    })
    .build();
/**
 * Created by Administrator on 2015/4/26.
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.change_pwd")
    .require(["kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.framework.service.view",
        "kyee.quyiyuan.center.service.ChangePwdService",
        "kyee.quyiyuan.login.rsautil.service",
        "kyee.quyiyuan.login.service"])
    .type("controller")
    .name("ChangePwdController")
    .params(["$scope",
             "KyeeMessageService",
             "KyeeViewService",
             "ChangePwdService",
             "RsaUtilService",
             "CacheServiceBus",
             "LoginService", "$state"])
    .action(function ($scope, KyeeMessageService, KyeeViewService, ChangePwdService,
                      RsaUtilService,CacheServiceBus,LoginService, $state) {

        $scope.titleName = "修改密码";
        $scope.isActive = false; //点击眼睛图标状态
        $scope.pwdInfo={old_pwd:null, new_pwd: null}; //初始化密码变量

        //输入可视事件
        $scope.iconClick = function () {
            if ($scope.isActive == true) {
                oldPwd.type = 'password';
                newPwd.type = 'password';
                $scope.isActive = false;
            } else {
                oldPwd.type = 'text';
                newPwd.type = 'text';
                $scope.isActive = true;
            }
        }

        //提交按钮事件
        $scope.submentClick = function () {
            var strOldPwd =$scope.pwdInfo.old_pwd;
            var strNewPwd =$scope.pwdInfo.new_pwd;

            var flag=$scope.validate(strNewPwd,strOldPwd);  //验证输入格式是否正确（未验证特殊字符）
            if(flag)
            {
                var timeRandom = new Date().getTime();
                strNewPwd = RsaUtilService.getRsaResult(strNewPwd);   //rsa加密 密码
                strOldPwd = RsaUtilService.getRsaResult(strOldPwd);   //rsa加密 密码

                //获取缓存数据
                var Cache = CacheServiceBus.getMemoryCache();
                var currentUserRecord = Cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);
                var currentUser=Cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER);
                //封装发往后台数据
                var data = {
                    USER_ID:currentUserRecord.USER_ID,
                    PASSWORD: strNewPwd,
                    OLDPASSWORD:strOldPwd,
                    ConfirmPASSWORD:null,
                    USER_CODE:currentUser
                };

                ChangePwdService.checkOldPwd(function(rsp){
                    //处理和服务器交互后回调返回的值
                    if(rsp.success){
                        if(data.USER_ID!=""&&data.USER_ID!=undefined)
                        {
                            $scope.pwdInfo={old_pwd:null, new_pwd: null};
                            $scope.changeService(data);
                        }
                        else
                        {
                            if(rsp.message!=""&&rsp.message!=undefined){
                                $scope.warnMessage(rsp.message);
                            }
                            else
                            {
                                $scope.warnMessage("验证失败！");
                            }
                        }
                    }else
                    {
                        var message="旧密码验证失败！"
                        $scope.warnMessage(message);
                    }
                },data.USER_CODE,data.OLDPASSWORD,$scope)
            }
        }
        //修改密码
        $scope.changeService=function(data){
            ChangePwdService.changePwdService(function(rsp){
                //处理和服务器交互后回调返回的值
                if(rsp.success){
                    //修改密码成功后，注销登陆状态
                    LoginService.logoff();
                    var message="用户密码修改成功，请重新登陆！"
                    $scope.warnMessage(message);
                    $scope.openModal("modules/business/login/index.html");
                }else
                {
                    if(rsp.message!=""&&rsp.message!=undefined){
                        $scope.warnMessage(rsp.message);
                    }
                    else
                    {
                        $scope.warnMessage("修改密码失败！");
                    }
                }
            },data,$scope);
        }
        $scope.validate=function(newPwd,oldPwd){
            if(newPwd==null||oldPwd==null)
            {
                message = "密码不能为空！";
                $scope.warnMessage(message);
                return false;
            }else {
                var patrn = /^[!@#$*_A-Za-z0-9]+$/;
                if (!patrn.test(newPwd)) {
                    message = "密码必须字母、数字或者特殊字符(!@#$*_ )！";
                    $scope.warnMessage(message);
                    return false;
                }
                else {
                    if (newPwd.length > 17) {
                        message = "新密码必须小于17位！";
                        $scope.warnMessage(message);
                        return false;
                    }
                    if (newPwd.length < 6) {
                        message = "新密码必须大于5位！";
                        $scope.warnMessage(message);
                        return false;
                    }
                    return true;
                }
            }

        }
        //预警提示
        $scope.warnMessage = function (message) {
            KyeeMessageService.message({
                title: "提示",
                content: message,
                okText: "知道了"
            });
        }
        //跳转页面
        $scope.openModal = function(url) {
            KyeeViewService.openModalFromUrl({
                scope: $scope,
                url: url
            });
        }

    })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：切换就诊者控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.custom_patient")
    .require(["kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.quyiyuan.center.CustomPatientService.service",
        "kyee.framework.service.view",
        "kyee.quyiyuan.login.service"])
    .type("controller")
    .name("CustomPatientController")
    .params(["$scope", "$state","KyeeViewService","CustomPatientService","CacheServiceBus","LoginService","HospitalSelectorService"])
    .action(function($scope,$state, KyeeViewService, CustomPatientService, CacheServiceBus,LoginService,HospitalSelectorService){
        $scope.userInfo = {
            BIRTH:"",
            FLAG:"cloud",
            ID_NO:"",
            IS_CHILD:"",
            IS_DEFAULT:"",
            IS_SELECTED:"",
            LAST_SELECT:"",
            OFTEN_NAME:"",
            ROLE_CODE:"",
            SEX:"",
            STATUS:"",
            USER_ID:"",
            USER_VS_ID:"",
            Year:""
        };
        $scope.queryCustomPatient = function(){
            $scope.userId = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            CustomPatientService.queryCustomPatient($scope.userId, $scope.userInfo.FLAG, function(data){
            var aa=new Date();
            $scope.Year = aa.getFullYear();
                for(var a=0;a<data.data.length;a++){
                    var b = data.data[a].ID_NO.substring(6,10);
//                    console.info(data.data[a].ID_NO);
                    if(a>=0){
////                    data.data[a].CREATE_DATE = $scope.Year-b ;
//                      data.data[a].age = $scope.Year-b ;
                        if($scope.Year-b>=0){
                            data.data[a].age = $scope.Year-b ;
                        }else{
                            data.data[a].age = 0;
                        }
                    }
                }
            //分辨男女IS_SELECTED
            for(var i=0;i<data.data.length;i++)
            {
                if(data.data[i].SEX == 1){
                    data.data[i].SEX = "男";
                }else{
                    data.data[i].SEX = "女";
                }
            }
                if(!($scope.hospitalId == 1001)){
                    data.data.splice(0,1);
                }
                //被选中
                for(var i=0;i<data.data.length;i++)
                {
                    if(data.data[i].IS_SELECTED == 1){
//                        $scope.isSelect = data.data[i]
                        if($scope.hospitalId == 1001 && !(data.data[i].OFTEN_NAME =='体验就诊者')){
                            for(var n=0;n<data.data.length;n++){
                                if(data.data[n].OFTEN_NAME == '体验就诊者'){
                                    $scope.vs = data.data[n];
                                    console.info("体验就诊者数据："+$scope.vs);
                                    $scope.SelectVs();
                                }
                            }
                            //以下逻辑等李兴改好医院之后就不需要了
                        }else if(!($scope.hospitalId == 1001) && data.data[i].OFTEN_NAME =='体验就诊者'){
                            if(data.data[1] != undefined && data.data[1] !=null){
                            $scope.isNoVs = data.data[1];
                            $scope.SelectNoVs();
                            }
                        }
                        //之前在这里删除的体验就诊者
                        if(!($scope.hospitalId == 1001)){
//                            var ii = i-1;
                            $scope.chooseID = i
                            $scope.changeStyle(i);
                            console.log($scope.isSelect);
                        }else{
                        $scope.chooseID = i
                        $scope.changeStyle(i);
                        console.log($scope.isSelect);
                        }
                        if(n!=null&&n!=undefined){
                        $scope.chooseID = n
                        $scope.changeStyle(n);
                        console.log($scope.isSelect);
                        }
                    }
                }
                $scope.all = data.data;
            });
        };
        //选中体验就诊者
        $scope.SelectNoVs= function(){
            CustomPatientService.updateSelectFlag333($scope.isNoVs.OFTEN_NAME,$scope.hospitalId,
                $scope.isNoVs.USER_ID,$scope.isNoVs.USER_VS_ID, function(data){
                    LoginService.setPatientName($scope.isNoVs.OFTEN_NAME);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        $scope.isNoVs.USER_VS_ID);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_ID,
                        $scope.isNoVs.USER_ID);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).IS_DEFAULT,
                        $scope.isNoVs.IS_DEFAULT);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).ID_NO,
                        $scope.isNoVs.ID_NO);
                    if($scope.isNoVs.CARD_NO!=null&&$scope.isNoVs.CARD_NO!=undefined){
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                        $scope.isNoVs.CARD_NO);
                    }else{
                        CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                            "");
                    }
                    if($scope.isNoVs.PATIENT_ID!=null&&$scope.isNoVs.PATIENT_ID!=undefined){
                        CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                            $scope.isNoVs.PATIENT_ID);
                    }else{
                        CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                            "");
                    }
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).PHONE,
                        $scope.isNoVs.PHONE);
                });
        };
        //选中体验就诊者为选中就诊者
        $scope.SelectVs= function(){
            CustomPatientService.updateSelectFlag444($scope.vs.OFTEN_NAME,$scope.hospitalId,
                $scope.vs.USER_ID,$scope.vs.USER_VS_ID, function(data){
                    LoginService.setPatientName($scope.vs.OFTEN_NAME);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        $scope.vs.USER_VS_ID);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_ID,
                        $scope.vs.USER_ID);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).IS_DEFAULT,
                        $scope.vs.IS_DEFAULT);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).ID_NO,
                        $scope.vs.ID_NO);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                        JSON.parse($scope.vs.DETIAL_LIST)[0].CARD_NO);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).PHONE,
                        $scope.vs.PHONE);
                });
        };
        //选中就诊者
        $scope.updateSelectFlag222 = function(){
            CustomPatientService.updateSelectFlag222($scope.isSelect.OFTEN_NAME,$scope.hospitalId,
                $scope.isSelect.USER_ID,$scope.isSelect.USER_VS_ID, function(data){
                $scope.success = data.success;
                console.info("success:"+$scope.success);
                if($scope.success = true){
                    LoginService.setPatientName($scope.isSelect.OFTEN_NAME);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        $scope.isSelect.USER_VS_ID);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_ID,
                        $scope.isSelect.USER_ID);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).IS_DEFAULT,
                        $scope.isSelect.IS_DEFAULT);
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).ID_NO,
                        $scope.isSelect.ID_NO);
                    if($scope.isSelect.CARD_NO!=null&&$scope.isSelect.CARD_NO!=undefined){
                        CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                            $scope.isSelect.CARD_NO);
                    }else{
                        CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                            "");
                    }
                    if($scope.isSelect.PATIENT_ID!=null&&$scope.isSelect.PATIENT_ID!=undefined){
                        CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                            $scope.isSelect.PATIENT_ID);
                    }else{
                        CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO,
                            "");
                    }
                    CacheServiceBus.getMemoryCache().set((CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).PHONE,
                        $scope.isSelect.PHONE);
                    $state.go("center->MAIN_TAB");
                }
            });
        };
        //跳到选择医院
        $scope.backSelectHid=function(){
            console.info("返回~");
            $state.go("hospital_selector");
        }

        $scope.selecthid=function(){
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            if($scope.hospitalId!=null&&$scope.hospitalId!=undefined&&$scope.hospitalId!=""){
                var a = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
                console.info(a);
                $scope.queryCustomPatient();
            }else{
                HospitalSelectorService.enter("custom_patient");
                $scope.backSelectHid();
            }

        }
        $scope.selecthid();
        $scope.messages = CustomPatientService.queryMessages();
        $scope.xuanzhong = function(item,index){
            $scope.chooseID=index;
            console.log(item);
            $scope.isSelect = item;
            $scope.updateSelectFlag222();
//            var a = AddPatientInfoService.def=item.ID;
//            UpdateUserService.item = item;
//            $state.go("center->MAIN_TAB");
        },
        //根据选择判断ridio显示样式
        $scope.changeStyle=function(index){
            return $scope.chooseID==index;
        }
    })
    .build();

/**
 * Created by Administrator on 2015/4/26.
 *
 * 修改日期：2015-05-05 14:46
 * 修改人：朱学亮
 * 修改内容：完善部分切换角色的内容
 *
 * 修改时间：2015-05-06 10:46
 * 修改人：朱学亮
 * 修改内容：将切换后的角色信息同步到服务器
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.role_view")
    .require(["kyee.quyiyuan.center.service",
              "kyee.framework.service.message",
              "kyee.framework.service.view",
              "kyee.quyiyuan.center.service.RoleViewService",
              "kyee.quyiyuan.myquyi.service",
              "kyee.quyiyuan.login.service"])
    .type("controller")
    .name("RoleViewController")
    .params(["$scope",
             "$state",
             "RoleViewService" ,
             "KyeeMessageService",
             "KyeeViewService",
             "MyquyiService",
             "CacheServiceBus",
             "LoginService"])
    .action(function($scope, $state, RoleViewService, KyeeMessageService, KyeeViewService, MyquyiService, CacheServiceBus, LoginService){
        // 获取全局变量
        var cache = CacheServiceBus.getMemoryCache();
        // 判断用户是否登录
        if (!cache.get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN)) {
            // 用户未登录
            KyeeViewService.openModalFromUrl({
                scope: $scope,
                url: 'modules/business/login/index.html'
            });
            LoginService.frontPage = "2";
        }
        // 根据键值获取CURRENT_USER_RECORD
        // var user_record = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);
        // 获取当前用户角色
        // var current_role = user_record.ROLE_CODE;
        $scope.userName = "切换角色";
        $scope.currentChoose = "(当前角色)";
        RoleViewService.queryDevList(function(retVal){
            // 判断当前返回结果是否有效
            if (retVal.success && retVal.data && retVal.data.rows && (retVal.data.rows.length > 0)) {
                for (var i = 0; i < retVal.data.rows.length; i++) {
                    if (retVal.data.rows[i].ROLE_CODE == "3") {
                        retVal.data.rows.splice(i, 1);
                    }
                }
                $scope.devList = retVal.data.rows;
            } else {
                KyeeMessageService.message({
                    title : "提示",
                    content : "当前用户没有可选的角色！",
                    okText : "知道了"
                });
            }
        });

        // 控制选中的状态
        $scope.messageClick = function(index) {
            // 判断用户是否已经登录
            var cache = CacheServiceBus.getMemoryCache();
            if (!cache.get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN)) {
                // 用户未登录，需要跳转到登录界面
                this.openModal('modules/business/login/index.html');
                LoginService.frontPage = "2";
                return;
            }
            // 获取所选角色名
            $scope.chooseID = index;
            var roleCode = $scope.devList[index].ROLE_CODE;
            var roleName = "";
            switch (roleCode) {
                case "1":
                    roleName = "门诊患者";
                    break;
                case "2":
                    roleName = "住院患者";
                    break;
                case "3":
                    roleName = "医生";
                    break;
                case "4":
                    roleName = "普通用户";
                    break;
                default:
                    roleName = "未知用户";
            }
            // 弹出提示框，询问用户是否决定切换的index所对应的角色
            /**
             * 此处的逻辑：
             * 1. 普通用户无需确认信息，直接跳转至主页；
             * 2. 门诊患者，需要符合什么条件
             *      是否选择了医院，用户信息是否完善，是否选择了就诊者
             * 3. 住院患者，需要符合什么条件
             *      是否选择了医院，用户信息是否完善，是否选择了就诊者
             */
            // 当用户选择了门诊患者或住院患者时需要进行校验
            var user_record = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);
            if (roleCode == "1" || roleCode == "2") {
                // 判断是否选择了医院
                if (user_record.HOSPITAL_ID == 0) {
                    // 跳转至选择医院
                    return;
                }
                // 判断用户信息是否完善
                if (user_record.NAME == "" || user_record.NAME == null ||
                    user_record.ID_NO == "" || user_record.ID_NO == null) {
                    // 跳转至完善用户信息页面
                    this.openModal('modules/business/center/views/add_patient_info/comm_patient_detail.html');
                    return;
                }
                // 判断是否选择了就诊者
                if (!cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT)) {
                    $state.go("custom_patient");
                    return;
                }
            }

            KyeeMessageService.confirm({
                title: "提示信息",
                content: "确认切换至" + roleName + "角色？",
                onSelect:function(select) {
                    if (select) {
                        // 修改全局变量，并将此全局变量同步到服务器
                        var data = {ROLE_CODE:roleCode, USER_ID:user_record.USER_ID};
                        // 用户角色同步到服务器，调用updateUserRole方法，传入两个参数1、回调方法，2、data
                        RoleViewService.updateUserRole(function(retVal){
                            if (retVal.success) {
                                // 同步服务器成功
                                user_record.ROLE_CODE = roleCode;
                                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD, user_record);
                                // 1 --- 门诊患者；2 --- 住院患者；3 --- 医生；4 --- 普通用户
                                if(roleCode == "1") {
                                    // 门诊患者
                                    $state.go("myquyi->MAIN_TAB.medicalGuide");
                                } else if(roleCode == "2") {
                                    // 住院患者
                                    // 跳转我的趣医-住院业务界面
                                    $state.go("myquyi->MAIN_TAB.inpatientBusiness");
                                } else if(roleCode == "3") {
                                    // 用户选择医生
                                } else if(roleCode == "4") {
                                    // 普通用户 跳到主界面根据后台数据生成主页面
                                    $state.go("home");
                                }
                            } else {
                                // 同步服务器失败
                            }
                        }, data);
                    }
                }
            });
        }

        //根据选择判断ridio显示样式
        $scope.changeStyle=function(index){
            return $scope.chooseID==index;
        }

        $scope.openModal = function(url) {
            KyeeViewService.openModalFromUrl({
                scope: $scope,
                url: url
            });
        }

    })
    .build();
/**
 * Created by zhuxueliang on 15/5/6.
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.medical_insurance_card.controller")
    .require(["kyee.quyiyuan.center.service",
              "kyee.framework.service.message",
              "kyee.quyiyuan.center.medical_insurance_card.service",
              "kyee.quyiyuan.center.updateuser.service"])
    .type("controller")
    .name("MedicalInsuranceCardController")
    .params(["$scope",
             "KyeeMessageService",
             "KyeeViewService",
             "MedicalInsuranceCardService",
             "UpdateUserService",
             "CacheServiceBus"])
    .action(function($scope,
                     KyeeMessageService,
                     KyeeViewService,
                     MedicalInsuranceCardService,
                     UpdateUserControllerService,
                     CacheServiceBus){
        //初始化用户信息
        $scope.userInfo = {
            name : "",
            insuranceCardNum : "",
            insuranceCardPassword : "",
            validationNum : ""
        };

        // 获取上级页面传入的参数，通过UpdateUserControllerService
        // 该参数还有四个字段：USER_ID, USER_VS_ID, OFTEN_NAME, ID_NO
        $scope.bindData = UpdateUserControllerService.HOSPITAL_YB;

        // 设置姓名栏
        $scope.userInfo.name = $scope.bindData.OFTEN_NAME;

        $scope.hideModal = function(){
            KyeeViewService.hideModal({
                scope:$scope
            });
        };

        // 发送验证码
        $scope.getValidateNum = function() {
            var cache = CacheServiceBus.getMemoryCache();
            var user_record = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);
            MedicalInsuranceCardService.getValidateNum($scope.bindData, user_record.HOSPITAL_ID, $scope.userInfo.insuranceCardNum);
        }

        // 绑定医保卡按钮点击事件
        $scope.doBindInsuranceCard = function() {
            //判断是否输入密码
            if ($scope.userInfo.insuranceCardPassword == undefined || $scope.userInfo.insuranceCardPassword == "") {
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "请输入密码！",
                    okText : "知道了"
                });
            } else {
                var cache = CacheServiceBus.getMemoryCache();
                var user_record = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);
                MedicalInsuranceCardService.doBindInsuranceCard($scope.userInfo, $scope.bindData, user_record.HOSPITAL_ID, $scope);
            }
        }
    })
    .build();
/**
 * Created by Administrator on 2015/4/26.
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.query_his_card")
    .require(["kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.quyiyuan.center.service.QueryHisCardService",
        "kyee.quyiyuan.center.updateuser.service",
        "kyee.quyiyuan.center.CommPatientDetailService.service"])
    .type("controller")
    .name("QueryHisCardController")
    .params(["$state","$scope","KyeeMessageService", "KyeeViewService",
        "QueryHisCardService","CacheServiceBus","UpdateUserService","CommPatientDetailService"])
    .action(function($state,$scope,KyeeMessageService, KyeeViewService,QueryHisCardService,CacheServiceBus,
                     UpdateUserService,CommPatientDetailService){

        $scope.refresh=false;
        $scope.flag=true;

        $scope.getLastClass=undefined; //获取上一级页面
        $scope.getCurrentClass=0; //获取当前页面
        $scope.pageData=undefined; //获取上一级页面传递的数据

        $scope.PATIENT_CARD=undefined;//获取就诊卡所有卡列表
        $scope.isHasVCARD=false;  //判断当前取到的就诊卡列表中是否含有虚拟卡(当前默认没有)
        $scope.CardQueryHistory=undefined; //获取查取就诊卡历史记录

        $scope.notice=undefined; //界面上的提示信息
        $scope.checkStyleTag=false;  //查取就诊卡按钮样式变更标志
        $scope.createStyleTag=false; //生成就诊卡按钮样式变更标志
        $scope.unCheckStyleTag=false; //未查取到就诊卡时就诊卡列表的提示样式变更标志
        $scope.unInputStyleTag=false; //是否显示输入卡号样式标志
        $scope.deleteStyleTag=false; //是否显示删除标志

        $scope.commCardNo=undefined;  //选中当前就诊卡标记


        $scope.initView=function(){
            if(QueryHisCardService.lastClassFlag==1)  //从个人中心维护页面进入
            {
                $scope.getLastClass=1;
                //获取上一级页面传递过来的值
                var lastClassInfro=UpdateUserService.lastClassInfro;
                $scope.pageData=lastClassInfro.current_user_record;
                $scope.commCardNo=lastClassInfro.commCardNo;  //用户当前绑定的就诊卡
            }
            if(QueryHisCardService.lastClassFlag==2){  //从就诊者维护页面进入
                $scope.getLastClass=2;
                //获取上一级页面传递过来的值
                var lastClassInfro=CommPatientDetailService.lastClassInfro;
                $scope.pageData=lastClassInfro.current_user_record;
                $scope.commCardNo=lastClassInfro.commCardNo;  //用户当前绑定的就诊卡
            }

            //获取登陆用户缓存数据
            var Cache = CacheServiceBus.getMemoryCache();
            var currentUserRecord = Cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);

            if(!$scope.refresh){
                $scope.queryHisCardTap();  //查取就诊卡界面
            }

            $scope.setHintMessage(); //根据不同的查卡情形，显示不同的提示
            $scope.chooseTpye();  //获取查卡方式

            var date=$scope.CurentTime();

            //上次查询时间
            localStorage.synchronDate=(localStorage.synchronDate==undefined?date:localStorage.synchronDate);

            //关于删除就诊卡
            if($scope.getLastClass==1){
                $scope.queryDeleteCard(currentUserRecord.DEFAULT_USER_VS_ID);
            }else {
                $scope.queryDeleteCard( $scope.pageData.USER_VS_ID);
            }
        }
        //获取当前时间
        $scope.CurentTime= function() {
            var now = new Date();

            var year = now.getFullYear();       //年
            var month = now.getMonth() + 1;     //月
            var day = now.getDate();            //日

            var hh = now.getHours();            //时
            var mm = now.getMinutes();          //分

            var clock = year + "-";

            if(month < 10)
                clock += "0";

            clock += month + "-";

            if(day < 10)
                clock += "0";

            clock += day + " ";

            if(hh < 10)
                clock += "0";

            clock += hh + ":";
            if (mm < 10) clock += '0';
            clock += mm;
            return(clock);
        }
        //判断是否有已删除就诊卡信息
        $scope.queryDeleteCard=function(userVsId){
            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;
            QueryHisCardService.queryDeletedPatCardInfo(function(rsp){
                if(rsp.success){
                    var data=rsp.data;
                    if($scope.getCurrentClass==0) {
                        if (data.length > 0) {
                            $scope.deleteStyleTag=false;
                        } else {
                            $scope.deleteStyleTag=true;
                        }
                    }
                }else
                {
                    if($scope.getCurrentClass==0) {
                        $scope.deleteStyleTag=true;
                    }
                }
            },hospitalId,userVsId);
        }
        //获取查卡方式
        $scope.chooseTpye=function(){
            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;
            QueryHisCardService.queryHospitalParam(function(rsp){
                if(rsp.success){
                    var data=rsp.data;
                    var type = data.QUERYCARDTYPE;
                    //不输入卡号
                    if(type=='0'){
                        $scope.unInputStyleTag=true;
                    }
                }else
                {
                }
            },hospitalId);
        }

        //根据不同的查卡情形，显示不同的提示
        $scope.setHintMessage=function(){
            QueryHisCardService.getHint(function(rsp){
                if(rsp.success){
                    $scope.notice=rsp.data;
                }else
                {
                }
            });
        }
        //获取就诊者卡信息列表
        $scope.queryHisCardTap=function(){
            $scope.unCheckStyleTag=true;
            var param=$scope.pageData;
            var name;
            var phone;
            var uservsId;
            if($scope.getLastClass==1){ //如果上一个页面是个人中心
                name=param.NAME;
                phone=param.PHONE_NUMBER;
                //兼容1.0.7之前没有默认就诊者错误问题（无就诊者即DEFAULT_USER_VS_ID为空）KYEEAPPTEST-677 2014年10月23日17:00:43
                if(param.DEFAULT_USER_VS_ID==undefined
                    ||param.DEFAULT_USER_VS_ID==""){
                    return;
                }
                uservsId=param.DEFAULT_USER_VS_ID;
            }else{
                name=param.OFTEN_NAME; //没有参数
                phone=param.PHONE;  //没有参数
                uservsId=param.USER_VS_ID;
            }

            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;

            var idNo=param.ID_NO;
            //去HIS中查取就诊卡
            QueryHisCardService.queryHisPatCardInfo(function(rsp){
                if(rsp.success){
                    $scope.refresh=true;
                    $scope.flag=false;

                    if($scope.getCurrentClass==0){
                        $scope.queryCard($scope.pageData);
                    }
                }else
                {
                    //查询失败
                    if($scope.getCurrentClass==0) {
                        $scope.unCheckStyleTag=false;
                        // $scope.anomalyInfo(operation);  异常处理，需要在连同的时候判断各种情形。暂时未做
                    }
                }

            },hospitalId,name,idNo,phone,uservsId);
        }
        //获取页面顶部的就诊卡列表
        $scope.queryCard=function(data) {
            //获取登陆用户缓存数据
            var Cache = CacheServiceBus.getMemoryCache();
            var currentUserRecord = Cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);

            //查询－－查卡纪录
            if($scope.getLastClass==1){
                $scope.queryCardHistory(currentUserRecord.DEFAULT_USER_VS_ID);
            }else{
                $scope.queryCardHistory($scope.pageData.USER_VS_ID);
            }
            $scope.unCheckStyleTag=true;
            var name;
            if($scope.getLastClass==1){
                name=data.NAME;
                userVsId=currentUserRecord.DEFAULT_USER_VS_ID;
            }else{
                name=data.OFTEN_NAME;
                userVsId=data.USER_VS_ID;
            }

            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;

            //查取当前默认就诊者的卡信息
            QueryHisCardService.getCorrespondCardInfo(function(rsp){
                if(rsp.success){
                    if ($scope.getCurrentClass == 0) {
                        // 获取卡信息成功
                        var data=rsp.data;
                        if (data.length > 0) {
                            if (data[0].IS_SHOW_CREATE_BUTTON == 'true') {
                                //查取就诊卡和生成就诊卡按钮变更
                                $scope.checkStyleTag=true;
                                $scope.createStyleTag=true;
                            }
                            var patCard = [];
                            for (var i = 0; i < data.length; i++) {
                                if(data[i].CARD_NO==data[i].VCARD_NO){
                                    data[i].WORVCARD= '（虚拟卡）';
                                    data[i].WORVCARDFLAG='仅支持预约挂号功能';
                                    $scope.isHasVCARD=true;
                                }else{
                                    data[i].WORVCARD= '';
                                    data[i].WORVCARDFLAG='';
                                    $scope.isHasVCARD=false;
                                }

                                patCard.push(data[i]);
                            }
                            $scope.PATIENT_CARD = patCard;
                            $scope.unCheckStyleTag=false;

                        }
                        else {
                            if (data.IS_SHOW_CREATE_BUTTON == 'true') {
                                //查取就诊卡和生成就诊卡按钮变更
                                $scope.checkStyleTag=true;
                                $scope.createStyleTag=true;
                            }
                            $scope.PATIENT_CARD = [];
                            $scope.isHasVCARD=false;
                            $scope.unCheckStyleTag=false;
                        }
                        var memoryCache = CacheServiceBus.getMemoryCache();
                        var currentCustomPatient = memoryCache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);

                        //如果是当前就诊者，修改该就诊者下绑定的卡信息  KYEEAPPTEST-671
                        if (currentCustomPatient!=undefined && currentCustomPatient.USER_VS_ID == userVsId) {
                            //将当前就诊着的信息变更重新
                            var cache = CacheServiceBus.getMemoryCache();
                            cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT.PATIENT_CARD,$scope.PATIENT_CARD);
                        }
                    }
                }else
                {

                }

            },userVsId,hospitalId);
        }
        $scope.queryCardHistory=function(userVsId){
            QueryHisCardService.queryCardRecord(function(rsp) {
                if (rsp.success) {
                    var data=rsp.data;
                    if (data.length > 0) {
                        var checkCardhistory = [];
                        for (var i = 0; i < data.length; i++) {
                            checkCardhistory.push(data[i]);
                        }
                        $scope.CardQueryHistory = checkCardhistory;
                    }
                    else {
                        $scope.CardQueryHistory = [];
                    }
                }
                else{

                }
            },userVsId);
        }
        //根据查询出来的卡列表设置页面卡列表滚动条的高度
        $scope.createHightStyle=function(){
            if($scope.PATIENT_CARD!=undefined)
            {
                if( $scope.PATIENT_CARD.length>2){
                    return "height:127px";
                }else{
                    if($scope.PATIENT_CARD.length==1){
                        return "height:42px";
                    }
                    if($scope.PATIENT_CARD.length==2){
                        return "height:85px";
                    }
                }
            }
        }
        $scope.createHisCardByCardTap= function(){
            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;
            QueryHisCardService.getVisualCardSupport(function(rsp) {
                if (rsp.success) {
                    //var result=operation.getResponse().responseText;
                    //var msg=Ext.JSON.decode(result).message;
                    //var me=this;
                    //this.msgBox=Ext.Msg.confirm("提示", msg,function(btn){
                    //    if (btn==='yes')
                    //    {
                    //        if(msg=='暂不支持虚拟卡'){
                    //            return;
                    //        }
                    //        $scope.loadCreateVisualCard();
                    //    }
                    //});

                }
                else{
                    //查询失败
                    //     Ext.Msg.alert("温馨提示", "网络异常！");

                }
            },hospitalId);
        }
        //生成虚拟卡Store加载
        $scope.loadCreateVisualCard=function(){
            //获取登陆用户缓存数据
            var Cache = CacheServiceBus.getMemoryCache();
            var currentUserRecord = Cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);

            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;

            var userVsID=$scope.pageData.USER_VS_ID;
            if($scope.getLastClass==1){
                userVsID=currentUserRecord.DEFAULT_USER_VS_ID;
            }
            QueryHisCardService.createVisualCard(function(rsp) {
                if (rsp.success) {
                    //if($scope.getCurrentClass == 0) {
                    //    $scope.checkStyleTag=true;
                    //    $scope.createStyleTag=false;
                    //}
                    //localStorage.commCardNo=records[0].raw.data.CARD_NO;
                    //var cache = CacheServiceBus.getMemoryCache();
                    //cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO,records[0].raw.data);
                    //
                    //
                    //$scope.queryCard(this.pageData);

                }
                else{
                    //查询失败
                    //  Ext.Msg.alert("温馨提示", "网络异常！");
                }
            },hospitalId,userVsID);
        },
        //根据选择判断ridio显示样式
        $scope.changeStyle=function(CARD_NO){
            return $scope.commCardNo==CARD_NO;
        }
        //控制是否显示切换就诊卡
        $scope.switchStyle=function(CARD_NO,WORVCARD) {
            if($scope.isHasVCARD){
                if(WORVCARD == '（虚拟卡）')
                {
                    return false;
                }
                else
                {
                    if ($scope.commCardNo == CARD_NO) {
                        return false;
                    }
                    else
                    {
                        return true;
                    }
                }
            }
            else{
                return false;
            }
            //if ($scope.commCardNo == CARD_NO && WORVCARD == '（虚拟卡）') {
            //    return false;
            //}
            //else {
            //    if($scope.isHasVCARD) //判断当前获取的就诊卡列表中是否含有虚拟卡
            //    {
            //        return true; //有虚拟卡
            //    }
            //    else
            //    {
            //        return false;  //无虚拟卡
            //    }
            //}
        }
        $scope.hiddenStyle=function(CARD_NO,WORVCARD) {
            if($scope.isHasVCARD&&$scope.commCardNo == CARD_NO&& WORVCARD != '（虚拟卡）'){
                return false;
            }
            else
            {
                return  true;
            }

        }

        //点击卡list事件
        $scope.cardListTapClick=function(index){
            var data = $scope.pageData;
            var cardInfo =$scope.PATIENT_CARD;
            //点击选中
            $scope.commCardNo=cardInfo[index].CARD_NO;  //点击切换动作后，更改选中状态

            //将该卡号保存为该就诊者的默认卡
            var userVsId=cardInfo[index].USER_VS_ID;
            var cardNo = cardInfo[index].CARD_NO;

            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;

            QueryHisCardService.updateCardByUserVsId(function(rsp) {
                if (rsp.success) {
                    $scope.refreshData(userVsId);

                    if($scope.getLastClass==1){  //跳转个人信息页面
                        $state.go("update_user");   //TODO  暂时模态向路由跳转无法实现
                    }
                    if($scope.getLastClass==2){  //跳转就诊者信息页面
                        $scope.openModal("modules/business/center/views/add_patient_info/comm_patient_detail.html");
                    }
                }
                else{

                }
            },userVsId,cardNo,hospitalId);
        }
        $scope.refreshData=function(userVsId){
            //获取当前就诊者信息
            var memoryCache = CacheServiceBus.getMemoryCache();
            var currentCustomPatient = memoryCache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);

            //获取登陆用户缓存数据
            var Cache = CacheServiceBus.getMemoryCache();
            var currentUserRecord = Cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);

            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId=hospital_info.id;

            if(userVsId==currentCustomPatient.USER_VS_ID){
                var useId = currentUserRecord.USER_ID;

                QueryHisCardService.selectedCustomPatient(function(rsp) {
                    if (rsp.success) {
                        if (rsp.data.length <= 0) {
                            return;
                        }
                        var data=rsp.data;
                        //成功并且有数据，解析该就诊者的卡信息
                        var detialList = JSON.parse(data[0].DETIAL_LIST);
                        data[0].PATIENT_CARD = [];
                        if (detialList != null) {
                            for(var index = 0; index < detialList.length; index++){
                                detialList[index].USER_VS_ID = data[0].USER_VS_ID;
                                //排除重复的卡号，并且清理空的身份证
                                var isExist = true;
                                for(var indexCard = 0; indexCard < data[0].PATIENT_CARD.length; indexCard++){
                                    if (data[0].PATIENT_CARD[indexCard].PATIENT_ID == detialList[index].PATIENT_ID) {
                                        if (data[0].PATIENT_CARD[indexCard].ID_NO == null
                                            || data[0].PATIENT_CARD[indexCard].ID_NO == undefined) {
                                            data[0].PATIENT_CARD[indexCard] = detialList[index];
                                        }
                                        else {
                                            isExist = false;
                                        }
                                    }
                                }
                                if (isExist) {
                                    data[0].PATIENT_CARD.push(detialList[index]);
                                }
                            }
                        }
                        CacheServiceBus.getMemoryCache().set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO,
                            data[0].PATIENT_CARD[0]);
                        data[0].CARD_NO = CacheServiceBus.getMemoryCache().get(
                            CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO).CARD_NO;
                        CacheServiceBus.getMemoryCache().set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT,
                            data[0]);

                    }
                    else{

                    }
                },useId,hospitalId);
            }
        }
        //切换物理卡
        $scope.switchPhysicalCard=function(index){
            var arr=$scope.PATIENT_CARD;
            var vCardId='';
            if(arr!=null&&arr.length>0){
                for(var i=0;i<arr.length;i++){
                    if(arr[i].CARD_NO==arr[i].VCARD_NO){
                        vCardId=arr[i].SYS_PATIENT_ID;
                    }
                }
            }
            //获取登陆用户缓存数据
            var Cache = CacheServiceBus.getMemoryCache();
            var currentUserRecord = Cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);

            var userVsID=$scope.pageData.USER_VS_ID;
            if($scope.getLastClass==1){
                userVsID=currentUserRecord.DEFAULT_USER_VS_ID;
            }

            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId = hospital_info.id;

            var pCardId=arr[index].SYS_PATIENT_ID;

            KyeeMessageService.confirm({
                title: "温馨提示",
                content: "是否切换到该就诊卡，切换后虚拟卡将查取不到",
                onSelect: function (select) {
                    //获取用户的选择，判断是否注销
                    if (select) {
                        QueryHisCardService.changeVCardToPCard(function (rsp) {
                            if (rsp.success) {
                                $scope.commCardNo=arr[index].CARD_NO;
                                $scope.queryCard($scope.pageData);  //todo  切换后为何换需要查取一遍？？
                            }
                            else {
                                $scope.warnMessage("切换物理卡失败！");
                            }
                        }, hospitalId,userVsID,pCardId,vCardId);
                    }
                }
            });
        }
        $scope.deleteCard=function(index) {
            var data = $scope.pageData;
            var cardInfo = $scope.PATIENT_CARD;

            //获取医院缓存数据
            var Cache = CacheServiceBus.getStorageCache();
            var hospital_info = Cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
            var hospitalId = hospital_info.id;
            var cardNo = cardInfo[index].CARD_NO;
            var pId = cardInfo[index].PATIENT_ID;

            KyeeMessageService.confirm({
                title: "温馨提示",
                content: "就诊卡" + cardInfo[index].CARD_NO + "是否确认删除？删除后将会查取不到",
                onSelect: function (select) {
                    //获取用户的选择，判断是否注销
                    if (select) {
                        $scope.PATIENT_CARD.splice(index,1);
                        QueryHisCardService.updateCardStatus(function (rsp) {
                            if (rsp.success) {
                               // $scope.isHiddenTag=false;  todo 删除后标题头部的恢复删除图标出现
                            }
                            else {
                                $scope.warnMessage("就诊卡删除失败！");
                            }
                        }, hospitalId, cardNo, pId);
                    }
                }
            });
        }
        //预警提示
        $scope.warnMessage = function (message) {
            KyeeMessageService.message({
                title: "提示",
                content: message,
                okText: "知道了"
            });
        }
        $scope.hideModal = function(){
            KyeeViewService.hideModal({
                scope:$scope
            });
        };

        //跳转页面
        $scope.openModal = function(url) {
            KyeeViewService.openModalFromUrl({
                scope: $scope,
                url: url
            });
        }

    })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：个人信息维护控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.controller.update_user")
    .require([
        "kyee.quyiyuan.center.service",
        "kyee.framework.service.message",
        "kyee.framework.service.view",
        "kyee.quyiyuan.center.controller.query_his_card",
        "kyee.quyiyuan.center.updateuser.service",
        "kyee.quyiyuan.center.medical_insurance_card.controller",
        "kyee.quyiyuan.center.authentication.controller"])
    .type("controller")
    .name("UpdateUserController")
    .params(["$scope",
        "$state",
        "KyeeMessageService",
        "KyeeViewService",
        "UpdateUserService",
        "CacheServiceBus",
        "HospitalSelectorService",
        "CommPatientDetailService",
        "QueryHisCardService",
        "LoginService"])
    .action(function($scope,
                     $state,
                     KyeeMessageService,
                     KyeeViewService,
                     UpdateUserService,
                     CacheServiceBus,
                     HospitalSelectorService,
                     CommPatientDetailService,
                     QueryHisCardService,
                     LoginService){
        $scope.userInfo = {
            PHONE_NUMBER : "",
            NAME : "",
            ID_NO : "",
            SEX : "",
            loginNum: "",
            isjiuzhen:"",
            isyibao:"",
            paramName:"showCard",
            userVsId:"",
            CARD_NO:"",
            VCARD_NO:"",
            PARAM_NAME:"MedicalPay",
            FLAG:"3",
            sms:"",
            phoneNumDisabled : false,
            validateBtnDisabled : false,
            BIRTHDAY:"",
            AZURE:"",
            validateMsgText : "获取验证码",
            STATUS:"",
            OFTEN_NAME:"",
            isShowYi:false,
            isShowJiu:false,
            SmsMom:false,
            Health:"查询",
            clickHealth:false,
            Y_CARD:"",
            ToShowCard:""
        };
        $scope.userId = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
        $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
        console.info($scope.userId);
        console.info($scope.hospitalId);
        console.info($scope.userInfo.paramName);
        $scope.ToCard = function(){
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            if($scope.hospitalId != null&&$scope.hospitalId!=undefined){
                if($scope.userInfo.ID_NO!=null&&$scope.userInfo.ID_NO!=undefined&&
                    $scope.userInfo.NAME!=null&&$scope.userInfo.NAME!=undefined){
                    $scope.xianshi();
                    if(UpdateUserService.tijiao($scope)){
                        QueryHisCardService.lastClassFlag = 1;
                        $scope.openModal('modules/business/center/views/update_user/query_his_card.html');
                    }else{
//                        UpdateUserService.IDisNull();
                    }
                }else{
                    UpdateUserService.IDisNull();
                }
            }else{
                HospitalSelectorService.enter("update_user");
                $scope.backSelectHid();
            }
        }
        $scope.ToRealName = function(){
            $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
                if($scope.userInfo.ID_NO!=null&&$scope.userInfo.ID_NO!=undefined&&
                    $scope.userInfo.NAME!=null&&$scope.userInfo.NAME!=undefined){
                    $scope.xianshi();
                    if(UpdateUserService.tijiao($scope)){
                        $scope.openModal('modules/business/center/views/authentication/authentication.html');
                    }else{
//                        UpdateUserService.IDisNull();
                    }
                }else{
                    UpdateUserService.IDisNull();
                }
        }
        //获取个人信息
        $scope.searchInit = function(){
            console.info("查取个人信息");
            UpdateUserService.queryUserInfo($scope.userId, function(data){
                $scope.userInfo.PHONE_NUMBER = data.data.PHONE_NUMBER;
                $scope.userInfo.ORG_PHONE_NUMBER = data.data.PHONE_NUMBER;
                $scope.userInfo.NAME = data.data.NAME;
                $scope.userInfo.ID_NO = data.data.ID_NO;
                $scope.userInfo.SEX = data.data.SEX;
                UpdateUserService.item = data.data.PHONE_NUMBER;
                $scope.userInfo.BIRTHDAY = UpdateUserService.convertIdNo($scope.userInfo.ID_NO);
                console.info("你的出生日期是："+$scope.userInfo.BIRTHDAY);
                $scope.showCard();
                $scope.getUserVsId();
            });
        };
        //是否显示就诊卡
        $scope.showCard = function(){
            console.info("是否显示就诊卡");
            UpdateUserService.showCard($scope.hospitalId,$scope.userInfo.paramName, function(data){
                $scope.hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
                if($scope.hospitalId!=null&&$scope.hospitalId!=null&&$scope.hospitalId!=""){
                $scope.userInfo.isjiuzhen = data.data.showCard;
                console.info("0显示，1不显示:"+$scope.userInfo.isjiuzhen);
                $scope.xianshijiuzhen();
                }
            });
        };
        $scope.getUserVsId = function(){
            console.info("获取默认就诊者信息");
            UpdateUserService.getDefaultUserVsId($scope.userId,function(data){
                console.info("USER_VS_ID:"+$scope.userInfo.userVsId);
                if(data.data!= null && data.data!= undefined )
                {
                    $scope.userInfo.userVsId = data.data.USER_VS_ID;
                    $scope.userInfo.OFTEN_NAME = data.data.OFTEN_NAME;
                    UpdateUserService.HOSPITAL_YB = {USER_ID: $scope.userId, USER_VS_ID:$scope.userInfo.userVsId,
                    OFTEN_NAME:$scope.userInfo.OFTEN_NAME,ID_NO:$scope.userInfo.ID_NO};
                    UpdateUserService.HOSPITAL_SM = {OFTEN_NAME:$scope.userInfo.OFTEN_NAME,
                    ID_NO:$scope.userInfo.ID_NO,PHONE:$scope.userInfo.PHONE_NUMBER,FLAG:$scope.userInfo.FLAG};
                    UpdateUserService.HOSPITAL_JZ = {USER_ID: $scope.userId, USER_VS_ID:$scope.userInfo.userVsId,
                    OFTEN_NAME:$scope.userInfo.OFTEN_NAME,ID_NO:$scope.userInfo.ID_NO,PHONE:$scope.userInfo.PHONE_NUMBER};
                    UpdateUserService.F_LAG = 1;
                    CommPatientDetailService.F_LAG = 0;
                    if($scope.hospitalId !=null&&$scope.hospitalId!=undefined&&$scope.hospitalId!=""){
                        $scope.queryBindCardNo();
                        $scope.getHospitalParam();
                    }
                }
            });
        };
        $scope.getHospitalParam = function(){
            console.info("显示医保卡请求");
            UpdateUserService.getHospitalParam($scope.hospitalId,$scope.userInfo.PARAM_NAME,function(data){
                $scope.userInfo.isyibao = data;
                console.info("显示医保卡请求"+data);
                $scope.xianshiyibao();
            });
        };
        $scope.sendRegCheckCodeActionC = function(){
            UpdateUserService.sendRegCheckCodeActionC($scope.hospitalId,$scope.userInfo.PHONE_NUMBER,$scope.userInfo.NAME,function(data){
                var chineseRegex = /[^\x00-\xff]/g;
                var a = data.data.MESSAGE_CONTENT.replace(chineseRegex,"");
                $scope.userInfo.sms = a.substring(0,4);
                console.info("短信验证码"+$scope.userInfo.loginNum );
            });
        };

        $scope.item = UpdateUserService.item;
        $scope.xianshi = function(){
            if($scope.userInfo.PHONE_NUMBER!=null&&$scope.userInfo.PHONE_NUMBER!=undefined
                && $scope.userInfo.ORG_PHONE_NUMBER == $scope.userInfo.PHONE_NUMBER){
                $scope.userInfo.AZURE = 1;
                console.info("验证码默认通过");
                $scope.userInfo.SmsMom = false;
            }else{
            console.info("验证码为空");
            $scope.userInfo.AZURE = 0;
            $scope.userInfo.SmsMom = true;
            console.info($scope.userInfo.SmsMom);
            }
        };
        $scope.queryBindCardNo = function(){
            console.info("获取就诊卡信息");
            UpdateUserService.queryBindCardNo($scope.userInfo.userVsId,$scope.hospitalId,function(data){
                $scope.userInfo.CARD_NO = data.data.CARD_NO;
                $scope.userInfo.VCARD_NO = data.data.VCARD_NO;
                console.info("CARD_NO:"+$scope.userInfo.CARD_NO+"VCARD_NO:"+$scope.userInfo.VCARD_NO);

                //给查取就诊卡页面传值（必须写在回调函数中，确保有值）
                UpdateUserService.lastClassInfro = {
                    current_user_record: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD),
                    commCardNo:$scope.userInfo.CARD_NO
                };
            });
        };
        $scope.queryMedicalSecurityCardInfo = function(){
            console.info("获取医保卡信息");
            UpdateUserService.queryMedicalSecurityCardInfo($scope.hospitalId,$scope.userInfo.userVsId,
                $scope.userInfo.OFTEN_NAME,$scope.userInfo.ID_NO,function(data){
                $scope.userInfo.STATUS = data.data.STATUS;
                    if(data.data.STATUS = 0003){
                        $scope.userInfo.Health = "未绑定";
                        $scope.userInfo.clickHealth = false;
                    }else if(data.data.STATUS = 0002){
                        $scope.userInfo.Health = "绑定中";
                        $scope.userInfo.clickHealth = false;
                    }else if(data.data.STATUS = 0001){
                        $scope.userInfo.Health = "已绑定";
                        $scope.userInfo.clickHealth = true ;
                        $scope.userInfo.Y_CARD = data.data.MEDICAL_SECURITY_CARD_NO ;
                    }else if(data.data.STATUS = 0000){
                        $scope.userInfo.Health = "绑定失败";
                        $scope.userInfo.clickHealth = false ;
                    }
            });
        };
        $scope.updateuser = function(){
            UpdateUserService.updateuser($scope.post,$scope.userInfo.CARD_NO,$scope.hospitalId,function(data){
                console.info("提交成功~");
            });
        };
        $scope.searchInit();
        $scope.createSex=function()
        {
            var ID_NO = $scope.userInfo.ID_NO;
            if(ID_NO!=null&&ID_NO!=undefined){
            var Id = ID_NO.trim();
            var sex = Id.substring(16,17);
            if (!isNaN(sex))
            {
                if(Id.length > 16){
                    if (sex%2==0)
                    {
                        $scope.userInfo.SEX = 2;
                        return "女";
                    }else
                    {
                        $scope.userInfo.SEX = 1;
                        return "男";
                    }
                }
            }
            }
        };
        $scope.userName = "个人信息维护";
        $scope.openModal = function(url){
            KyeeViewService.openModalFromUrl({
                scope : $scope,
                url : url
            });
        };
        $scope.getValiteCode = function(){
            console.info("发送验证码");
            //bug 此处暂时留空
            if(UpdateUserService.getValiteCode($scope.userInfo.PHONE_NUMBER)){
                $scope.sendRegCheckCodeActionC();
                $scope.userInfo.phoneNumDisabled = true;
                $scope.userInfo.validateBtnDisabled = true;
            }

        };
        //是否显示就诊卡
        $scope.xianshijiuzhen = function(){
            if($scope.userInfo.isjiuzhen == 0){
                console.info("显示就诊卡");
                $scope.userInfo.isShowJiu = true;
            }else if($scope.userInfo.isjiuzhen == 1){
                console.info("隐藏就诊卡");
                $scope.userInfo.isShowJiu = false;
            }
        };
        //认证状态
        $scope.renzheng = function(){
            if($scope.userInfo.FLAG == 1){
                console.info("先显示未认证，以后拿到了FLAG就根据来判断");
                return "已认证";
            }else if($scope.userInfo.FLAG == 2){
                return "未认证";
            }else if($scope.userInfo.FLAG == 3){
                return "未认证";
            }
        };
        //是否显示医保卡
        $scope.xianshiyibao = function(){
            if($scope.userInfo.isyibao == 1){
                console.info("显示医保卡");
                $scope.queryMedicalSecurityCardInfo();
                $scope.userInfo.isShowYi = true;
            }else if($scope.userInfo.isyibao == 0){
                console.info("隐藏医保卡");
                $scope.userInfo.isShowYi = false;
            }
        };
        //提交
        $scope.tijiao = function(){
            $scope.xianshi();
            if($scope.userInfo.validateMsgText != "获取验证码"||$scope.userInfo.AZURE == 1){
            if($scope.userInfo.ID_NO!=null&&$scope.userInfo.ID_NO!=undefined&&
                $scope.userInfo.NAME!=null&&$scope.userInfo.NAME!=undefined){
            if(UpdateUserService.tijiao($scope)){
                $scope.post = JSON.stringify({
                    ID_NO:$scope.userInfo.ID_NO,USER_ID:$scope.userId,
                    NAME:$scope.userInfo.NAME,PHONE_NUMBER:$scope.userInfo.PHONE_NUMBER,
                    BIRTHDAY:$scope.userInfo.BIRTHDAY,SEX:$scope.userInfo.SEX})
                $scope.updateuser();
                UpdateUserService.isSucess();
                $scope.backToFront();
            }
            }else{
                UpdateUserService.isNulls();
            }
            }else{
                UpdateUserService.SmsisNulls();
            }
        };
        //返回到上一个页面
        $scope.backToFront=function(){
            console.info("返回~");
            $state.go("center->MAIN_TAB");
        }
        //跳到选择医院
        $scope.backSelectHid=function(){
            console.info("返回~");
            $state.go("hospital_selector");
        }
    })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：新增就诊者服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.AddCustomPatientService.service")//baobing
    .require(["kyee.framework.service.messager"])//input
    .type("service")
    .name("AddCustomPatientService")
    .params([
        "$state",
        "KyeeMessageService",
        "KyeeViewService",
        "HttpServiceBus"
    ])
    .action(function($state, KyeeMessageService, KyeeViewService,HttpServiceBus){
        var def = {
            //是否显示儿童
            queryHospitalParam : function(hospitalId,paramName, onSuccess){
                HttpServiceBus.connect({
                    url : "/hospitalInform/action/HospitalinforActionC.jspx",
                    params : {
                        hospitalId : hospitalId,
                        paramName:paramName,
                        op : "queryHospitalParam"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                    }
                });
            },
            //短信验证
            sendRegCheckCodeActionC : function(hospitalId,PHONE_NUMBER,USER_NAME,onSuccess){
                HttpServiceBus.connect({
                    url : "/user/action/DataValidationActionC.jspx",
                    params : {
                        hospitalId : hospitalId,
                        messageType:2,
                        PHONE_NUMBER:PHONE_NUMBER,
                        USER_NAME:USER_NAME,
                        modId:10001,
                        op : "sendRegCheckCodeActionC"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                            def.onRefreshDataviewDelay();
                        }
                        console.info("验证码这边没返回结果");
                    }
                });
            },
            //身份证校验
            IdNoisExist : function(ID_NO,USER_ID,onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        ID_NO:ID_NO,
                        USER_ID : USER_ID,
                        op : "IdNoisExist"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                    }
                });
            },
            idIsNulls : function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "身份证已存在！",
                    okText : "知道了"
                });
            },
            //提交
            addCustomPatient : function(postdata,hospitalID,onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        postdata : postdata,
                        hospitalID:hospitalID,
                        op : "addCustomPatient"

                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                        KyeeMessageService.message({
                            title : "提示信息",
                            content : "添加就诊者成功！",
                            okText : "知道了"
                        });
                    }
                });
            },
            ok : function(){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "身份证重复！",
                        okText : "知道了"
                    });
            },
            //创建生日，目前没有格式日期，先写死
//            createBirthday: function (idNo) {
//                idNo = idNo.trim();//清空字符串前后无用字符
//                if (isNaN(idNo.substring(0, 14))) {
//                    //不是数字,显示当前日期
//                    return Ext.Date.format(new Date(), "Y-m-d");
//                    ;
//                }
//                else {
//                    //是数字
//                    var year = idNo.substring(6, 10);//年
//                    var month = idNo.substring(10, 12);//月
//                    var day = idNo.substring(12, 14);//日
//                    //格式不正确
//                    if (month > 12 || month < 1 || day > 31 || day < 1) {
//                        return Ext.Date.format(new Date(), "Y-m-d");
//                    }
//                    return year + "-" + month + "-" + day;
//                }
//            },
            //失去焦点时，身份证转化为日期，目前没有格式日期，先写死
            convertIdNo: function (idno) {
//                var ID_NO = idno;     //获取输入的身份证值
//                idNo = ID_NO.trim();//清空字符串前后无用字符
//                var birthday = this.createBirthday(ID_NO);
//                var date = Ext.Date.format(new Date(birthday), "Y-m-d");
                return "2000-00-00";
            },
            onRefreshDataviewDelay : function(){
                def.second = 120;
                var validateMsgBtn = document.getElementById("SmsBtnX");
                var phoneNumInput = document.getElementById("PhoneBtnX");
                def.task=window.setInterval(def.setBtnState, 1000, phoneNumInput, validateMsgBtn);
            },
            setBtnState: function (phoneNumInput, validateMsgBtn) {
                try {
                    if (def.second != -1) {
                        //直接操作$scope中的模型效率低下并且页面无法更新,因此直接操作dom
                        validateMsgBtn.innerText = '剩余' + def.second + '秒';
                        def.second--;
                    } else {
                        //直接操作$scope中的模型使页面无法更新,因此直接操作dom
                        validateMsgBtn.removeAttribute("disabled");
                        phoneNumInput.removeAttribute("disabled");
                        validateMsgBtn.innerText = '获取验证码';
                        clearInterval(def.task);
                    }
                } catch (e) {
                    clearInterval(def.task);
                }
            },
            //先校验姓名
            validateXingMing : function(xingming){
                if(xingming == 0){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "姓名不能为空！",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            },
            //校验手机号（是否为空、格式是否错误、长度是否错误、是否被绑定)
            validatePhoneNum : function(phoneNum){
                var phoneNum = phoneNum.trim();
                //为空则提示并返回
                if(!phoneNum){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "手机号不能为空！",
                        okText : "知道了"
                    });
                    return false;
                } else if (!this.isMobil(phoneNum)) {
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "手机号格式或长度错误！",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            },
            validateLoginNum : function(loginNum,sms){
                if(!loginNum){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "验证码不能为空！",
                        okText : "知道了"
                    });
                    return false;
                }else if(loginNum != sms){  //bug 此处验证码先写死为1
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "验证码输入错误！",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            },
            //校验性别
            validateExce : function(exc){
            if(exc==""){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "尚未选择性别！",
                    okText : "知道了"
                });
                return false;
            }
            return true;
            },
            //身份证校验算法
            idNoCheck: function (idNo) {
                //idNo=idNo.trim();//清空字符串前后无用字符
                if (idNo.length != 18) //判断身份证号是否大于18位
                {
                    return false;
                }
                else if (isNaN(idNo.substring(0, 17))) //切割字符串从第0个开始，长度为17-0位,第0位到第17位,判断是否为非数值
                {
                    return false;
                }
                else if (isNaN(idNo.substring(17))) //切割字符串从第0个开始，长度为17位
                {
                    //判断是否最后一位为X，需要进行大小写转换，避免由于大小写问题造成的验证失败
                    if (idNo.substring(17, 18).toUpperCase() != 'X') //判断最后以为是否为X
                    {
                        return false;
                    }
                }
                return this.authIdNo(idNo); //身份证最后一位验证算法
            },
            //校验算法
            authIdNo: function (idNo) {
                //系数枚举
                var authArray = new Array();
                authArray[0] = 7;
                authArray[1] = 9;
                authArray[2] = 10;
                authArray[3] = 5;
                authArray[4] = 8;
                authArray[5] = 4;
                authArray[6] = 2;
                authArray[7] = 1;
                authArray[8] = 6;
                authArray[9] = 3;
                authArray[10] = 7;
                authArray[11] = 9;
                authArray[12] = 10;
                authArray[13] = 5;
                authArray[14] = 8;
                authArray[15] = 4;
                authArray[16] = 2;

                //对照值枚举
                var refArray = new Array();
                refArray[0] = 1;
                refArray[1] = 0;
                refArray[2] = 'X';
                refArray[3] = 9;
                refArray[4] = 8;
                refArray[5] = 7;
                refArray[6] = 6;
                refArray[7] = 5;
                refArray[8] = 4;
                refArray[9] = 3;
                refArray[10] = 2;

                //初始化总数
                var total = 0;
                idNo = idNo.trim();//清空字符串前后无用字符
                for (var i = 0; i < 17; i++) //计算总值
                {
                    total += Number(idNo[i]) * authArray[i];
                }
                if (refArray[Number(total % 11)] == idNo[17]) //判断验证位是否符合
                {
                    console.info("true");
                    return true;
                }
                else {
                    console.info("false");
                    return false;
                }
            },
            //手机号格式校验
            isMobil: function (s) {
                var patrn = /^(\+86)?1[3|5|4|7|8]\d{9}$/;
                if (!patrn.test(s)) {
                    return false;
                }
                return true;
            },
            getValiteCode : function(phoneNum){
                if(!this.validatePhoneNum(phoneNum)){
                    return false;
                }
                return true;
                //bug 此处暂时留空
                var phoneNum = phoneNum.trim();
                if(phoneNum.length==14){
                    phoneNum=phoneNum.substring(3);
                }
            },
            ck : function(idcard){

                if(idcard == "123"){
                    console.info("123");

                    return "nan";
                }
                return "";
            },

            tijiao : function($scope){
                var phoneNum = $scope.userInfo.PHONE_NUMBER.trim();
                var loginNum = $scope.userInfo.loginNum;
                var xm = $scope.userInfo.NAME.trim();
                var sf = $scope.userInfo.shenfen.trim();
                var iser = $scope.userInfo.isertong;
                var sms = $scope.userInfo.sms;
                var sexi = $scope.userInfo.xingbie;
                //校验姓名是否为空
                if(!this.validateXingMing(xm)){
                    console.info("校验姓名是否为空");
                    return false;
                }
                if(iser){
                    //校验身份证的格式啊吧啦吧啦~~
                    console.info("不是儿童的话，要校验身份证~iser="+iser);
                if(!this.idNoCheck(sf)){
                    console.info("校验身份证~");
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "身份证格式错误！",
                        okText : "知道了"
                    });
                    return false;
                }
                }else{
                    console.info("是儿童，不用校验身份证~iser="+iser);
                }
                //效验手机号
                if(!this.validatePhoneNum(phoneNum)){
                    console.info("效验手机号");
                    return false;
                }
                //效验注册码
                if(!this.validateLoginNum(loginNum,sms)){
                    console.info("效验注册码");
                    return false;
                }
                if(!this.validateExce(sexi)){
                    console.info("校验性别是否为空");
                    return false;
                }
                return true;
            }
        };
        return def;
    })
    .build();


/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：附加就诊者服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.AddPatientInfoService.service")//baobing
    .require(["kyee.framework.service.messager"])//input
    .type("service")
    .name("AddPatientInfoService")
    .params(["$state",
        "KyeeMessageService",
        "KyeeViewService",
        "HttpServiceBus"])//
    .action(function($state, KyeeMessageService, KyeeViewService,HttpServiceBus){

        var def = {
            //查询切换就诊者请求
            queryCommPatient : function(USER_ID,FLAG, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        USER_ID : USER_ID,
                        FLAG:FLAG,
                        op : "queryCommPatient"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }else{
                            console.info("切换就诊者请求返回的是空值");
                        }
                    }
                });
            },
            ToNewFalse:function(Sms){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "没有选择医院不能新增附加就诊者！",
                    okText : "知道了"
                });
            },
            deletePatientSms:function(Sms){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : Sms,
                    okText : "知道了"
                });
            },
            //查询切换就诊者请求
            deleteCustomPatient : function(postdata,FLAG, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        postdata : postdata,
                        FLAG:FLAG,
                        op : "deleteCustomPatient"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }else{
                            console.info("切换就诊者请求返回的是空值");
                        }
                    }
                });
            }
        };

        return def;
    })
    .build();


/**
 * 产品名称 KYMH
 * 创建用户: 朱学亮
 * 日期: 2015/5/10
 * 时间: 15:45
 * 创建原因：实名认证的service
 * 修改原因：
 * 修改用户：
 * 修改时间：
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.authentication.service")
    .require(["kyee.framework.service.messager",
              "kyee.framework.file.upload"])
    .type("service")
    .name("AuthenticationService")
    .params(["KyeeMessagerService", "HttpServiceBus", "RsaUtilService", "KyeeMessageService", "KyeeUploadFileService"])
    .action(function(KyeeMessagerService, HttpServiceBus, RsaUtilService, KyeeMessageService, KyeeUploadFileService){
        var def = {
            uploadIdCard : function(idCardPic, userInfo) {
                var serverURL = AppConfig.SERVER_URL + "realname/action/GetPictureActionC.jspx?" + "loc=c&op=saveRealName";
                var params = {};
                params.ID_NO = userInfo.idNo;
                params.serverUrl = AppConfig.SERVER_URL;
                params.patientName = userInfo.name;
                params.patientPhone = userInfo.phone;
                KyeeUploadFileService.uploadFile(
                    function(response){
                        // 上传成功，解析返回数据
                        var data = response.response;
                        if (data == 1) {
                            // 上传成功
                            KyeeMessageService.message({
                                title : "温馨提示",
                                content : "上传成功！",
                                okText : "知道了"
                            });
                        } else if (data == -1) {
                            // 重复认证
                            KyeeMessageService.message({
                                title : "温馨提示",
                                content : "重复认证！",
                                okText : "知道了"
                            });
                        } else {
                            // 上传失败
                            KyeeMessageService.message({
                                title : "温馨提示",
                                content : "上传失败请重试！",
                                okText : "知道了"
                            });
                        }
                    },
                    function(error){
                        // 上传失败
                        KyeeMessageService.message({
                            title : "温馨提示",
                            content : "上传失败请重试！",
                            okText : "知道了"
                        });
                    }, idCardPic, serverURL, "image/jpeg", params);
            }
        };
        return def;
    })
    .build();
/**
 * Created by Administrator on 2015/4/25.
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.service")
    .type("service")
    .name("CenterService")
    .action(function(KyeeMessageService){
        var def = {

        }

        return def;
    })
    .build();

/**
 *产品名称：quyiyuan
 *创建者：赵婷
 *创建时间：2015/5/4
 *创建原因：修改密码功能实现
 *修改者：
 *修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.service.ChangePwdService")
    .require(["kyee.framework.service.messager",
               "kyee.quyiyuan.login.rsautil.service",
               "kyee.quyiyuan.service_bus.http"])
    .type("service")
    .name("ChangePwdService")
    .params(["KyeeMessagerService",
             "RsaUtilService",
              "HttpServiceBus"])
    .action(function(KyeeMessagerService,RsaUtilService,HttpServiceBus){
        var def = {
            //验证旧密码
            checkOldPwd:function(Callback,userCode,oldPwd,$scope){
                HttpServiceBus.connect({
                    url : "user/action/LoginAction.jspx",
                    params : {
                        loc : "c",
                        op : "checkOldPassword",
                        USER_CODE:userCode,
                        OLD_PSWD:oldPwd
                    },
                    onSuccess : function (resp) {
                        Callback(resp);
                    }
                });
            },
            //修改密码
            changePwdService:function(Callback,getData,$scope){
                HttpServiceBus.connect({
                    url : "user/action/LoginAction.jspx",
                    params : {
                        loc : "c",
                        op : "changepwd",
                        postdata: getData
                    },
                    onSuccess : function (resp) {
                        Callback(resp);
                    }
                });
            }

        };
        return def;
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：就诊者信息服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.CommPatientDetailService.service")//baobing
    .require(["kyee.framework.service.messager"])//input
    .type("service")
    .name("CommPatientDetailService")
    .params([
        "$state",
        "KyeeMessageService",
        "KyeeViewService",
        "HttpServiceBus"
    ])
    .action(function($state, KyeeMessageService, KyeeViewService,HttpServiceBus){

        var def = {
            //给医保卡参数
            HOSPITAL_YB : undefined,
            //给实名认证参数
            HOSPITAL_SM: undefined,
            //给就诊卡参数
            HOSPITAL_JZ: undefined,
            //综合标记
            F_LAG: undefined,
            //短信验证
            sendRegCheckCodeActionC : function(hospitalId,PHONE_NUMBER,USER_NAME,onSuccess){
                HttpServiceBus.connect({
                    url : "/user/action/DataValidationActionC.jspx",
                    params : {
                        hospitalId : hospitalId,
                        messageType:2,
                        PHONE_NUMBER:PHONE_NUMBER,
                        USER_NAME:USER_NAME,
                        modId:10001,
                        op : "sendRegCheckCodeActionC"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                            def.onRefreshDataviewDelay();
                        }
                        console.info("验证码这边没返回结果");
                    }
                });
            },
            onRefreshDataviewDelay : function(){
                def.second = 120;
                var validateMsgBtn = document.getElementById("SmsBtnC");
                var phoneNumInput = document.getElementById("PhoneBtnC");
                def.task=window.setInterval(def.setBtnState, 1000, phoneNumInput, validateMsgBtn);
            },
            setBtnState: function (phoneNumInput, validateMsgBtn) {
                try {
                    if (def.second != -1) {
                        //直接操作$scope中的模型效率低下并且页面无法更新,因此直接操作dom
                        validateMsgBtn.innerText = '剩余' + def.second + '秒';
                        def.second--;
                    } else {
                        //直接操作$scope中的模型使页面无法更新,因此直接操作dom
                        validateMsgBtn.removeAttribute("disabled");
                        phoneNumInput.removeAttribute("disabled");
                        validateMsgBtn.innerText = '获取验证码';
                        clearInterval(def.task);
                    }
                } catch (e) {
                    clearInterval(def.task);
                }
            },
            //先校验姓名
            validateXingMing : function(xingming){
                if(xingming == 0){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "姓名不能为空！",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            },
            IDisNull : function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "姓名或身份证不能为空！",
                    okText : "知道了"
                });
            },
            PhoneisNull : function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "手机号码不能为空！",
                    okText : "知道了"
                });
            },
            //医保卡请求
            queryMedicalSecurityCardInfo : function(HOSPITAL_ID,USER_VS_ID, OFTEN_NAME,ID_NO,onSuccess){
                HttpServiceBus.connect({
                    url : "/medicalSecurity/action/MedicalSecurityActionC.jspx",
                    params : {
                        HOSPITAL_ID : HOSPITAL_ID,
                        USER_VS_ID:USER_VS_ID,
                        OFTEN_NAME:OFTEN_NAME,
                        ID_NO:ID_NO,
                        op : "queryMedicalSecurityCardInfo"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                        console.info("医保卡这边没返回结果");
                    }
                });
            },
            //提交时候的判空，我只写了手机号，因为其他可能几乎没有，除非数据错误
            onClickTo:function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "手机号不能为空！",
                    okText : "知道了"
                });
            },
            //校验手机号（是否为空、格式是否错误、长度是否错误、是否被绑定)
            validatePhoneNum : function(phoneNum){
                if(phoneNum!=undefined){
                var phoneNum = phoneNum.trim();
                //为空则提示并返回
                if(!phoneNum){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "手机号不能为空！",
                        okText : "知道了"
                    });
                    return false;
                } else if (!this.isMobil(phoneNum)) {
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "手机号格式或长度错误！",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            }else{
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "手机号不能为空！",
                        okText : "知道了"
                    });
                }
            },
            validateLoginNum : function(loginNum,ophone,sms){
                if(ophone!=1){
                    if(!loginNum){
                        KyeeMessageService.message({
                            title : "提示信息",
                            content : "验证码不能为空！",
                            okText : "知道了"
                        });
                        return false;
                    }else if(loginNum != sms){  //bug 此处验证码先写死为1
                        KyeeMessageService.message({
                            title : "提示信息",
                            content : "验证码输入错误！",
                            okText : "知道了"
                        });
                        return false;
                    }
                    return true;
                }else if(ophone=1){
                    return true;
                }
            },
            //身份证校验算法
            idNoCheck: function (idNo) {
                //idNo=idNo.trim();//清空字符串前后无用字符
                if (idNo.length != 18) //判断身份证号是否大于18位
                {
                    return false;
                }
                else if (isNaN(idNo.substring(0, 17))) //切割字符串从第0个开始，长度为17-0位,第0位到第17位,判断是否为非数值
                {
                    return false;
                }
                else if (isNaN(idNo.substring(17))) //切割字符串从第0个开始，长度为17位
                {
                    //判断是否最后一位为X，需要进行大小写转换，避免由于大小写问题造成的验证失败
                    if (idNo.substring(17, 18).toUpperCase() != 'X') //判断最后以为是否为X
                    {
                        return false;
                    }
                }
                return this.authIdNo(idNo); //身份证最后一位验证算法
            },
            //校验算法
            authIdNo: function (idNo) {
                //系数枚举
                var authArray = new Array();
                authArray[0] = 7;
                authArray[1] = 9;
                authArray[2] = 10;
                authArray[3] = 5;
                authArray[4] = 8;
                authArray[5] = 4;
                authArray[6] = 2;
                authArray[7] = 1;
                authArray[8] = 6;
                authArray[9] = 3;
                authArray[10] = 7;
                authArray[11] = 9;
                authArray[12] = 10;
                authArray[13] = 5;
                authArray[14] = 8;
                authArray[15] = 4;
                authArray[16] = 2;

                //对照值枚举
                var refArray = new Array();
                refArray[0] = 1;
                refArray[1] = 0;
                refArray[2] = 'X';
                refArray[3] = 9;
                refArray[4] = 8;
                refArray[5] = 7;
                refArray[6] = 6;
                refArray[7] = 5;
                refArray[8] = 4;
                refArray[9] = 3;
                refArray[10] = 2;

                //初始化总数
                var total = 0;
                idNo = idNo.trim();//清空字符串前后无用字符
                for (var i = 0; i < 17; i++) //计算总值
                {
                    total += Number(idNo[i]) * authArray[i];
                }
                if (refArray[Number(total % 11)] == idNo[17]) //判断验证位是否符合
                {
                    console.info("true");
                    return true;
                }
                else {
                    console.info("false");
                    return false;
                }
            },
            //手机号格式校验
            isMobil: function (s) {
                var patrn = /^(\+86)?1[3|5|4|7|8]\d{9}$/;
                if (!patrn.test(s)) {
                    return false;
                }
                return true;
            },
            getValiteCode : function(phoneNum){
                if(!this.validatePhoneNum(phoneNum)){
                    return false;
                }
                return true;
                //bug 此处暂时留空
                var phoneNum = phoneNum.trim();
                if(phoneNum.length==14){
                    phoneNum=phoneNum.substring(3);
                }
            },
            ck : function(idcard){

                if(idcard == "123"){
                    console.info("123");

                    return "nan";
                }
                return "";
            },
            //创建生日，目前没有格式日期，先写死
//            createBirthday: function (idNo) {
//                idNo = idNo.trim();//清空字符串前后无用字符
//                if (isNaN(idNo.substring(0, 14))) {
//                    //不是数字,显示当前日期
//                    return Ext.Date.format(new Date(), "Y-m-d");
//                    ;
//                }
//                else {
//                    //是数字
//                    var year = idNo.substring(6, 10);//年
//                    var month = idNo.substring(10, 12);//月
//                    var day = idNo.substring(12, 14);//日
//                    //格式不正确
//                    if (month > 12 || month < 1 || day > 31 || day < 1) {
//                        return Ext.Date.format(new Date(), "Y-m-d");
//                    }
//                    return year + "-" + month + "-" + day;
//                }
//            },
            //失去焦点时，身份证转化为日期，目前没有格式日期，先写死
            convertIdNo: function (idno) {
//                var ID_NO = idno;     //获取输入的身份证值
//                idNo = ID_NO.trim();//清空字符串前后无用字符
//                var birthday = this.createBirthday(ID_NO);
//                var date = Ext.Date.format(new Date(birthday), "Y-m-d");
                return "2000-00-00";
            },
            //提交
            updateCustomPatient : function(postdata,hospitalID,onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        postdata : postdata,
                        hospitalID:hospitalID,
                        op : "updateCustomPatient"

                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                    }
                });
            },
            //为跳转查取就诊卡页面传值
            lastClassInfro:undefined,
            //查取就诊卡
            queryBindCardNo : function(userVsId, hospitalId,onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        userVsId : userVsId,
                        hospitalId:hospitalId,
                        op : "queryBindCardNo"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                        console.info("没有就诊卡或者就诊卡为空");
                    }
                });
            },
            //判断是否显示请求
            queryHospitalParam : function(paramName,hospitalId,onSuccess){
                //给医保卡参数
                HttpServiceBus.connect({
                    url : "/hospitalInform/action/HospitalinforActionC.jspx",
                    params : {
                        paramName : paramName,
                        hospitalId:hospitalId,
                        op : "queryHospitalParam"

                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                    }
                });
            },
            CustomPatientSms:function(Sms){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : Sms,
                    okText : "知道了"
                });
            },

            tijiao : function($scope){
                var phoneNum = $scope.item.PHONE.trim();
                var loginNum = $scope.item.loginNum;
                var ophone = $scope.userInfo.AZURE
                var xm = $scope.item.OFTEN_NAME.trim();
                var sf = $scope.item.ID_NO.trim();
                var iser = $scope.isertong;
                var sms = $scope.userInfo.sms;
                //校验姓名是否为空
                if(!this.validateXingMing(xm)){
                    console.info("校验姓名是否为空");
                    return false;
                }
                //校验身份证的格式啊吧啦吧啦~~
                if(!iser){
                    //校验身份证的格式啊吧啦吧啦~~
                    console.info("不是儿童的话，要校验身份证~iser="+iser);
                    if(!this.idNoCheck(sf)){
                        console.info("校验身份证~");
                        KyeeMessageService.message({
                            title : "提示信息",
                            content : "身份证格式错误！",
                            okText : "知道了"
                        });
                        return false;
                    }
                }else{
                    console.info("是儿童，不用校验身份证~iser="+iser);
                }
                //效验手机号
                if(!this.validatePhoneNum(phoneNum)){
                    console.info("效验手机号");
                    return false;
                }
                //效验注册码
                if(!this.validateLoginNum(loginNum,ophone,sms)){
                    console.info("效验注册码");
                    return false;
                }
                return true;
            }
        };
        return def;
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：切换就诊者服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.CustomPatientService.service")
    .require(["kyee.framework.service.messager"])
    .type("service")
    .name("CustomPatientService")
    .params(["$state",
        "KyeeMessageService",
        "KyeeViewService",
        "HttpServiceBus"])
    .action(function($state, KyeeMessageService, KyeeViewService,HttpServiceBus){

        var def = {
            //查询切换就诊者请求
            queryCustomPatient : function(USER_ID,FLAG, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        USER_ID : USER_ID,
                        FLAG:FLAG,
                        op : "queryCustomPatient"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }else{
                            console.info("切换就诊者请求返回的是空值");
                        }
                    }
                });
            },
            //把选中的体验就诊者变成普通就诊者
            updateSelectFlag333 : function(oname,hid,userId,userVsId, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        userId : userId,
                        userVsId:userVsId,
                        op : "updateSelectFlag"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info("切换就诊者请求返回的不是空值");
                            console.info(data);
                            onSuccess(data);
                        }else{
                            console.info("切换就诊者请求返回的是空值");
                        }
                    }
                });
            },
            //吧选中的普通就诊者变成体验就诊者
            updateSelectFlag444 : function(oname,hid,userId,userVsId, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        userId : userId,
                        userVsId:userVsId,
                        op : "updateSelectFlag"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info("切换就诊者请求返回的不是空值");
                            console.info(data);
                            onSuccess(data);
                        }else{
                            console.info("切换就诊者请求返回的是空值");
                        }
                    }
                });
            },
            //切换就诊者请求
            updateSelectFlag : function(oname,hid,userId,userVsId, onSuccess){
                    HttpServiceBus.connect({
                        url : "/center/action/CustomPatientAction.jspx",
                        params : {
                            userId : userId,
                            userVsId:userVsId,
                            op : "updateSelectFlag"
                        },
                        onSuccess : function(data){
                            if(data != null&&data!=undefined){
                                console.info("切换就诊者请求返回的不是空值");
                                console.info(data);
                                onSuccess(data);
                            }else{
                                console.info("切换就诊者请求返回的是空值");
                            }
                        }
                    });
            },
            //切换就诊者请求选中用
            updateSelectFlag222 : function(oname,hid,userId,userVsId, onSuccess){
                if(hid == 1001){
                    if(!(oname =='体验就诊者')){
                        KyeeMessageService.message({
                            title : "提示信息",
                            content : "您当前在趣医体验医院，只能使用体验就诊者体验，其他就诊者无法在体验医院进行相关业务操作!",
                            okText : "知道了"
                        });
                        $state.go("center->MAIN_TAB");
                    }else{
                        KyeeMessageService.message({
                            title : "提示信息",
                            content : "选中就诊者成功!",
                            okText : "知道了"
                        });
                        $state.go("center->MAIN_TAB");
                    }
//                    else{
//                        HttpServiceBus.connect({
//                            url : "/center/action/CustomPatientAction.jspx",
//                            params : {
//                                userId : userId,
//                                userVsId:userVsId,
//                                op : "updateSelectFlag"
//                            },
//                            onSuccess : function(data){
//                                if(data != null&&data!=undefined){
//                                    console.info("切换就诊者请求返回的不是空值");
//                                    console.info(data);
//                                    onSuccess(data);
//                                }else{
//                                    console.info("切换就诊者请求返回的是空值");
//                                }
//                            }
//                        });
//                    }
                }else{
                    HttpServiceBus.connect({
                        url : "/center/action/CustomPatientAction.jspx",
                        params : {
                            userId : userId,
                            userVsId:userVsId,
                            op : "updateSelectFlag"
                        },
                        onSuccess : function(data){
                            if(data != null&&data!=undefined){
                                console.info("切换就诊者请求返回的不是空值");
                                console.info(data);
                                onSuccess(data);
                            }else{
                                console.info("切换就诊者请求返回的是空值");
                            }
                        }
                    });
                }
            },

            queryMessages : function(){
                return [
                    {OFTEN_NAME : "张三", SEX : "男", "DATE_OF_BIRTH" : "21岁",ID:"1"},
                    {OFTEN_NAME : "李四", SEX : "女", "DATE_OF_BIRTH" : "17岁",ID:"2"},
                    {OFTEN_NAME : "王二", SEX : "男", "DATE_OF_BIRTH" : "55岁",ID:"3"}
                ]
            }
        };

        return def;
    })
    .build();


/**
 * Created by zhuxueliang on 15/5/6.
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.medical_insurance_card.service")
    .require(["kyee.framework.service.messager", "kyee.quyiyuan.login.md5util.service"])
    .type("service")
    .name("MedicalInsuranceCardService")
    .params(["KyeeMessagerService", "HttpServiceBus", "RsaUtilService", "KyeeMessageService"])
    .action(function(KyeeMessagerService, HttpServiceBus, RsaUtilService, KyeeMessageService){
        var def = {
            getValidateNum : function(bindData, hospitalId, insuranceCardNo){
                HttpServiceBus.connect({
                    url : '/user/action/LoginAction.jspx',
                    params : {
                        op : 'getMessageCodeRequest',
                        params : {
                            HOSPITAL_ID : hospitalId,
                            USER_VS_ID : bindData.USER_VS_ID,
                            OFTEN_NAME : bindData.OFTEN_NAME,
                            ID_NO : bindData.ID_NO,
                            MEDICAL_SECURITY_CARD_NO : insuranceCardNo,
                            BUSINESS_TYPE : '4001'
                        }
                    },
                    onSuccess : function(retVal){
                        if (retVal.success) {
                            def.onRefreshDataviewDelay();
                        }
                    },
                    onError : function(retVal){
                        console.log("网络连接失败");
                    }
                });
            },

            doBindInsuranceCard : function(userInfo, bindData, hospitalId, $scope) {
                HttpServiceBus.connect({
                    url: '/medicalSecurity/action/MedicalSecurityActionC.jspx',
                    params: {
                        op: 'signMedicalSecurityCard',
                        params: {
                            MSG_CODE: userInfo.validationNum,// 获取的验证码
                            MS_ONLINE_PASSWORD: RsaUtilService.getRsaResult(userInfo.insuranceCardPassword),// 加密的密码
                            HOSPITAL_ID: hospitalId,
                            USER_VS_ID: bindData.USER_VS_ID,
                            OFTEN_NAME: bindData.OFTEN_NAME,
                            ID_NO: bindData.ID_NO,
                            MEDICAL_SECURITY_CARD_NO: userInfo.insuranceCardNum
                        }
                    },
                    onSuccess: function (retVal) {
                        if (retVal.success) {
                            KyeeMessageService.message({
                                title : "温馨提示",
                                content : "请稍后查询绑定状态！",
                                okText : "知道了"
                            });
                            $scope.hideModal();
                        } else {
                            KyeeMessageService.message({
                                title : "温馨提示",
                                content : "网络异常！",
                                okText : "知道了"
                            });
                        }
                    },
                    onError: function (retVal) {
                    }
                });
            },

            onRefreshDataviewDelay : function(){
                def.second = 120;
                // 根据id得到获取验证码按钮
                var validateMsgBtn = document.getElementById("insurance.getValidateBtn");
                // 使此按钮失效
                validateMsgBtn.disabled = true;
                // 开启定时任务
                def.task=window.setInterval(def.setBtnState, 1000, validateMsgBtn);
            },

            setBtnState: function (validateMsgBtn) {
                try {
                    if (def.second > 0) {
                        validateMsgBtn.innerText = '剩余' + def.second + '秒';
                        def.second--;
                    } else {
                        //直接操作$scope中的模型使页面无法更新,因此直接操作dom
                        validateMsgBtn.disabled = false;
                        validateMsgBtn.innerText = '获取验证码';
                        clearInterval(def.task);
                    }
                } catch (e) {
                    validateMsgBtn.disabled = false;
                    clearInterval(def.task);
                }
            }
        };
        return def;
    })
    .build();
/**
 * Created by Administrator on 2015/4/28.
 */
/**
 * Created by Administrator on 2015/4/27.
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.service.QueryHisCardService",
           "kyee.quyiyuan.service_bus.http")
    .require(["kyee.framework.service.messager"])
    .type("service")
    .name("QueryHisCardService")
    .params(["KyeeMessagerService","HttpServiceBus"])
    .action(function(KyeeMessagerService,HttpServiceBus){
        var def = {
            lastClassFlag:0,  //标志上上一个页面是哪个页面 0自己 1个人信息维护页面  2就诊者信息维护页面
            queryHisPatCardInfo:function(Callback,hospitalId,name,idNo,phone,uservsId){
                HttpServiceBus.connect({
                    url : "center/action/CustomPatientAction.jspx",
                    params : {
                        loc : "c",
                        op : "queryHisPatCardInfo",
                        hospitalId:hospitalId,
                        name:name,
                        idNo:idNo,
                        cardNo:'',
                        phone:phone,
                        uservsId:uservsId,
                        isAutoQueryHisCard:false
                    },
                    onSuccess : function (resp) {
                        console.log(resp);
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            getCorrespondCardInfo:function(Callback,userVsId,hospitalId) {
                HttpServiceBus.connect({
                    url : "user/action/LoginAction.jspx",
                    params : {
                        loc : "c",
                        op : "getCorrespondCardInfo",
                        userVsId:userVsId,
                        hospitalID:hospitalId
                    },
                    onSuccess : function (resp) {
                        console.log(resp);
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            queryCardRecord:function(Callback,userVsId){
                HttpServiceBus.connect({
                    url : "center/action/UserCardRecordAction.jspx",
                    params : {
                        loc : "c",
                        op : "queryCardRecord",
                        USER_VS_ID:userVsId
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined)
                        {
                            Callback(resp);
                        }
                    }
                });
            },
            getHint:function(Callback){
                HttpServiceBus.connect({
                    url : "center/action/CustomPatientAction.jspx",
                    params : {
                        loc : "c",
                        op : "getHint"
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            updateCardByUserVsId:function(Callback,userVsId,cardNo,hospitalId){
                HttpServiceBus.connect({
                    url : "center/action/CustomPatientAction.jspx",
                    params : {
                        loc : "c",
                        op : "updateCardByUserVsId",
                        userVsId:userVsId,
                        cardNo:cardNo,
                        hospitalId:hospitalId
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            selectedCustomPatient:function(Callback,useId,hospitalId){
                HttpServiceBus.connect({
                    url : "center/action/CustomPatientAction.jspx",
                    params : {
                        loc : "c",
                        op : "selectedCustomPatient",
                        userId:useId,
                        hospitalId:hospitalId
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            queryHospitalParam:function(Callback,hospitalId){
                HttpServiceBus.connect({
                    url : "hospitalInform/action/HospitalinforActionC.jspx",
                    params : {
                        loc : "c",
                        op : "queryHospitalParam",
                        hospitalId:hospitalId,
                        paramName:'QUERYCARDTYPE'
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            queryDeletedPatCardInfo:function(Callback,hospitalId,userVsId){
                HttpServiceBus.connect({
                    url : "center/action/CustomPatientAction.jspx",
                    params : {
                        loc : "c",
                        op : "queryDeletedPatCardInfo",
                        hospitalId:hospitalId,
                        uservsId:userVsId
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            updateCardStatus:function(Callback,hospitalId,cardNo,pId){
                HttpServiceBus.connect({
                    url : "center/action/CustomPatientAction.jspx",
                    params : {
                        loc : "c",
                        op : "updateCardStatus",
                        hospitalId:hospitalId,
                        cardNo:cardNo,
                        pId:pId
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            },
            changeVCardToPCard:function(Callback,hospitalId,userVsID,pCardId,vCardId){
                HttpServiceBus.connect({
                    url : "center/action/CustomPatientAction.jspx",
                    params : {
                        loc : "c",
                        op : "changeVCardToPCard",
                        hospitalId:hospitalId,
                        userVsId:userVsID,
                        pCardId:pCardId,
                        vCardId:vCardId
                    },
                    onSuccess : function (resp) {
                        if (resp!=null && resp!=undefined) {
                            Callback(resp);
                        }
                    }
                });
            }
        };

        return def;
    })
    .build();

/**
 * Created by Administrator on 2015/4/29.
 * 修改日期：2015-05-15 14:46
 * 修改人：朱学亮
 * 修改内容：与后台交互，获取当前用户的可用角色
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.service.RoleViewService")
    .require(["kyee.framework.service.messager"])
    .type("service")
    .name("RoleViewService")
    .params(["KyeeMessagerService", "HttpServiceBus"])
    .action(function(KyeeMessagerService, HttpServiceBus){
        var def = {
            // 获取当前用户的可选角色
            queryDevList : function(Callback){
                HttpServiceBus.connect({
                    url : '/UserRoleManagementBackground/action/UserRoleManagementBackgroundActionC.jspx',
                    params : {
                        loc : 'c',
                        op : 'queryAll'
                    },
                    onSuccess : function(retVal){
                        // 返回成功后调用回调函数
                        Callback(retVal);
                        /*
                        return [
                            {ROLE_VIEW: null, ROLE_DESC: "医生", ROLE_CODE: "3", IMAGES_PATH: ""},
                            {ROLE_VIEW: null, ROLE_DESC: "门诊患者", ROLE_CODE: "1", IMAGES_PATH: ""},
                            {ROLE_VIEW: null, ROLE_DESC: "住院患者", ROLE_CODE: "2", IMAGES_PATH: ""},
                            {ROLE_VIEW: null, ROLE_DESC: "普通用户", ROLE_CODE: "4", IMAGES_PATH: ""}
                        ]*/
                    },
                    onError : function(retVal){
                        // 返回失败时暂未处理
                    }
                });
            },
            // 当用户选择需要切换的角色后，将此信息同步到服务器
            updateUserRole : function(Callback, data) {
                HttpServiceBus.connect({
                    url : 'user/action/LoginAction.jspx',
                    params : {
                        loc : 'c',
                        op : 'updateuser',
                        postdata: data
                    },
                    onSuccess : function(retVal) {
                        Callback(retVal);
                    },
                    onError : function(retVal) {
                        // 返回失败时暂未处理
                    }
                });
            }
        };

        return def;
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 张家豪
 * 创建日期:2015年5月4日10:18:09
 * 创建原因：个人信息维护服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.center.updateuser.service")//baobing
    .require(["kyee.framework.service.messager"])//input
    .type("service")
    .name("UpdateUserService")
    .params([
        "$state",
        "KyeeMessageService",
        "KyeeViewService",
        "HttpServiceBus",
        "CacheServiceBus"
    ])
    .action(function($state, KyeeMessageService, KyeeViewService,HttpServiceBus,CacheServiceBus){

        var def = {
            DadNoShow :function(){
                $state.go("center->MAIN_TAB");
            },
            //个人信息请求
            queryUserInfo : function(userId, onSuccess){
                HttpServiceBus.connect({
                    url : "/user/action/LoginAction.jspx",
                    params : {
                        userId : userId,
                        op : "queryUserInfo"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                        console.info(data);
                        onSuccess(data);
                        }
                    }
                });
            },
            //给医保卡参数
            HOSPITAL_YB : undefined,
            //给实名认证参数
            HOSPITAL_SM: undefined,
            //给就诊卡参数
            HOSPITAL_JZ: undefined,
            //综合标记
            F_LAG: undefined,
            //物理卡请求
            showCard : function(hospitalId,paramName, onSuccess){
                HttpServiceBus.connect({
                    url : "/hospitalInform/action/HospitalinforActionC.jspx",
                    params : {
                        hospitalId : hospitalId,
                        paramName:paramName,
                        op : "queryHospitalParam"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                        console.info(data);
                        onSuccess(data);
                        }
                    }
                });
            },
            //获取USER_VS_ID
            getDefaultUserVsId : function(userId,onSuccess){
                HttpServiceBus.connect({
                    url : "/user/action/LoginAction.jspx",
                    params : {
                        userId : userId,
                        op : "getDefaultUserVsId"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                        console.info(data);
                    }
                });
            },
            //查取就诊卡
            queryBindCardNo : function(userVsId, hospitalId,onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        userVsId : userVsId,
                        hospitalId:hospitalId,
                        op : "queryBindCardNo"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                        console.info(data);
                        onSuccess(data);
                        }
                        console.info("没有就诊卡或者就诊卡为空");
                    }
                });
            },
            //是否显示医保卡
            getHospitalParam : function(HOSPITAL_ID,PARAM_NAME,onSuccess){
                HttpServiceBus.connect({
                    url : "/medicalSecurity/action/MedicalSecurityActionC.jspx",
                    params : {
                        HOSPITAL_ID : HOSPITAL_ID,
                        PARAM_NAME:PARAM_NAME,
                        op : "getHospitalParam"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                        console.info("医保卡这边没返回结果");
                    }
                });
            },
            //医保卡请求
            queryMedicalSecurityCardInfo : function(HOSPITAL_ID,USER_VS_ID, OFTEN_NAME,ID_NO,onSuccess){
                HttpServiceBus.connect({
                    url : "/medicalSecurity/action/MedicalSecurityActionC.jspx",
                    params : {
                        HOSPITAL_ID : HOSPITAL_ID,
                        USER_VS_ID:USER_VS_ID,
                        OFTEN_NAME:OFTEN_NAME,
                        ID_NO:ID_NO,
                        op : "queryMedicalSecurityCardInfo"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                        console.info("医保卡这边没返回结果");
                    }
                });
            },
            //提交
            updateuser : function(postdata, cardNo,hospitalID,onSuccess){
                HttpServiceBus.connect({
                    url : "/user/action/LoginAction.jspx",
                    params : {
                        postdata : postdata,
                        cardNo:cardNo,
                        operateUserSource:0,
                        op : "updateuser"

                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                        }
                        console.info("提交都失败了~");
                    }
                });
            },
            //短信验证
            sendRegCheckCodeActionC : function(hospitalId,PHONE_NUMBER,USER_NAME,onSuccess){
                HttpServiceBus.connect({
                    url : "/user/action/DataValidationActionC.jspx",
                    params : {
                        hospitalId : hospitalId,
                        messageType:2,
                        PHONE_NUMBER:PHONE_NUMBER,
                        USER_NAME:USER_NAME,
                        modId:10001,
                        op : "sendRegCheckCodeActionC"
                    },
                    onSuccess : function(data){
                        if(data != null&&data!=undefined){
                            console.info(data);
                            onSuccess(data);
                            def.onRefreshDataviewDelay();
                        }
                        console.info("验证码这边没返回结果");
                    }
                });
            },
            //先校验姓名
            validateXingMing : function(xingming){
                if(xingming == 0){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "姓名不能为空！",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            },
            //创建生日，目前没有格式日期，先写死
//            createBirthday: function (idNo) {
//                idNo = idNo.trim();//清空字符串前后无用字符
//                if (isNaN(idNo.substring(0, 14))) {
//                    //不是数字,显示当前日期
//                    return Ext.Date.format(new Date(), "Y-m-d");
//                    ;
//                }
//                else {
//                    //是数字
//                    var year = idNo.substring(6, 10);//年
//                    var month = idNo.substring(10, 12);//月
//                    var day = idNo.substring(12, 14);//日
//                    //格式不正确
//                    if (month > 12 || month < 1 || day > 31 || day < 1) {
//                        return Ext.Date.format(new Date(), "Y-m-d");
//                    }
//                    return year + "-" + month + "-" + day;
//                }
//            },
            //失去焦点时，身份证转化为日期，目前没有格式日期，先写死
            convertIdNo: function (idno) {
//                var ID_NO = idno;     //获取输入的身份证值
//                idNo = ID_NO.trim();//清空字符串前后无用字符
//                var birthday = this.createBirthday(ID_NO);
//                var date = Ext.Date.format(new Date(birthday), "Y-m-d");
                return "2000-00-00";
            },
            //校验手机号（是否为空、格式是否错误、长度是否错误、是否被绑定)
            validatePhoneNum : function(phoneNum){
                var phoneNum = phoneNum.trim();
                //为空则提示并返回
                if(!phoneNum){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "手机号不能为空！",
                        okText : "知道了"
                    });
                    return false;
                } else if (!this.isMobil(phoneNum)) {
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "手机号格式或长度错误！",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            },
            validateLoginNum : function(loginNum,ophone,sms){
                if(ophone!=1){
                if(!loginNum){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "验证码不能为空！",
                        okText : "知道了"
                    });
                    return false;
                }else if(loginNum != sms){  //bug 此处验证码先写死为1
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "验证码输入错误！",
                        okText : "知道了"
                    });
                    return false;
                }
                    return true;
                }else if(ophone=1){
                return true;
            }
            },

            //身份证校验算法
            idNoCheck: function (idNo) {
                //idNo=idNo.trim();//清空字符串前后无用字符
                if (idNo.length != 18) //判断身份证号是否大于18位
                {
                    return false;
                }
                else if (isNaN(idNo.substring(0, 17))) //切割字符串从第0个开始，长度为17-0位,第0位到第17位,判断是否为非数值
                {
                    return false;
                }
                else if (isNaN(idNo.substring(17))) //切割字符串从第0个开始，长度为17位
                {
                    //判断是否最后一位为X，需要进行大小写转换，避免由于大小写问题造成的验证失败
                    if (idNo.substring(17, 18).toUpperCase() != 'X') //判断最后以为是否为X
                    {
                        return false;
                    }
                }
                return this.authIdNo(idNo); //身份证最后一位验证算法
            },
            //校验算法
            authIdNo: function (idNo) {
                //系数枚举
                var authArray = new Array();
                authArray[0] = 7;
                authArray[1] = 9;
                authArray[2] = 10;
                authArray[3] = 5;
                authArray[4] = 8;
                authArray[5] = 4;
                authArray[6] = 2;
                authArray[7] = 1;
                authArray[8] = 6;
                authArray[9] = 3;
                authArray[10] = 7;
                authArray[11] = 9;
                authArray[12] = 10;
                authArray[13] = 5;
                authArray[14] = 8;
                authArray[15] = 4;
                authArray[16] = 2;

                //对照值枚举
                var refArray = new Array();
                refArray[0] = 1;
                refArray[1] = 0;
                refArray[2] = 'X';
                refArray[3] = 9;
                refArray[4] = 8;
                refArray[5] = 7;
                refArray[6] = 6;
                refArray[7] = 5;
                refArray[8] = 4;
                refArray[9] = 3;
                refArray[10] = 2;

                //初始化总数
                var total = 0;
                idNo = idNo.trim();//清空字符串前后无用字符
                for (var i = 0; i < 17; i++) //计算总值
                {
                    total += Number(idNo[i]) * authArray[i];
                }
                if (refArray[Number(total % 11)] == idNo[17]) //判断验证位是否符合
                {
                    console.info("true");
                    return true;
                }
                else {
                    console.info("false");
                    return false;
                }
            },
            //手机号格式校验
            isMobil: function (s) {
                var patrn = /^(\+86)?1[3|5|4|7|8]\d{9}$/;
                if (!patrn.test(s)) {
                    return false;
                }
                return true;
            },
            getValiteCode : function(phoneNum){
                if(!this.validatePhoneNum(phoneNum)){
                    return false;
                }
                return true;
                //bug 此处暂时留空
                var phoneNum = phoneNum.trim();
                if(phoneNum.length==14){
                    phoneNum=phoneNum.substring(3);
                }
            },
            ck : function(idcard){

                if(idcard == "123"){
                    console.info("123");

                    return "nan";
                }
                return "";
            },
            IDisNull : function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "姓名或身份证为空！",
                    okText : "知道了"
                });
            },
            isNulls : function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "姓名或身份证为空！",
                    okText : "知道了"
                });
            },
            SmsisNulls : function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "效验注册码失败！",
                    okText : "知道了"
                });
            },
            isSucess : function(){
                KyeeMessageService.message({
                    title : "提示信息",
                    content : "完善信息成功！",
                    okText : "知道了"
                });
            },
            //为跳转查取就诊卡页面传值
            lastClassInfro:undefined,
            tijiao : function($scope){
                var phoneNum = $scope.userInfo.PHONE_NUMBER.trim();
                var ophone = $scope.userInfo.AZURE
                console.info(phoneNum);
                var loginNum = $scope.userInfo.loginNum;
                var xm = $scope.userInfo.NAME.trim();
                var sf = $scope.userInfo.ID_NO.trim();
                var sms = $scope.userInfo.sms;
                //校验姓名是否为空
                if(!this.validateXingMing(xm)){
                    console.info("校验姓名是否为空");
                    return false;
                }
                //校验身份证的格式啊吧啦吧啦~~
                if(!this.idNoCheck(sf)){
                    KyeeMessageService.message({
                        title : "提示信息",
                        content : "身份证格式错误！",
                        okText : "知道了"
                    });
                    console.info("身份校验失败");
                    return false;
                }
                //效验手机号
                if(!this.validatePhoneNum(phoneNum)){
                    console.info("效验手机号失败");
                    return false;
                }
                //效验注册码
                if(!this.validateLoginNum(loginNum,ophone,sms)){
                    console.info("效验注册码失败");
                    return false;
                }
                return true;
            },
            onRefreshDataviewDelay : function(){
                def.second = 120;
                var validateMsgBtn = document.getElementById("SmsBtn");
                var phoneNumInput = document.getElementById("PhoneBtn");
                def.task=window.setInterval(def.setBtnState, 1000, phoneNumInput, validateMsgBtn);
            },
            setBtnState: function (phoneNumInput, validateMsgBtn) {
                try {
                    if (def.second != -1) {
                        //直接操作$scope中的模型效率低下并且页面无法更新,因此直接操作dom
                        validateMsgBtn.innerText = '剩余' + def.second + '秒';
                        def.second--;
                    } else {
                        //直接操作$scope中的模型使页面无法更新,因此直接操作dom
                        validateMsgBtn.removeAttribute("disabled");
                        phoneNumInput.removeAttribute("disabled");
                        validateMsgBtn.innerText = '获取验证码';
                        clearInterval(def.task);
                    }
                } catch (e) {
                    clearInterval(def.task);
                }
            }
        };
        return def;
    })
    .build();


/**
 * 产品名称：quyiyuan.
 * 创建用户：淳思博
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加医生简介页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorIntroduction.controller")
    .require([])
    .type("controller")
    .name("DoctorIntroductionController")
    .params(["$scope","DoctorPersonalPageService"])
    .action(function($scope, DoctorPersonalPageService){
        //无数据
        $scope.showEmpty = false;
        $scope.emptyText = "暂无简介";
        //入口参数 --主页面
        var doctorDesc = DoctorPersonalPageService.doctorInfo.DOCTOR_DESC;
        if(doctorDesc == null || doctorDesc == undefined || doctorDesc.length == 0){
            $scope.showEmpty = true;
        }else{
            $scope.DOCTOR_DESC = doctorDesc;
        }
    })
    .build();


/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医患互动留言咨询页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorMessageBoard.controller")
    .require(["kyee.quyiyuan.interaction.doctorMessageBoard.service"])
    .type("controller")
    .name("DoctorMessageBoardController")
    .params(["$scope", "DoctorMessageBoardService", "CacheServiceBus", "$ionicActionSheet"])
    .action(function($scope, DoctorMessageBoardService, CacheServiceBus, $ionicActionSheet){

        $scope.data = DoctorMessageBoardService.paramData;
        $scope.chatFlag = 0;
        $scope.emptyText = "暂无咨询留言";
        $scope.bindingFlag = true;

        //TODO
        $scope.currentPatientName = "小明";
        $scope.currentPatientId = "Q150212003";
        $scope.data.DOCTOR_CODE = "9169";

        DoctorMessageBoardService.queryDoctorBindingFlag(
            CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
            $scope.data.DOCTOR_CODE, function (data) {
            if(data == 0){
                $scope.bindingFlag = false;
                $scope.showEmpty = true;
                $scope.emptyText = "该医生暂未开通咨询功能";
            } else {
                $scope.queryChatWords();
            }
        });

        /**
         * 查询留言信息
         */
        $scope.queryChatWords = function () {
            var patientId = $scope.currentPatientId;
            var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            var doctorCode = $scope.data.DOCTOR_CODE;
            var page = 1;
            var limit = 8;
            DoctorMessageBoardService.queryChatWords(patientId, hospitalId, doctorCode,
                page, limit, function (data) {
                $scope.words = data;

                // 判空显示
                if(!$scope.words || $scope.words.length == 0){
                    $scope.showEmpty = true;
                } else {
                    $scope.showEmpty = false;
                }
            });
        };

        /**
         * 判断显示名称
         */
        $scope.showName = function (word) {
            if(word.WORDS_FLAG == 0){
                if (word.PATIENT_ID == $scope.currentPatientId){
                    return "我";
                } else {
                    return word.PATIENT_NAME;
                }
            } else {
                return "医生";
            }
        };

        /**
         * 删除根留言
         */
        $scope.deleteRootWord = function (index) {
            DoctorMessageBoardService.deleteRootWord($scope.words[index].WORDS_ID);
            $scope.words.splice(index, 1);
        };

        /**
         * 删除子留言
         */
        $scope.deleteResetWord = function () {
            DoctorMessageBoardService.deleteResetWord($scope.words[$scope.parentIndex].RESET[$scope.index].RESET_ID);
            $scope.words[$scope.parentIndex].RESET.splice($scope.index, 1);
        };

        /**
         * 发表根留言
         */
        $scope.postRootWord = function (me, words) {
            var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            var postdata = {
                HOSPITAL_ID: hospitalId,
                WORDS_TEXT: words,
                DOCTOR_CODE: $scope.data.DOCTOR_CODE,
                WORDS_FLAG: 0,
                PATIENT_ID: $scope.currentPatientId
            };
            DoctorMessageBoardService.postRootWord(postdata, 0);
            $scope.queryChatWords();

            me.reset = "";
        };

        /**
         * 发表子留言
         */
        $scope.postResetWord = function (me, words) {
            var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            var postdata = {
                HOSPITAL_ID: hospitalId,
                RESET_TEXT: words,
                WORDS_ID: $scope.words[$scope.parentIndex].WORDS_ID,
                DOCTOR_CODE: $scope.data.DOCTOR_CODE,
                SEND_ID: $scope.currentPatientId,
                SEND_NAME: $scope.currentPatientName,
                RECEIVE_ID: $scope.receiverId,
                RECEIVE_NAME: $scope.receiverName
            };
            DoctorMessageBoardService.postResetWord(postdata);
            $scope.queryChatWords();

            me.reset = "";
            $scope.chatFlag = 0;
        };

        /**
         * 发表子留言按钮事件
         */
        $scope.postResetWordBtn = function (index) {
            $scope.parentIndex = index;
            $scope.chatFlag = 1;
            if($scope.words[index].WORDS_FLAG == 0){
                $scope.receiverName = $scope.words[index].PATIENT_NAME;
                $scope.receiverId = $scope.words[index].PATIENT_ID;
            } else {
                $scope.receiverName = $scope.data.DOCTOR_NAME;
                $scope.receiverId = $scope.data.DOCTOR_CODE;
            }

        };

        /**
         * 点击子留言操作
         */
        $scope.operateReset = function (parentIndex, index) {
            $scope.parentIndex = parentIndex;
            $scope.index = index;
            $scope.chatFlag = 2;
            $scope.receiverName = $scope.words[$scope.parentIndex].RESET[$scope.index].SEND_NAME;
            $scope.receiverId = $scope.words[$scope.parentIndex].RESET[$scope.index].SEND_ID;
            $scope.show();
        };

        /**
         * 提交回复
         */
        $scope.submitWords = function (words) {
            if(!words || !words.trim()){
                return;
            }

            if($scope.chatFlag == 0){
                $scope.postRootWord(this, words);
            } else {
                $scope.postResetWord(this, words);
            }
        }

        /**
         * 显示操作菜单
         */
        $scope.show = function() {
            var hideSheet = $ionicActionSheet.show({
                buttons: [
                    { text: '删除' },
                    { text: '回复' }
                ],
                buttonClicked: function(index) {
                    if(index == 0){
                        $scope.deleteResetWord();
                    } else {
                        $scope.chatFlag = 2;
                    }
                    return true;
                }
            });
        };

        $scope.getPlaceholderText = function () {
            if($scope.chatFlag == 0){
                return "给" + DoctorMessageBoardService.paramData.DOCTOR_NAME + "留言";
            } else {
                return "回复" + $scope.receiverName;
            }
        }
    })
    .build();


/**
 * 产品名称：quyiyuan.
 * 创建用户：淳思博
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加医生详情页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorPersonalPage.controller")
    .require(["kyee.quyiyuan.interaction.doctorSchedule.controller"
        ,"kyee.quyiyuan.interaction.doctorPersonalPage.service"
        ,"kyee.quyiyuan.interaction.doctorSuggest.controller"
        ,"kyee.quyiyuan.interaction.doctorIntroduction.controller"
    ])
    .type("controller")
    .name("DoctorPersonalPageController")
    .params(["$scope", "$state","DoctorPersonalPageService", "CacheServiceBus","KyeeMessageService"])
    .action(function($scope, $state, DoctorPersonalPageService, CacheServiceBus,KyeeMessageService){
        //设置默认标签
        $scope.acitiveTabButtonIndex = 1;

        //获取参数 --预约挂号跳转过来
        var paramData = {};
        paramData = DoctorPersonalPageService.paramData;
        var depData = {};
        depData = DoctorPersonalPageService.deptData;

        //组建页面显示内容
        var doctorInfo = {};
        if(paramData){
            doctorInfo=paramData;
            //进入本页面，必然已选择医院及科室
            doctorInfo.HOSPITAL_ID = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            doctorInfo.HOSPITAL_NAME = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).name;
            doctorInfo.DEPT_NAME = depData.DEPT_NAME;
            doctorInfo.DEPT_CODE = depData.DEPT_CODE;
        }else{
            //todo 无传参过来，测试环境，造数据
            doctorInfo.DOCTOR_NAME = "皋岚雅";
            doctorInfo.DOCTOR_TITLE = "副主任医师";
            doctorInfo.DEPT_NAME = "肝胆外科";
            doctorInfo.HOSPITAL_NAME = "中国人民解放军第四五五医院";
            doctorInfo.DOCTOR_DESC = "2002年7月始在上海市解放军四五五医院肾脏科从事临床医师工作至今。主要方向为腹膜透析，2012年7月作为访问学者在英国谢菲尔德肾脏病研究所进修学习一年，师从国际著名腹膜透析专家Dr Martin Wilkie。作为主要研究人员参与多项腹膜透析相关课题的研究工作并获得基金支持，学术论文多次参与国内学术会议交流并在核心期刊上发表。";
            doctorInfo.HOSPITAL_ID = "1501"; //医院ID
            doctorInfo.DEPT_CODE = "产科"; //科室编码
            doctorInfo.DOCTOR_CODE = 1110; //医生编码
            doctorInfo.IS_MORE_SCHEDULE = 1; //是否需要查询排班
        }
        DoctorPersonalPageService.queryDoctorCareInfo(doctorInfo.HOSPITAL_ID, doctorInfo.DOCTOR_CODE,
            function(data){
                if(data){
                    doctorInfo.CARE_FLAG = data.careFlag ? data.careFlag : "0";
                    doctorInfo.DOCTOR_CARENUM = data.careNum;
                }
            }
        );
        $scope.doctorInfo = doctorInfo;
        DoctorPersonalPageService.doctorInfo = doctorInfo;

        //todo 更改医生关注状态 先检测isLogin、userVsId、patientId 正式需将代码放开
        $scope.changeDoctorCare = function(){
            //var isLogin = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN);
            //var userVsId = isLogin ? CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID : null;
            //var patientId = null;
            //var currentCardInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO);
            //if(currentCardInfo){
            //    patientId = currentCardInfo.PATIENT_ID;
            //}
            //if(!isLogin){
            //    KyeeMessageService.message({
            //        content: "请先登录用户"
            //    });
            //    $state.go("");
            //}else if(!userVsId){
            //    KyeeMessageService.message({
            //        content: "请先添加就诊者"
            //    });
            //    $state.go("");
            //}else if(!patientId){
            //    KyeeMessageService.message({
            //        content: "请先绑定就诊卡"
            //    });
            //    $state.go("");
            //}else{
            //    var careFlag = $scope.doctorInfo.CARE_FLAG == "0" ? "1" : "0";
            //    DoctorPersonalPageService.changeDoctorCare(doctorInfo.HOSPITAL_ID, doctorInfo.DOCTOR_CODE,
            //        careFlag, patientId, function(data){
            //            //变换图标
            //            $scope.doctorInfo.CARE_FLAG = careFlag;
            //            if(careFlag == "1"){
            //                //关注
            //                $scope.doctorInfo.DOCTOR_CARENUM++;
            //            }else{
            //                //取消关注
            //                $scope.doctorInfo.DOCTOR_CARENUM--;
            //            }
            //        });
            //}

            var patientId = 'T1430970708';
            var careFlag = $scope.doctorInfo.CARE_FLAG == "0" ? "1" : "0";
            DoctorPersonalPageService.changeDoctorCare(doctorInfo.HOSPITAL_ID, doctorInfo.DOCTOR_CODE,
                careFlag, patientId, function(data){
                    //变换图标
                    $scope.doctorInfo.CARE_FLAG = careFlag;
                    if(careFlag == "1"){
                        //关注
                        $scope.doctorInfo.DOCTOR_CARENUM++;
                    }else{
                            //取消关注
                        $scope.doctorInfo.DOCTOR_CARENUM--;
                    }
                });
        }
            })
    .build();


/**
 * 产品名称：quyiyuan.
 * 创建用户：淳思博
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加医生排班页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorSchedule.controller")
    .require(["kyee.quyiyuan.interaction.doctorSchedule.service"])
    .type("controller")
    .name("DoctorScheduleController")
    .params(["$scope","DoctorScheduleService","DoctorPersonalPageService","CacheServiceBus"])
    .action(function($scope, DoctorScheduleService, DoctorPersonalPageService, CacheServiceBus){
        //获取入口参数
        var paramData = {};
        paramData = DoctorPersonalPageService.doctorInfo;

        $scope.showEmpty = false;
        $scope.emptyText = "此医生无排班";

        if(paramData.IS_MORE_SCHEDULE){
            //需要重新查询排班
            //todo 根据deptCode、doctorCode、hospitalId去查排班，应该只返回一条记录，且不符合新规范，原业务有bug
            DoctorScheduleService.queryScheduleData(paramData.HOSPITAL_ID, paramData.DEPT_CODE,
                paramData.DOCTOR_CODE, function(data){
                if(data.rows && data.rows.length == 1){
                    //返回数据无误
                    var doctorScheduleLst = data.rows[0].DOCTOR_SCHEDULE_LIST;
                    if(!doctorScheduleLst || doctorScheduleLst.length > 0){
                        $scope.scheduelLst = $scope.dataFomaterForView(doctorScheduleLst);
                    }else{
                            $scope.showEmpty = true;
                    }
                }else{
                    //TODO 返回数据有误
                    console.log("getAppointLabelDictActionC  data.data.rows 返回数据有错误");
                    $scope.showEmpty = true;
                }
            });
        }else{
            //不需要重新查询排班信息
            if(!paramData.DOCTOR_SCHEDULE_LIST && paramData.DOCTOR_SCHEDULE_LIST.length > 0){
                $scope.scheduelLst = $scope.dataFomaterForView(paramData.DOCTOR_SCHEDULE_LIST);
            }else{
                $scope.showEmpty = true;
            }
        }
        //todo 对排班信息进行格式化，向页面只传递需要的内容,若没登录，或者没有userVsId则ISTIME为0
        $scope.dataFomaterForView = function(rows){
            var isLogin = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN);
            var userVsId = isLogin ? CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID : null;
            var isTimeFlag = false;
            if(isLogin && userVsId){
                isTimeFlag = true;
            }
            var resultLst = new Array();
            var j = 0;
            for(var i = 0; i < rows.length; i++){
                var view = {};
                view.CLINIC_DATE_LEFT = new Date(rows[i].CLINIC_DATE).Format("yyyy-MM-dd");
                view.CLINIC_DURATION_LEFT = rows[i].CLINIC_DURATION;
                view.CLINIC_LABEL_LEFT = rows[i].CLINIC_LABEL;
                view.SUM_FEE_LEFT = rows[i].SUM_FEE;
                //若无user_vs_id则不能预约
                view.ISTIME_LEFT = isTimeFlag ? rows[i].ISTIME : 0;
                i++;
                if(i < rows.length){
                    view.CLINIC_DATE_RIGHT = new Date(rows[i].CLINIC_DATE).Format("yyyy-MM-dd");
                    view.CLINIC_DURATION_RIGHT = rows[i].CLINIC_DURATION;
                    view.CLINIC_LABEL_RIGHT = rows[i].CLINIC_LABEL;
                    view.SUM_FEE_RIGHT = rows[i].SUM_FEE;
                    //若无user_vs_id则不能预约
                    view.ISTIME_RIGHT = isTimeFlag ? rows[i].ISTIME : 0;
                }
                resultLst[j] = view;
                j++;
            }
            return resultLst;
        }

        //通过日期换算出星期几
        $scope.dateToWeek = function(mdate){
            var result = '';
            //mdate = Ext.util.Format.date(mdate,"Y/m/d");
            var weekday=new Array(7);
            weekday[0]="周日";
            weekday[1]="周一";
            weekday[2]="周二";
            weekday[3]="周三";
            weekday[4]="周四";
            weekday[5]="周五";
            weekday[6]="周六";
            result += weekday[new Date(mdate).getDay()];
            return result;
        };

        Date.prototype.Format = function(fmt)
        {
            var o = {
                "M+" : this.getMonth()+1,                 //月份
                "d+" : this.getDate(),                    //日
                "h+" : this.getHours(),                   //小时
                "m+" : this.getMinutes(),                 //分
                "s+" : this.getSeconds(),                 //秒
                "q+" : Math.floor((this.getMonth()+3)/3), //季度
                "S"  : this.getMilliseconds()             //毫秒
            };
            if(/(y+)/.test(fmt))
                fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            for(var k in o)
                if(new RegExp("("+ k +")").test(fmt))
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
            return fmt;
        };

        //todo 跳转到挂号单子页面
        $scope.gotoAppoint = function () {
            $state.go("");
        }
    })
    .build();


/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医患互动选择医生页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorSelect.controller")
    .require([
        "kyee.quyiyuan.interaction.doctorSelect.service"
        ,"kyee.quyiyuan.interaction.doctorPersonalPage.controller"
        ,"kyee.quyiyuan.interaction.doctorPersonalPage.service"
        ,"kyee.quyiyuan.interaction.doctorMessageBoard.service"
        ,"kyee.quyiyuan.interaction.doctorMessageBoard.controller"])
    .type("controller")
    .name("DoctorSelectController")
    .params(["$scope", "$state", "DoctorSelectService", "DoctorMessageBoardService", "CacheServiceBus"])
    .action(function($scope, $state, DoctorSelectService, DoctorMessageBoardService, CacheServiceBus){

        DoctorSelectService.queryDoctorList(function (data) {
            $scope.items = data;
            // 判空显示
            if(!$scope.items || $scope.items.length == 0){
                $scope.showEmpty = true;
            }
        });

        /**
         * 点击单个医生事件
         */
        $scope.itemClick = function (item) {
            item.HOSPITAL_NAME = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).name;
            DoctorMessageBoardService.paramData = item;
            $state.go("doctorMessageBoard");
        };

        $scope.getHospitalName = function () {
            return CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).name;
        }
    })
    .build();


/**
 * 产品名称：quyiyuan.
 * 创建用户：淳思博
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加医生评价页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorSuggest.controller")
    .require(["kyee.quyiyuan.interaction.doctorSuggest.service"
        ,"kyee.quyiyuan.satisfaction.satisfactionMain.service"])
    .type("controller")
    .name("DoctorSuggestController")
    .params(["$scope", "$state", "DoctorSuggestService", "SatisfactionMainService","DoctorPersonalPageService"])
    .action(function($scope, $state, DoctorSuggestService, SatisfactionMainService, DoctorPersonalPageService){
        //获取入口参数 --主页面
        var paramData = {};
        paramData = DoctorPersonalPageService.doctorInfo;

        //无数据
        $scope.showEmpty = false;
        $scope.emptyText = "暂无评价";
        //页数
        var page = 0;
        //每页行数
        var pageSize = 4;
        //下拉标识符
        var loadMoreFlag = true;
        $scope.loadMore = function(){
            page++;
            DoctorSuggestService.loadData(paramData.HOSPITAL_ID, paramData.DOCTOR_CODE, page, pageSize,function(data){
                if(page == 1 && data.rows.length == 0){
                    //分页第一次请求，且无数据则显空
                    $scope.showEmpty = true;
                    //无上刷操作，不需要再次加载数据
                    loadMoreFlag = false;
                    var suggestTotalInfo = {};
                    suggestTotalInfo.SUGGEST_AVERAGE_SCORE = 0;
                    suggestTotalInfo.SUGGEST_COUNT = 0;
                    $scope.totalInfo = suggestTotalInfo;
                }else{
                    if(page == 1){
                        //todo 原业务规则有bug，total传递回来是当前记录条数，不是所有记录条数，第一条记录里包含评分及参与评分人数信息
                        var suggestTotalInfo = {};
                        suggestTotalInfo.SUGGEST_AVERAGE_SCORE = data.rows[0].SUGGEST_AVERAGE_SCORE;
                        suggestTotalInfo.SUGGEST_COUNT = data.rows[0].SUGGEST_COUNT;
                        $scope.totalInfo = suggestTotalInfo;
                    }
                    if(data.rows.length != pageSize){
                        //无上刷操作，不需要再次加载数据
                        loadMoreFlag = false;
                    }
                    if($scope.msgs == undefined){
                        $scope.msgs = [];
                    }
                    for(var index = 0; index < data.rows.length ; index++){
                        data.rows[index].SUGGEST_DATE = new Date(data.rows[index].SUGGEST_DATE).Format("yyyy-MM-dd");
                        $scope.msgs.push(data.rows[index]);
                    }
                }
                //通知directive已加载完成
                $scope.$broadcast('scroll.infiniteScrollComplete');
            });
        }

        //判断是否还有更多数据
        $scope.moreDataCanBeLoaded = function(){
            return loadMoreFlag;
        };

        //todo 跳转到医生评价（满意度）
        $scope.gotoSatisfactionDoctor = function(){
            var param = {};
            param.doctorCode = paramData.DOCTOR_CODE;
            param.hospitalId = paramData.HOSPITAL_ID;
            SatisfactionMainService.data = param;
            $state.go("satisfaction");
        };

        Date.prototype.Format = function(fmt)
        {
            var o = {
                "M+" : this.getMonth()+1,                 //月份
                "d+" : this.getDate(),                    //日
                "h+" : this.getHours(),                   //小时
                "m+" : this.getMinutes(),                 //分
                "s+" : this.getSeconds(),                 //秒
                "q+" : Math.floor((this.getMonth()+3)/3), //季度
                "S"  : this.getMilliseconds()             //毫秒
            };
            if(/(y+)/.test(fmt))
                fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            for(var k in o)
                if(new RegExp("("+ k +")").test(fmt))
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
            return fmt;
        };
    })
    .build();



/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医患互动咨询留言页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorMessageBoard.service")
    .type("service")
    .name("DoctorMessageBoardService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function(HttpServiceBus, CacheServiceBus){

        var def = {
            /**
             * 查询聊天记录
             */
            queryChatWords : function(patientId, hospitalId, doctorCode,
                                      page, limit, onSuccess){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "queryPatientWordsInit",
                        patientId: patientId,
                        hospitalId: hospitalId,
                        doctorCode: doctorCode,
                        page: page,
                        limit: limit
                    },
                    onSuccess : function (resp) {
                        if(!resp.rows){
                            return;
                        }
                        onSuccess(resp.rows);
                    }
                });
            },
            /**
             * 删除根留言
             */
            deleteRootWord : function(WORDS_ID){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    showLoading: false,
                    params : {
                        op: "deleteRootMessage",
                        WORDS_ID: WORDS_ID
                    }
                });
            },
            /**
             * 发表根留言
             */
            postRootWord : function(postdata, WORDS_FLAG){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "savePatientWords",
                        postdata: postdata,
                        WORDS_FLAG: WORDS_FLAG
                    }
                });
            },
            /**
             * 删除子留言
             */
            deleteResetWord : function(RESET_ID){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    showLoading: false,
                    params : {
                        op: "deletePatientReset",
                        RESET_ID: RESET_ID
                    }
                });
            },
            /**
             * 发表子留言
             */
            postResetWord : function(postdata){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "savePatientReset",
                        postdata: postdata
                    }
                });
            },
            /**
             * 查询该医生是否绑定
             */
            queryDoctorBindingFlag : function(hospitalId, doctorCode, onSuccess){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "queryDoctorFlag",
                        hospitalId: hospitalId,
                        doctorCode: doctorCode
                    },
                    onSuccess : function (resp) {
                        onSuccess(resp.data);
                    }
                });
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：淳思博
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加医生详情页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorPersonalPage.service")
    .type("service")
    .name("DoctorPersonalPageService")
    .params(["$state", "HttpServiceBus", "CacheServiceBus","KyeeMessageService"])
    .action(function($state, HttpServiceBus, CacheServiceBus,KyeeMessageService){
        var def = {
            //更改医生关注度
            changeDoctorCare : function(hospitalId, doctorCode, careflag, patientId, onSuccess){
                HttpServiceBus.connect({
                    showLoading : false,
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "saveCareDoctor",
                        hospitalId: hospitalId,
                        doctorCode: doctorCode,
                        careFlag: careflag,
                        patientId: patientId
                        //USER_VS_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID
                    },
                    onSuccess : function (resp) {
                        if(!resp){
                            return;
                        }else if(resp.success){
                            onSuccess(resp.data);
                        }else{
                            KyeeMessageService.broadcast({
                                content: resp.message,
                                duration:3000
                            });
                        }
                    }
                });
            },
            queryDoctorCareInfo : function(hospitalId, doctorCode, onSuccess){
                //判断是否登录
                var isLogin = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN);
                var userVsId = isLogin ? CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID : null;
                HttpServiceBus.connect({
                    showLoading : false,
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "queryDoctorCareInfo",
                        hospitalId: hospitalId,
                        doctorCode: doctorCode,
                        userVsId: userVsId
                    },
                    onSuccess : function (resp) {
                        if(!resp){
                            return;
                        }else if(resp.success){
                            onSuccess(resp.data);
                        }else{
                            KyeeMessageService.broadcast({
                                content: resp.message,
                                duration:3000
                            });
                        }
                    }
                });
            }
        };
        return def;
    })
    .build();




/**
 * 产品名称：quyiyuan.
 * 创建用户：淳思博
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加医生排班页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorSchedule.service")
    .require([])
    .type("service")
    .name("DoctorScheduleService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){
        var def = {
            //获取医生排班信息
            //todo 原来业务hospitalId为框架默认传参，为支持跨院写入此处，先按照原业务走，后可在下面参数中将hospitalId覆盖即可
            queryScheduleData : function(hospitalId, deptCode, doctorCode, onSuccess){
                HttpServiceBus.connect({
                    url : "/appoint/action/AppointActionC.jspx",
                    params : {
                        op: "getAppointLabelDictActionC",
                        DEPT_CODE:deptCode,
                        doctorCode:doctorCode,
                        hospitalID:hospitalId
                    },
                    onSuccess : function (resp) {
                        if(!resp){
                            return;
                        }else if(resp.success){
                            //todo 此处需修改，controller需判断消息头，返回数据不符合新规范
                            if(!resp.data){
                                return;
                            }else if(resp.data.success){
                                onSuccess(resp.data.data);
                            }else{
                                KyeeMessageService.broadcast({
                                    content: resp.message,
                                    duration:3000
                                });
                            }
                        }else{
                            KyeeMessageService.broadcast({
                                content: resp.message,
                                duration:3000
                            });
                        }
                    }
                });
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医患互动选择医生页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorSelect.service")
    .type("service")
    .name("DoctorSelectService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function(HttpServiceBus, CacheServiceBus){

        var def = {
            /**
             * 查询可互动的医生记录
             */
            queryDoctorList : function(onSuccess){
                var me = this;
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "querydoctorbyregeist",
                        hospitalId: CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                        userId: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                        userVsId: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID
                    },
                    cache: {
                        by: "HIT",
                        value: 6
                    },
                    onSuccess : function (resp) {
                        if(!resp.data.rows){
                            return;
                        }
                        var data = me.makePicPath(resp.data.rows);
                        onSuccess(data);
                    }
                });
            },
            /**
             * 重新转换图片路径
             * @param data
             * @returns {*}
             */
            makePicPath: function (data) {
                for(var index = 0; index < data.length; index++){
                    if(data[index].DOCTOR_PIC_PATH){
                        if(data[index].DOCTOR_PIC_PATH.substring(0,7) != 'http://'){
                            data[index].DOCTOR_PIC_PATH = AppConfig.SERVER_URL + data[index].DOCTOR_PIC_PATH;
                        }
                    } else {
                        data[index].DOCTOR_PIC_PATH = "/resource/images/icons/headh.png";
                    }
                }
                return data;
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：淳思博
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加医生评价页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.interaction.doctorSuggest.service")
    .type("service")
    .name("DoctorSuggestService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){
        var def = {
            loadData: function (hospitalId, doctorCode, page, pageSize,  onSuccess) {
                HttpServiceBus.connect({
                    url: "/satisfaction/action/DoctorSurveyActionC.jspx",
                    params: {
                        op: "queryDoctorSatisfactionRecord",
                        hospitalId : hospitalId,
                        doctorCode : doctorCode,
                        page: page,
                        limit: pageSize
                    },
                    onSuccess: function (resp) {
                        //todo 此处接口，不符合新规范
                        if(!resp){
                            return;
                        }else{
                            onSuccess(resp);
                        }
                    }
                })
            }


        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：忘记密码controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.findpassword.controller")
    .require([
        "kyee.quyiyuan.login.regist.service",
        "kyee.quyiyuan.login.findpassword.service",
        "kyee.quyiyuan.login.newpassword.controller",
        "kyee.quyiyuan.login.service"
    ])
    .type("controller")
    .name("FindPasswordController")
    .params([
        "$scope",
        "RegistService",
        "FindPasswordService",
        "LoginService"
    ])
    .action(function($scope, RegistService, FindPasswordService, LoginService){
        //初始化用户注册信息
        $scope.userInfo = {
            phoneNum : LoginService.userInfo.user,
            loginNum : "",
            phoneNumDisabled : false,
            validateBtnDisabled : false
        };
        //获取验证码
        $scope.getValiteCode = function(){
            FindPasswordService.getValiteCode($scope.userInfo);
        };
        //提交
        $scope.submit = function(){
            //验证手机号和验证码
            if(!FindPasswordService.validateNum($scope.userInfo)){
                return;
            }
            //将手机号存入到FindPasswordService中，以便在下个页面可以取出
            FindPasswordService.userInfo.phoneNum = $scope.userInfo.phoneNum;
            //跳转到输入新密码页面
            this.openModal("", "modules/business/login/views/new_password.html");
        };
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：登录页面的controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.controller")
    .require([
        "kyee.quyiyuan.login.regist.controller",
        "kyee.quyiyuan.login.service",
        "kyee.quyiyuan.login.findpassword.controller",
        "kyee.framework.service.view"
    ])
    .type("controller")
    .name("LoginController")
    .params([
        "$scope",
        "$state",
        "LoginService",
        "KyeeViewService"
    ])
    .action(function($scope, $state, LoginService, KyeeViewService){
        //页面显示信息
        $scope.showInfo = {
            rememberIconClass : "icon-radio-unchecked",
            auoLoginIconClass : "icon-radio-unchecked"
        };
        //获取本地存储的用户信息
        $scope.userInfo = LoginService.getLocalUserInfo();
        //设置LoginService中的loginControllerScope
        LoginService.loginControllerScope = $scope;

        //隐藏模态窗口
        $scope.hideModal = function(id){
            KyeeViewService.hideModal({
                id : id,
                scope : $scope
            });
        };
        //打开模态窗口
        $scope.openModal = function(id, template){
            KyeeViewService.openModalFromUrl({
                id : id,
                url : template,
                scope : $scope
            });
        };

        //登录页面回退
        $scope.backToHome = function(){
            this.hideModal();
            //从首页跳转到登陆页
            if(LoginService.frontPage == "-1"){
                $state.go("home");
            }
        };

        //登录后的跳转
        var afterLogin = function(){
            //有可能从别的路由页面（如个人中心）打开了登录模态页面,因此需要先关闭模态窗口,之后才可以用路由导航
            $scope.hideModal("");
            if(LoginService.frontPage == "1"){   //从“关于趣医”跳转到登录页面
                $state.go("aboutquyi_feedback");
            }
            else if(LoginService.frontPage == "2"){   //从“切换角色”跳转到登录页面

            }
            else{
                $state.go("home");
            }
        };

        //用户登录
        $scope.doLogin = function(){
            //将doLogin方法传入，在登录成功的时候调用此方法
            LoginService.doLogin($scope.userInfo, afterLogin);
        };
        //忘记密码了？
        $scope.findPassword = function(){
            //将手机号存储到LoginService中的userInfo中,以便带入到找回密码页面
            LoginService.userInfo.user = $scope.userInfo.user;
            //跳转到找回密码页面
            this.openModal('', 'modules/business/login/views/find_password.html');
            //记录从登录页面跳转到找回密码页面
            LoginService.toFindPwdFrontPage = "1";
        };

        //选中自动登录所做处理
        var autoLoginHandle = function(){
            $scope.showInfo.auoLoginIconClass = "icon-radio-checked";
            $scope.userInfo.autoLogin = true;
        };
        //取消自动登录所做处理
        var diaAutoLoginHandle = function(){
            $scope.showInfo.auoLoginIconClass = "icon-radio-unchecked";
            $scope.userInfo.autoLogin = false;
        };

        //点击自动登录,切换选中和取消（改变class）
        $scope.clickAutoLogin = function(){
            var check = $scope.showInfo.auoLoginIconClass;
            if(check == "icon-radio-unchecked") {  //目前未选中状态,则选中
                autoLoginHandle();
                rememberPwdHandle();   //选中自动登录，则选中记住密码
            }else{                                   //目前选中状态，则取消选中
                diaAutoLoginHandle();
            }
        };

        //选中记住密码所做操作
        var rememberPwdHandle = function(){
            $scope.showInfo.rememberIconClass = "icon-radio-checked";
            $scope.userInfo.rememberPwd = true;
        };
        //取消记住密码所做操作
        var disRememberPwdHandle = function(){
            $scope.showInfo.rememberIconClass = "icon-radio-unchecked";
            $scope.userInfo.rememberPwd = false;
        };

        //点击记住密码,切换选中和取消（改变class）
        $scope.clickPwd = function(){
            var check = $scope.showInfo.rememberIconClass;
            if(check == "icon-radio-unchecked") {    //目前未选中记住密码，则选中记住密码
                rememberPwdHandle();
            }else{                                      //目前选中记住密码，则取消记住密码
                disRememberPwdHandle();
                diaAutoLoginHandle();   //取消记住密码，则取消自动登录
            }
        };

        //页面加载的时候设置“输入密码”“自动登录”的勾选情况
        var setCheckInfo = function(){
            var autoLogin = $scope.userInfo.autoLogin;
            var rememberPwd = $scope.userInfo.rememberPwd;
            if(autoLogin){
                autoLoginHandle();
            }
            if(rememberPwd){
                rememberPwdHandle();
            }
        };
        setCheckInfo();
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：找回密码（输入新密码）的controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.newpassword.controller")
    .require([
        "kyee.quyiyuan.login.newpassword.service",
        "kyee.quyiyuan.login.findpassword.service",
        "kyee.framework.service.view",
        "kyee.quyiyuan.login.service"
    ])
    .type("controller")
    .name("NewPasswordController")
    .params([
        "$scope",
        "NewPasswordService",
        "FindPasswordService",
        "KyeeViewService",
        "LoginService"
    ])
    .action(function($scope, NewPasswordService, FindPasswordService, KyeeViewService, LoginService){
        //初始化用户注册信息
        $scope.userInfo = {
            newPassword : ""
        };
        //隐藏模态窗口
        $scope.hideModal = function(id){
            KyeeViewService.hideModal({
                id : id,
                scope : $scope
            });
        };
        //打开模态窗口
        $scope.openModal = function(id, template){
            KyeeViewService.openModalFromUrl({
                id : id,
                url : template,
                scope : $scope
            });
        };
        //修改密码后的回调
        var afterChangePwd = function(){
            var toFindPwdFrontPage = LoginService.toFindPwdFrontPage;
            if(toFindPwdFrontPage == "1"){   //从登录页面到找回密码页面,隔了两层调用两次hideModel方法
                $scope.hideModal();
                $scope.hideModal();
            }
            if(toFindPwdFrontPage == "2"){  //从注册页面跳转到登录页面,隔了三层模态窗口因此调用两次hideModel方法
                $scope.hideModal();
                $scope.hideModal();
                $scope.hideModal();
            }
        };
        $scope.submit = function(){
            var phoneNum = FindPasswordService.userInfo.phoneNum;
            var newPassword = $scope.userInfo.newPassword;
            if(!NewPasswordService.validatePassword(newPassword)){
                return;
            }
            //重新设置密码
            NewPasswordService.resetPassword(phoneNum, newPassword, afterChangePwd);
        }
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：注册页面的controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.regist.controller")
    .require([
        "kyee.quyiyuan.login.regist.service",
        "kyee.framework.service.view",
        "kyee.framework.service.scanning"
    ])
    .type("controller")
    .name("RegistController")
    .params([
        "$scope",
        "$state",
        "RegistService",
        "KyeeViewService",
        "KyeeScanService"
    ])
    .action(function($scope, $state, RegistService, KyeeViewService, KyeeScanService){
        //初始化用户注册信息
        $scope.userInfo = {
            phoneNum : "",
            loginNum : "",
            password : "",
            passwordAgain : "",
            phoneNumDisabled : false,
            validateBtnDisabled : false,
            validateMsgText : "获取验证码",
            guideNum : "",                        //导医编号
            isGuideShow : true                   //是否显示导医
        };
        //隐藏模态窗口
        $scope.hideModal = function(id){
            KyeeViewService.hideModal({
                id : id,
                scope : $scope
            });
        };
        //打开模态窗口
        $scope.openModal = function(id, template){
            KyeeViewService.openModalFromUrl({
                id : id,
                url : template,
                scope : $scope
            });
        };
        //获取验证码
        $scope.getValiteCode = function(){
            RegistService.getValiteCode($scope);
        };
        //注册并登录后页面跳转
        var afterRegistAndLogin = function(){
            //注册页面和首页面隔了两层模态窗口，因此调用两次hideMoal方法
            $scope.hideModal("");
            $scope.hideModal("");
            $state.go("home");
        };
        //注册并登录
        $scope.registAndLogin = function(){
            //注册并登录后调用afterRegistAndLogin方法，跳转到相应的页面
            RegistService.registAndLogin($scope, afterRegistAndLogin);
        };
        //扫描二维码   bug此方法未结合外壳代码调试
        $scope.scan = function(){
            KyeeScanService.scan({
                success : function(code){
                    $scope.userInfo.guideNum = code;
                },
                error : function(){
                    RegistService.remind("提示信息", "扫描二维码失败!", "知道了");
                }
            });
        };
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：首页页签的controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
	.group("kyee.quyiyuan.login.tabs.controller")
	.require([
		"kyee.framework.service.view",
		"kyee.quyiyuan.login.service",
		"kyee.quyiyuan.login.controller"
	])
	.type("controller")
	.name("TabsController")
	.params(["$scope", "$state", "KyeeViewService", "LoginService", "CacheServiceBus"])
	.action(function($scope, $state, KyeeViewService, LoginService, CacheServiceBus){
		$scope.loginState = "未登录";

		//将$scope传入LoginService中，为了在LoginService中可以直接改变视图
		LoginService.tabsControllerScope = $scope;

		//自动登录
		LoginService.autoLoad();

		//打开模态窗口
		$scope.openModal = function(id, template){
			KyeeViewService.openModalFromUrl({
				id : id,
				url : template,
				scope : $scope
			});
		};

		//登陆或到个人中心
		$scope.loginOrToPersonalCenter = function(){
			//从cache取出用户信息判断是否登陆，如果未登陆跳转到登陆页面，否则跳转到个人信息页面
			var cache = CacheServiceBus.getMemoryCache();
			var isLogin = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN);
			if(!isLogin){
				this.openModal('', 'modules/business/login/index.html');
			}else{
				$state.go("center->MAIN_TAB");
			}
			//设置从首页面跳转到登陆页
			LoginService.frontPage = "-1";
		};
	})
	.build();
/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：找回密码的service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.findpassword.service")
    .require([
        "kyee.quyiyuan.login.regist.service",
        "kyee.quyiyuan.login.service"
    ])
    .type("service")
    .name("FindPasswordService")
    .params([
        "$state",
        "RegistService",
        "LoginService",
        "HttpServiceBus",
        "KyeeMessageService",
        "CacheServiceBus"
    ])
    .action(function($state, RegistService, LoginService, HttpServiceBus, KyeeMessageService, CacheServiceBus){

        var def = {
            //用户信息
            userInfo : {
                phoneNum : ""
            },
            validateNum : function(userInfo){
                var phoneNum = userInfo.phoneNum;
                var loginNum = userInfo.loginNum.trim();
                if(!RegistService.validatePhoneNum(phoneNum)){
                    return false;
                }
                if(!RegistService.validateLoginNum(loginNum)){
                    return false;
                }
                return true;
            },
            getValiteCode : function(userInfo){
                var phoneNum = userInfo.phoneNum;
                //检查是否联网
                if(!LoginService.isConnect()){
                    return;
                }
                phoneNum=phoneNum.trim();
                //检验手机号
                if(!RegistService.validatePhoneNum(phoneNum)){
                    return;
                }else{
                    if(phoneNum.length==14){
                        phoneNum=phoneNum.substring(3);
                    }
                    //检查手机号是否存在,存在则去获取验证码
                    HttpServiceBus.connect({
                        url : '/user/action/LoginAction.jspx',
                        params : {
                            op : 'PhoneNumExist',
                            PHONE_NUMBER : phoneNum
                        },
                        onSuccess : function(retVal){
                            var success = retVal.success;
                            if(!success){  //手机存在
                                def.getMsgData(userInfo);
                            }else{        //手机不存在
                                KyeeMessageService.message({
                                    title : "提示",
                                    content : "该手机号未注册，不能修改密码！",
                                    okText : "知道了"
                                });
                            }
                        },
                        onError : function(retVal){
                        }
                    });
                }
            },
            //发送短信获取验证码
            getMsgData : function(userInfo){
                var phoneNum = userInfo.phoneNum;
                var cache = CacheServiceBus.getMemoryCache();
                HttpServiceBus.connect({
                    url : '/user/action/DataValidationActionC.jspx',
                    params : {
                        op:'sendRegCheckCodeActionC',
                        hospitalId: cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_HOSPITAL_ID),
                        PHONE_NUMBER: phoneNum,
                        modId:'10001',
                        messageType:'2'
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        if(success){
                            RegistService.checkNum = retVal.data.SECURITY_CODE;
                            userInfo.phoneNumDisabled = true;
                            userInfo.validateBtnDisabled = true;
                            def.onRefreshDataviewDelay();
                        } else {
                            def.checkNum = undefined;
                            KyeeMessageService.message({
                                title : "提示",
                                content : "手机号获取验证码失败！",
                                okText : "知道了"
                            });
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            onRefreshDataviewDelay : function(){
                def.second = 120;
                var validateMsgBtn = document.getElementById("findPassword.validateMsgBtn");
                var phoneNumInput = document.getElementById("findPassword.phoneNumInput");
                def.task=window.setInterval(def.setBtnState, 1000, validateMsgBtn, phoneNumInput);
            },
            setBtnState: function (validateMsgBtn, phoneNumInput) {
                try {
                    if (def.second != -1) {
                        //直接操作$scope中的模型效率低下并且页面无法更新,因此直接操作dom
                        validateMsgBtn.innerText = '剩余' + def.second + '秒';
                        def.second--;
                    } else {
                        //直接操作$scope中的模型使页面无法更新,因此直接操作dom
                        validateMsgBtn.removeAttribute("disabled");
                        phoneNumInput.removeAttribute("disabled");
                        validateMsgBtn.innerText = '获取验证码';
                        clearInterval(def.task);
                        RegistService.checkNum = "";
                    }
                } catch (e) {
                    clearInterval(def.task);
                }
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：登录service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.service")
    .require([
        "kyee.framework.service.message",
        "kyee.quyiyuan.login.rsautil.service",
        "kyee.framework.service.push",
        "kyee.framework.device.deviceinfo",
        "kyee.framework.device.network"
    ])
    .type("service")
    .name("LoginService")
    .params([
        "$state",
        "KyeeMessageService",
        "RsaUtilService",
        "HttpServiceBus",
        "CacheServiceBus",
        "KyeePushService",
        "KyeeDeviceInfoService",
        "KyeeNetworkService"
    ])
    .action(function($state, KyeeMessageService, RsaUtilService, HttpServiceBus, CacheServiceBus, KyeePushService, KyeeDeviceInfoService, KyeeNetworkService){

        var def = {
            //是否自动登录了，解决自动登录两次的问题
            isAutoLoad : false,
            //TabsController中的scope,此处哪它是为了注销时将首页页签中的“选择就诊卡”改为“未登录”
            tabsControllerScope : {},
            //LoginController对应的scope
            loginControllerScope : {},
            //用户信息
            userInfo : {
                user : "",
                password : ""
            },
            setUserInfo : function(userInfo){
                this.loginControllerScope.userInfo = userInfo;
            },
            //跳转到登陆页面的上一个页面  (-1:首页面 1:关于趣医 2:切换角色)
            frontPage : "-1",
            //跳转到找回密码的上一个页面  (1:登录页面 2:注册页面)
            toFindPwdFrontPage : "-1",
            //登录
            login : function(user, userInfo){
                this.userInfo.user = user;   //表示当前有登录人
                this.tabsControllerScope.loginState = userInfo.NAME || "选择就诊卡";  //改变首页页签的值
            },
            //设置首页页签的就诊者姓名
            setPatientName : function(name){
                this.tabsControllerScope.loginState = name;  //改变首页页签的值
            },
            //注销
            logoff : function(){
                this.userInfo.user = "";   //表示当前无登录人
                this.tabsControllerScope.loginState = "未登陆";  //改变首页页签的值
                var cache = CacheServiceBus.getMemoryCache();
                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN, false);
            },
            //检测网络断开，给出提示，直接返回！
            isConnect : function(){
                var connected = KyeeNetworkService.isNetConnected();
                if(!connected){
                    KyeeMessageService.message({
                        title : "系统提示",
                        content : "网络连接断开，请检查网络！",
                        okText : "知道了"
                    });
                }
                return connected;
            },
            validateUserInfo : function(userInfo){
                //判断用户信息是否为空
                if (!userInfo.user) {
                    KyeeMessageService.message({
                        title : "提示",
                        content : "用户名不能为空",
                        okText : "知道了"
                    });
                    return false;
                }
                if (!userInfo.pwd) {
                    KyeeMessageService.message({
                        title : "提示",
                        content : "密码不能为空",
                        okText : "知道了"
                    });
                    return false;
                }
                return true;
            },
            //判断是否需要记住密码与自动登录,并将信息写入localStorage
            saveUserInfo : function(userInfo, storageCache){
                //判断是否需要记住密码与自动登录,并将信息写入localStorage
                storageCache.set(CACHE_CONSTANTS.STORAGE_CACHE.REMEMBER_PWD, userInfo.rememberPwd);
                storageCache.set(CACHE_CONSTANTS.STORAGE_CACHE.AUTO_LOGIN, userInfo.autoLogin);
                this.userInfo.user = userInfo.user;
                if (userInfo.rememberPwd) {
                    storageCache.set(CACHE_CONSTANTS.STORAGE_CACHE.USER, userInfo.user);
                    storageCache.set(CACHE_CONSTANTS.STORAGE_CACHE.PWD, userInfo.pwd);
                } else {
                    storageCache.remove(CACHE_CONSTANTS.STORAGE_CACHE.USER);
                    storageCache.remove(CACHE_CONSTANTS.STORAGE_CACHE.PWD);
                }
            },
            //初始化手机版本信息
            onTestBtnBtnTap : function(){
                var cache = CacheServiceBus.getMemoryCache();
                KyeeDeviceInfoService.getInfo({
                    success:function(device){
                        var deviceType = device.platform;
                        if(deviceType == "Android"){
                            var model = device.model;
                            var version = device.version;
                            cache.set(CACHE_CONSTANTS.MEMORY_CACHE.PHONE_TYPE, model);
                            cache.set(CACHE_CONSTANTS.MEMORY_CACHE.VERSION_NUM, version);
                            cache.set(CACHE_CONSTANTS.MEMORY_CACHE.OPERATING_SYS, "0");
                        }
                        if(deviceType == "IOS"){
                            cache.set(CACHE_CONSTANTS.MEMORY_CACHE.PHONE_TYPE, undefined);
                            cache.set(CACHE_CONSTANTS.MEMORY_CACHE.VERSION_NUM, undefined);
                            cache.set(CACHE_CONSTANTS.MEMORY_CACHE.OPERATING_SYS, "1");
                        }
                    },
                    error:function(){

                    }
                });
            },
            //获取本地存储的用户信息
            getLocalUserInfo : function(){
                var storageCache = CacheServiceBus.getStorageCache();
                return {
                    user : storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.USER),
                    pwd : storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.PWD),
                    rememberPwd : Boolean(storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.REMEMBER_PWD)),
                    autoLogin : Boolean(storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.AUTO_LOGIN))
                };
            },
            //用户登录
            doLogin : function(userInfo, afterLogin){
                //bug 目前在chrome调试，无法获取设备信息，放开以下方法会报错
                //初始化手机版本信息
                //this.onTestBtnBtnTap();
                //判断网络是否断开
                //if(!this.isConnect()){
                //    return;
                //}
                //判断用户信息是否为空
                if(!this.validateUserInfo(userInfo)){
                    return;
                }
                //后台验证
                this.loginStoreAuth(userInfo, afterLogin);
            },
            //后台验证
            loginStoreAuth : function(userInfo, afterLogin){
                var user = userInfo.user;
                var pwd = userInfo.pwd;
                var localPwd = pwd;
                var timeRandom = new Date().getTime();
                pwd = pwd + '$$@@' + timeRandom;
                pwd = RsaUtilService.getRsaResult(pwd);   //rsa加密 密码
                var cache = CacheServiceBus.getMemoryCache();
                var storageCache = CacheServiceBus.getStorageCache();
                storageCache.remove(user + '_KY');
                storageCache.set(user + '_KY', timeRandom);
                HttpServiceBus.connect({
                    url : '/user/action/LoginAction.jspx',
                    params : {
                        op:'login',
                        USER_CODE: user,
                        PASSWORD: pwd,
                        isAutoPwdLogin: false,   //是否是自动登录标识
                        userSource: "0", //global.currentUserSource,
                        PUBLIC_SERVICE_TYPE: "", //global.currentUserPublicServerType,//微信公众平台用户ID
                        OPEN_ID: "",  //global.currentUserOpenId //开放平台类型
                        opVersion : "1.2.0"
                    },
                    onSuccess : function(retVal){
                        var isSuccess = retVal.success;
                        var retUserInfo = retVal.data;
                        if(isSuccess){   //登录成功
                            //登录后页面跳转
                            afterLogin();
                            //判断是否需要记住密码与自动登录,并将信息写入localStorage
                            def.saveUserInfo(userInfo, storageCache);
                            //设置首页面的页签的标题和LoginService中userInfo的值,记录用户已经登录
                            def.login(user, retUserInfo);
                            //用户信息存入CacheServiceBus中
                            if(retUserInfo){
                                def.saveUserInfoToCache(retUserInfo, user, localPwd);
                            }
                            //存储推送关联
                            def.savaPushUserId(retUserInfo, storageCache, cache);
                            //加载和医院相关后台配置
                            def.queryUserHospital();
                        } else{        //登录失败
                            var errorMsg = retVal.message;
                            KyeeMessageService.message({
                                title : "提示",
                                content : errorMsg,
                                okText : "知道了"
                            });
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            saveUserInfoToCache : function(userInfo, user, localPwd){
                var cache = CacheServiceBus.getMemoryCache();
                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER, user);
                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_PWD, localPwd);
                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD, userInfo);
                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.IS_LOGIN, true);
                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_GNQ_USER_TYPE, userInfo.USER_TYPE);
            },
            //存储推送关联
            savaPushUserId : function(userInfo, storageCache, cache){
                if(KyeePushService.isRegistered()){
                    //获取设备信息
                    var deviceType = this.getDeviceType(storageCache, cache);
                    var savePushVsUser = {
                        "APP_USER_ID" : userInfo.USER_ID,
                        "BAIDU_USER_ID" : KyeePushService.getUserId(),
                        "BAIDU_CHANNEL_ID" : KyeePushService.getChannelId(),
                        "Device_Type" : deviceType
                    };
                    HttpServiceBus.connect({
                        url : '/baidupush/action/AppPushActionC.jspx',
                        params : {
                            op : "registerBaiduPushUserActionC",
                            postdata : savePushVsUser
                        },
                        onSuccess : function(retVal){
                            if(retVal){
                                var success = retVal.success;
                                var message = retVal.message;
                                if(!success){
                                    if(message){
                                        KyeeMessageService.message({
                                            title : "提示",
                                            content : message,
                                            okText : "知道了"
                                        });
                                    }else{
                                        KyeeMessageService.message({
                                            title : "提示",
                                            content : "网络不给力，请稍后重试！",
                                            okText : "知道了"
                                        });
                                    }
                                }
                            }
                        },
                        onError : function(retVal){
                        }
                    });
                }
            },
            //查询用户当前选择医院
            queryUserHospital : function(){
                var cache = CacheServiceBus.getMemoryCache();
                var storageCache = CacheServiceBus.getStorageCache();
                var currentUserRecord = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD);
                if (currentUserRecord.HOSPITAL_ID == undefined || currentUserRecord.HOSPITAL_ID == '0'
                    || currentUserRecord.HOSPITAL_ID == storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id){
                    //获取默认就诊者的主键值
                    this.getDefaultUserVsId(currentUserRecord);
                    //定位用户所在城市
                    setTimeout(this.cityPositioning(storageCache, cache), 1000);
                    //查询登陆账户下选择的就诊者
                    this.getSelectCustomInfo(currentUserRecord, cache, storageCache);
                    if (currentUserRecord.ROLE_CODE == 3 || currentUserRecord.ROLE_CODE == 4) {//医生和普通患者在主界面进行判断加载相应功能模块
                        //$state.go("");
                    }
                    return;
                }
                HttpServiceBus.connect({
                    url : '/area/action/AreaHospitalActionImplC.jspx',
                    params : {
                        op:'queryHospitalName',
                        USER_TYPE: currentUserRecord.USER_TYPE,
                        individual_Hospital: currentUserRecord.HOSPITAL_ID
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        var records = retVal.data;
                        var message = retVal.message;
                        if (success && records.length > 0) {
                            //bug 选择医院接口尚未提供
                            //KYMH.app.getController('KYMH.controller.comm.HospitalSelect').selectHospital(null, null, null, records[0], null, null, true);
                            setTimeout(def.cityPositioning(storageCache, cache), 1000);
                        } else {
                            //获取默认就诊者的主键值
                            def.getDefaultUserVsId(currentUserRecord);
                            setTimeout(def.cityPositioning(storageCache, cache), 1000);
                            //查询登陆账户下选择的就诊者
                            def.getSelectCustomInfo(currentUserRecord, cache, storageCache);
                            if (currentUserRecord.ROLE_CODE == 3 || currentUserRecord.ROLE_CODE == 4) {//医生和普通患者在主界面进行判断加载相应功能模块zm
                                //this.createViewToViewport('KYMH.view.Main');
                            }
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            //查取登陆账户下选择的就诊者
            getSelectCustomInfo : function(currentUserRecord, cache, storageCache){
                var userId = currentUserRecord.USER_ID;
                HttpServiceBus.connect({
                    url : '/center/action/CustomPatientAction.jspx',
                    params : {
                        op:'selectedCustomPatient',
                        loc:'c',
                        userId: userId,
                        hospitalId: storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                        USER_VS_ID: storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.USER_VS_ID_BEFORE_1001)
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        var data = retVal.data;
                        var message = retVal.message;
                        if(success){
                            if(data && data.length > 0){
                                var cardNo = data[0].CARD_NO;//该就诊者的默认卡号
                                var cardInfo = undefined;
                                //成功并且有数据，解析该就诊者的卡信息
                                angular.forEach(data, function (item, index, items){
                                    var detialList = item.DETIAL_LIST;
                                    if(detialList){
                                        detialList = JSON.parse(detialList);
                                    }
                                    item.PATIENT_CARD = [];
                                    if (detialList && detialList.length > 0) {
                                        angular.forEach(detialList, function (detialItem, detialIndex, detialItems) {
                                            detialItem.USER_VS_ID = item.USER_VS_ID;
                                            //排除重复的卡号，并且清理空的身份证
                                            var isExist = true;
                                            angular.forEach(item.PATIENT_CARD, function (patItem) {
                                                if (patItem.PATIENT_ID == detialItem.PATIENT_ID) {
                                                    if (patItem.ID_NO == null || patItem.ID_NO == undefined) {
                                                        patItem = detialItem;
                                                    }
                                                    else {
                                                        isExist = false;
                                                    }
                                                }
                                            });
                                            if (isExist) {
                                                item.PATIENT_CARD.push(detialItem);
                                            }
                                        });
                                    }
                                    //根据该就诊者的默认卡号选择该医院下的卡信息
                                    if (cardNo != null || cardNo != "") {
                                        angular.forEach(item.PATIENT_CARD, function (item, index, items) {
                                            if (item.CARD_NO == cardNo) {
                                                cardInfo = item;
                                            }
                                        });
                                    }
                                });
                                cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT, data[0]);
                                storageCache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT, data[0]);

                                //bug 此处代码复杂
                                //if (currentUserRecord && currentUserRecord.ROLE_CODE == '3'
                                //    && currentUserRecord.DOCTOR_CODE && this.getPersonBtn()) { //手动登录后医生视角设置为“个人中心”
                                //    this.getPersonBtn().setText(global.setingPersonInfo + '个人中心</div></div>');
                                //} else {
                                //    if (global.currentHospitalID != '1001' &&
                                //        global.currentCustomPatient.OFTEN_NAME == '体验就诊者') { //切换医院时，针对体验就诊者特殊处理
                                //        global.currentCustomPatient = undefined;
                                //        localStorage.removeItem('currentCustomPatient');
                                //        if (Ext.Viewport.down('main #personBtn') != null) { //KYEEAPPTEST-986
                                //            Ext.Viewport.down('main #personBtn').setText(global.setingPersonInfo + '选择就诊卡</div></div>');
                                //        }
                                //    } else {
                                //        var str = global.currentCustomPatient.OFTEN_NAME;
                                //        if (Ext.Viewport.down('main #personBtn') != null) { //KYEEAPPTEST-986
                                //            Ext.Viewport.down('main #personBtn').setText(global.setingPersonInfo + str + '</div></div>');
                                //        }
                                //    }
                                //}

                                if (cardInfo) {
                                    cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO, cardInfo);
                                    storageCache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO, cardInfo);
                                }
                                if (data[0].PATIENT_CARD && data[0].PATIENT_CARD.length > 0 &&
                                    cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT)) {
                                    cache.set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO, data[0].PATIENT_CARD[0]);
                                    cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).CARD_NO = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO).CARD_NO;
                                }

                                ////------------------begin   bug此处逻辑复杂
                                //var roleCode = global.currentUserRecord.ROLE_CODE;
                                //if (roleCode == '1') {//门诊业务  跳到  就诊树页面zm
                                //    var ctrol = KYMH.app.getController('KYMH.controller.Main');
                                //    ctrol.registRecBtnTap();
                                //    return;
                                //} else if (roleCode == '2') {//住院业务  跳到  住院业务页面zm
                                //    this.createViewToViewport('KYMH.view.myQuYi.InpatientMain');
                                //    return;
                                //}
                                //KYMH.app.getController('KYMH.controller.Main').getUserMessageData();
                                ////------------------end
                            }
                        }else{
                            if(message){
                                KyeeMessageService.message({
                                    title : "提示",
                                    content : message,
                                    okText : "知道了"
                                });
                            }else{
                                KyeeMessageService.message({
                                    title : "提示",
                                    content : "网络不给力，请稍后重试！",
                                    okText : "知道了"
                                });
                            }
                        }
                        if(!currentUserRecord.PHONE_NUMBER){
                            KyeeMessageService.confirm({
                                title : "提示",
                                content : "您还未绑定手机号，是否去绑定？",
                                onSelect : function(flag){
                                    if(flag){
                                        //如果用于点击"是"则跳转到个人信息页面
                                        $state.go("center->MAIN_TAB");
                                    }
                                }
                            });
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            //定位用户所在城市
            cityPositioning : function(storageCache, cache){
                var geolocation = new BMap.Geolocation();
                function myFun(r) {
                    if (this.getStatus() != BMAP_STATUS_SUCCESS) {
                        return;
                    }
                    var cityName = r.address.city;
                    var lastCityName = storageCache.get(CACHE_CONSTANTS.MEMORY_CACHE.LAST_CITY_NAME);
                    if (cityName == lastCityName) {
                        return;
                    } else {
                        def.queryCityByName(cityName, storageCache, cache);
                    }
                }
                geolocation.getCurrentPosition(myFun);
            },
            queryCityByName : function(cityName, storageCache, cache){
                HttpServiceBus.connect({
                    url: '/area/action/AreaHospitalActionImplC.jspx',
                    params: {
                        op : "queryCityByName",
                        cityName: cityName
                    },
                    onSuccess: function (retVal) {
                        if(retVal.rows && retVal.rows.length > 0){
                            var result = retVal.rows[0];
                            if (result && result.PROVINCE_CODE) {
                                //城市信息放入缓存中
                                storageCache.set(CACHE_CONSTANTS.STORAGE_CACHE.LAST_CITY_INFO, result);
                            }
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            //获取当前登陆者的默认就诊者id字段值
            getDefaultUserVsId : function(currentUserRecord){
                //判断身份证号是否存在,若不存在（信息还未完善）则表示不需要获取就诊卡
                if (!currentUserRecord.ID_NO || !currentUserRecord.NAME) {
                    return;
                }
                HttpServiceBus.connect({
                    url : '/user/action/LoginAction.jspx',
                    params : {
                        op : 'getDefaultUserVsId',
                        userId : currentUserRecord.USER_ID,
                        idNo : currentUserRecord.ID_NO,
                        name : currentUserRecord.NAME
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        var userInfo = retVal.data;
                        var message = retVal.message;
                        if(success){
                            //数据加载成功，给全局变量赋值
                            currentUserRecord.DEFAULT_USER_VS_ID = userInfo.USER_VS_ID;
                            currentUserRecord.DEFAULT_CARD_NO = userInfo.CARD_NO;
                            currentUserRecord.DEFAULT_FLAG = userInfo.FLAG;
                        }else{
                            //失败  给全局赋默认值
                            currentUserRecord.DEFAULT_USER_VS_ID = "-1";
                            currentUserRecord.DEFAULT_CARD_NO = "";
                            currentUserRecord.DEFAULT_FLAG = "3";
                            if(message){
                                KyeeMessageService.message({
                                    title : "提示",
                                    content :  retVal.message,
                                    okText : "知道了"
                                });
                            }else{
                                KyeeMessageService.message({
                                    title : "提示",
                                    content :  "网络不给力，请稍后重试！",
                                    okText : "知道了"
                                });
                            }
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            //获取设备类型(3:Android 4:IOS)
            getDeviceType : function(storageCache, cache){
                var operatingSys = cache.get(CACHE_CONSTANTS.MEMORY_CACHE.OPERATING_SYS);
                if(operatingSys == "0"){  //android
                    return "3";
                }
                if(operatingSys == "1"){   //ios
                    return "4";
                }
            },
            //自动登入
            autoLoad : function () {
                //设置已经移动登录了，解决自动登录两次的问题
                var isAutoLoad = this.isAutoLoad;
                if(isAutoLoad){
                    return;
                }
                this.isAutoLoad = true;

                var cache = CacheServiceBus.getMemoryCache();
                var storageCache = CacheServiceBus.getStorageCache();
                var rememberPwd = Boolean(storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.REMEMBER_PWD));
                var autoLogin = Boolean(storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.AUTO_LOGIN));
                if(!autoLogin || !rememberPwd){
                    return;
                }
                //获取用户名密码
                var user = storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.USER);
                var pwd = storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.PWD);
                this.autoLoadAuth(user, pwd, storageCache, cache);
            },
            autoLoadAuth : function(user, pwd, storageCache, cache){
                //bug 目前未放开此方法，在chrome上设备信息无法获取
                //this.onTestBtnBtnTap(); //初始化手机版本信息
                //初始化登录store
                var localPwd = pwd;
                var cookiePwd = storageCache.get(user + '_KY');
                if (!cookiePwd) {
                    var timeRandom = new Date().getTime();
                    pwd = pwd + '$$@@' + timeRandom;
                    pwd = RsaUtilService.getRsaResult(pwd);   //rsa加密 密码
                } else {
                    pwd = pwd + '$$@@' + cookiePwd;
                    pwd = RsaUtilService.getRsaResult(pwd);   //rsa加密 密码
                }
                HttpServiceBus.connect({
                    url : '/user/action/LoginAction.jspx',
                    params : {
                        op:'login',
                        opVersion : "1.2.0",
                        USER_CODE: user,
                        PASSWORD: pwd,
                        isAutoPwdLogin: true, //是否是自动登录标识
                        userSource: storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.CURRENT_USER_SOURCE)
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        var userInfo = retVal.data;
                        var message = retVal.message;
                        if (success) {
                            if (userInfo) {
                                //用户信息存入CacheServiceBus中
                                def.saveUserInfoToCache(userInfo, user, localPwd);
                                //存储推送关联
                                def.savaPushUserId(userInfo, storageCache, cache);
                                //获取默认就诊者的主键值
                                def.getDefaultUserVsId(userInfo);
                                //定位城市
                                def.cityPositioning(storageCache, cache);
                                //登陆成功，查询登陆账户下选择的就诊者
                                def.getSelectCustomInfo(userInfo, cache, storageCache);
                                if (userInfo.ROLE_CODE == 3 || userInfo.ROLE_CODE == 4) {//医生和普通患者在主界面进行判断加载相应功能模块zm
                                    //KYMH.app.getController('KYMH.controller.Main').setSelectHospital(); //设置切换医院的界面布局
                                    //KYMH.app.getController('KYMH.controller.Main').getMainViewBtnData(); //得到用户角色，设置主界面功能按钮
                                }
                                //KYMH.app.getController('KYMH.controller.Main').getUserMessageData();

                                //自动登录成功后所做的一些操作
                                def.userInfo.user = user;
                                def.tabsControllerScope.loginState = userInfo.NAME || "选择就诊卡";
                            }
                        }else {
                            //根据后台返回信息，提示用户
                            if (message) {
                                KyeeMessageService.message({
                                    title : "提示",
                                    content :  message,
                                    okText : "知道了"
                                });
                            }else {
                                KyeeMessageService.message({
                                    title : "提示",
                                    content :  "网络异常！",
                                    okText : "知道了"
                                });
                            }
                            //this.createViewToViewport('KYMH.view.user.Login');
                        }
                    },
                    onError : function(retVal){
                    }
                });

            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：md5加密的service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.md5util.service")
    .require([
    ])
    .type("service")
    .name("Md5UtilService")
    .params([
    ])
    .action(function(){
        var def = {
            md5: function (string) {
                /*
                 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
                 * Digest Algorithm, as defined in RFC 1321.
                 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
                 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
                 * Distributed under the BSD License
                 * See http://pajhome.org.uk/crypt/md5 for more info.
                 */

                /*
                 * Configurable variables. You may need to tweak these to be compatible with
                 * the server-side, but the defaults work in most cases.
                 */
                var hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */
                var b64pad  = "";  /* base-64 pad character. "=" for strict RFC compliance   */

                /*
                 * These are the functions you'll usually want to call
                 * They take string arguments and return either hex or base-64 encoded strings
                 */
                function hex_md5(s)    { return rstr2hex(rstr_md5(str2rstr_utf8(s))); }
                function b64_md5(s)    { return rstr2b64(rstr_md5(str2rstr_utf8(s))); }
                function any_md5(s, e) { return rstr2any(rstr_md5(str2rstr_utf8(s)), e); }
                function hex_hmac_md5(k, d)
                { return rstr2hex(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }
                function b64_hmac_md5(k, d)
                { return rstr2b64(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }
                function any_hmac_md5(k, d, e)
                { return rstr2any(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)), e); }

                /*
                 * Perform a simple self-test to see if the VM is working
                 */
                function md5_vm_test()
                {
                    return hex_md5("abc").toLowerCase() == "900150983cd24fb0d6963f7d28e17f72";
                }

                /*
                 * Calculate the MD5 of a raw string
                 */
                function rstr_md5(s)
                {
                    return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));
                }

                /*
                 * Calculate the HMAC-MD5, of a key and some data (raw strings)
                 */
                function rstr_hmac_md5(key, data)
                {
                    var bkey = rstr2binl(key);
                    if(bkey.length > 16) bkey = binl_md5(bkey, key.length * 8);

                    var ipad = Array(16), opad = Array(16);
                    for(var i = 0; i < 16; i++)
                    {
                        ipad[i] = bkey[i] ^ 0x36363636;
                        opad[i] = bkey[i] ^ 0x5C5C5C5C;
                    }

                    var hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
                    return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));
                }

                /*
                 * Convert a raw string to a hex string
                 */
                function rstr2hex(input)
                {
                    try { hexcase } catch(e) { hexcase=0; }
                    var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
                    var output = "";
                    var x;
                    for(var i = 0; i < input.length; i++)
                    {
                        x = input.charCodeAt(i);
                        output += hex_tab.charAt((x >>> 4) & 0x0F)
                        +  hex_tab.charAt( x        & 0x0F);
                    }
                    return output;
                }

                /*
                 * Convert a raw string to a base-64 string
                 */
                function rstr2b64(input)
                {
                    try { b64pad } catch(e) { b64pad=''; }
                    var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
                    var output = "";
                    var len = input.length;
                    for(var i = 0; i < len; i += 3)
                    {
                        var triplet = (input.charCodeAt(i) << 16)
                            | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)
                            | (i + 2 < len ? input.charCodeAt(i+2)      : 0);
                        for(var j = 0; j < 4; j++)
                        {
                            if(i * 8 + j * 6 > input.length * 8) output += b64pad;
                            else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);
                        }
                    }
                    return output;
                }

                /*
                 * Convert a raw string to an arbitrary string encoding
                 */
                function rstr2any(input, encoding)
                {
                    var divisor = encoding.length;
                    var i, j, q, x, quotient;

                    /* Convert to an array of 16-bit big-endian values, forming the dividend */
                    var dividend = Array(Math.ceil(input.length / 2));
                    for(i = 0; i < dividend.length; i++)
                    {
                        dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);
                    }

                    /*
                     * Repeatedly perform a long division. The binary array forms the dividend,
                     * the length of the encoding is the divisor. Once computed, the quotient
                     * forms the dividend for the next step. All remainders are stored for later
                     * use.
                     */
                    var full_length = Math.ceil(input.length * 8 /
                    (Math.log(encoding.length) / Math.log(2)));
                    var remainders = Array(full_length);
                    for(j = 0; j < full_length; j++)
                    {
                        quotient = Array();
                        x = 0;
                        for(i = 0; i < dividend.length; i++)
                        {
                            x = (x << 16) + dividend[i];
                            q = Math.floor(x / divisor);
                            x -= q * divisor;
                            if(quotient.length > 0 || q > 0)
                                quotient[quotient.length] = q;
                        }
                        remainders[j] = x;
                        dividend = quotient;
                    }

                    /* Convert the remainders to the output string */
                    var output = "";
                    for(i = remainders.length - 1; i >= 0; i--)
                        output += encoding.charAt(remainders[i]);

                    return output;
                }

                /*
                 * Encode a string as utf-8.
                 * For efficiency, this assumes the input is valid utf-16.
                 */
                function str2rstr_utf8(input)
                {
                    var output = "";
                    var i = -1;
                    var x, y;

                    while(++i < input.length)
                    {
                        /* Decode utf-16 surrogate pairs */
                        x = input.charCodeAt(i);
                        y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;
                        if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)
                        {
                            x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
                            i++;
                        }

                        /* Encode output as utf-8 */
                        if(x <= 0x7F)
                            output += String.fromCharCode(x);
                        else if(x <= 0x7FF)
                            output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),
                                0x80 | ( x         & 0x3F));
                        else if(x <= 0xFFFF)
                            output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),
                                0x80 | ((x >>> 6 ) & 0x3F),
                                0x80 | ( x         & 0x3F));
                        else if(x <= 0x1FFFFF)
                            output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),
                                0x80 | ((x >>> 12) & 0x3F),
                                0x80 | ((x >>> 6 ) & 0x3F),
                                0x80 | ( x         & 0x3F));
                    }
                    return output;
                }

                /*
                 * Encode a string as utf-16
                 */
                function str2rstr_utf16le(input)
                {
                    var output = "";
                    for(var i = 0; i < input.length; i++)
                        output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,
                            (input.charCodeAt(i) >>> 8) & 0xFF);
                    return output;
                }

                function str2rstr_utf16be(input)
                {
                    var output = "";
                    for(var i = 0; i < input.length; i++)
                        output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,
                            input.charCodeAt(i)        & 0xFF);
                    return output;
                }

                /*
                 * Convert a raw string to an array of little-endian words
                 * Characters >255 have their high-byte silently ignored.
                 */
                function rstr2binl(input)
                {
                    var output = Array(input.length >> 2);
                    for(var i = 0; i < output.length; i++)
                        output[i] = 0;
                    for(var i = 0; i < input.length * 8; i += 8)
                        output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (i%32);
                    return output;
                }

                /*
                 * Convert an array of little-endian words to a string
                 */
                function binl2rstr(input)
                {
                    var output = "";
                    for(var i = 0; i < input.length * 32; i += 8)
                        output += String.fromCharCode((input[i>>5] >>> (i % 32)) & 0xFF);
                    return output;
                }

                /*
                 * Calculate the MD5 of an array of little-endian words, and a bit length.
                 */
                function binl_md5(x, len)
                {
                    /* append padding */
                    x[len >> 5] |= 0x80 << ((len) % 32);
                    x[(((len + 64) >>> 9) << 4) + 14] = len;

                    var a =  1732584193;
                    var b = -271733879;
                    var c = -1732584194;
                    var d =  271733878;

                    for(var i = 0; i < x.length; i += 16)
                    {
                        var olda = a;
                        var oldb = b;
                        var oldc = c;
                        var oldd = d;

                        a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
                        d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
                        c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
                        b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
                        a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
                        d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
                        c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
                        b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
                        a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
                        d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
                        c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
                        b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
                        a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
                        d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
                        c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
                        b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

                        a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
                        d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
                        c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
                        b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
                        a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
                        d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
                        c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
                        b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
                        a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
                        d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
                        c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
                        b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
                        a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
                        d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
                        c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
                        b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

                        a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
                        d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
                        c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
                        b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
                        a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
                        d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
                        c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
                        b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
                        a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
                        d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
                        c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
                        b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
                        a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
                        d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
                        c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
                        b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

                        a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
                        d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
                        c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
                        b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
                        a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
                        d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
                        c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
                        b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
                        a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
                        d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
                        c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
                        b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
                        a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
                        d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
                        c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
                        b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

                        a = safe_add(a, olda);
                        b = safe_add(b, oldb);
                        c = safe_add(c, oldc);
                        d = safe_add(d, oldd);
                    }
                    return Array(a, b, c, d);
                }

                /*
                 * These functions implement the four basic operations the algorithm uses.
                 */
                function md5_cmn(q, a, b, x, s, t)
                {
                    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
                }
                function md5_ff(a, b, c, d, x, s, t)
                {
                    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
                }
                function md5_gg(a, b, c, d, x, s, t)
                {
                    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
                }
                function md5_hh(a, b, c, d, x, s, t)
                {
                    return md5_cmn(b ^ c ^ d, a, b, x, s, t);
                }
                function md5_ii(a, b, c, d, x, s, t)
                {
                    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
                }

                /*
                 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
                 * to work around bugs in some JS interpreters.
                 */
                function safe_add(x, y)
                {
                    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
                    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
                    return (msw << 16) | (lsw & 0xFFFF);
                }

                /*
                 * Bitwise rotate a 32-bit number to the left.
                 */
                function bit_rol(num, cnt)
                {
                    return (num << cnt) | (num >>> (32 - cnt));
                }

                return hex_md5(string).toLowerCase();
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：找回密码（输入新密码）的service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.newpassword.service")
    .require([
        "kyee.framework.service.message",
        "kyee.quyiyuan.login.regist.service",
        "kyee.quyiyuan.login.service",
        "kyee.quyiyuan.login.rsautil.service"
    ])
    .type("service")
    .name("NewPasswordService")
    .params([
        "$state",
        "KyeeMessageService",
        "RegistService",
        "LoginService",
        "RsaUtilService",
        "HttpServiceBus"
    ])
    .action(function($state, KyeeMessageService, RegistService, LoginService, RsaUtilService, HttpServiceBus){

        var def = {
            //验证新密码是否合法
            validatePassword : RegistService.validatePassword,
            //重新设置密码
            resetPassword : function(phoneNum, newPassword, afterChangePwd){
                HttpServiceBus.connect({
                    url : '/user/action/LoginAction.jspx',
                    params : {
                        op : 'changepwdByphone',
                        PHONE_NUMBER : phoneNum,
                        PASSWORD : RsaUtilService.getRsaResult(newPassword)
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        if(success){
                            KyeeMessageService.message({
                                title : "系统提示",
                                content : "密码修改成功！",
                                okText : "知道了"
                            });
                            afterChangePwd();
                            //重新设置登录页面的用户信息
                            LoginService.setUserInfo({
                                user : phoneNum,
                                pwd : ""
                            });
                        }else{
                            KyeeMessageService.message({
                                title : "系统提示",
                                content : "用户密码重置失败！",
                                okText : "知道了"
                            });
                        }
                    },
                    onError : function(retVal){
                    }
                });

                //将用户信息存入LoginService中，以便可以从同一的接口中取出
                LoginService.userInfo.user = phoneNum;
                LoginService.userInfo.password = newPassword;
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：注册的service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.regist.service")
    .require([
        "kyee.framework.service.message",
        "kyee.framework.service.view",
        "kyee.quyiyuan.login.service",
        "kyee.quyiyuan.login.md5util.service",
        "kyee.quyiyuan.login.rsautil.service"
    ])
    .type("service")
    .name("RegistService")
    .params([
        "$state",
        "KyeeMessageService",
        "KyeeViewService",
        "LoginService",
        "HttpServiceBus",
        "CacheServiceBus",
        "Md5UtilService",
        "RsaUtilService"
    ])
    .action(function($state, KyeeMessageService, KyeeViewService, LoginService, HttpServiceBus, CacheServiceBus, Md5UtilService, RsaUtilService){

        var def = {
            //提示
            remind : function(title, content, okText){
                KyeeMessageService.message({
                    title : title,
                    content : content,
                    okText : okText
                });
            },
            //点击提交时，先校验手机号（是否为空、格式是否错误、长度是否错误、是否被绑定)
            validatePhoneNum : function(phoneNum){
                var phoneNum = phoneNum.trim();
                //为空则提示并返回
                if(!phoneNum){
                    def.remind("提示信息", "手机号不能为空！", "知道了");
                    return false;
                } else if (!this.isMobil(phoneNum)) {
                    def.remind("提示信息", "手机号格式或长度错误！", "知道了");
                    return false;
                }
                return true;
            },
            validateLoginNum : function(loginNum){
                if(!loginNum){
                    def.remind("提示信息", "验证码不能为空！", "知道了");
                    return false;
                }else if(Md5UtilService.md5(loginNum) != this.checkNum){
                    def.remind("提示信息", "验证码输入错误！", "知道了");
                    return false;
                }
                return true;
            },
            //手机号格式校验
            isMobil: function (s) {
                var patrn = /^(\+86)?1[3|5|4|7|8]\d{9}$/;
                if (!patrn.test(s)) {
                    return false;
                }
                return true;
            },
            getValiteCode : function($scope){
                var phoneNum = $scope.userInfo.phoneNum;
                if(!this.validatePhoneNum(phoneNum)){
                    return;
                }
                var phoneNum = phoneNum.trim();
                var cache = CacheServiceBus.getMemoryCache();
                if(phoneNum.length==14){
                    phoneNum=phoneNum.substring(3);
                }
                HttpServiceBus.connect({
                    url : '/user/action/LoginAction.jspx',
                    params : {
                        op: 'PhoneNumExist',
                        PHONE_NUMBER: phoneNum,
                        userSource: cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_SOURCE)
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        var status = retVal.data;
                        if(success){
                            //手机号不存在
                            if (status==0){
                                //发送短信获取验证码
                                def.getMsgData(phoneNum, cache, $scope);
                            }
                        }else{
                            try{
                                if (status==1)
                                {
                                    KyeeMessageService.confirm({
                                        title : "提示",
                                        content : "该手机号已注册，是否继续注册并清除原帐号中的手机号码？",
                                        onSelect : function(flag){
                                            if(flag){
                                                //发送短信获取验证码
                                                def.getMsgData(phoneNum, cache, $scope);
                                            }else{
                                                KyeeMessageService.confirm({
                                                    title : "提示",
                                                    content : "是否去找回密码？",
                                                    onSelect : function(flag){
                                                        if(flag){
                                                            //跳转到找回密码页面
                                                            $scope.openModal("", "modules/business/login/views/find_password.html");
                                                            //存储phoneNum，以便带入到找回密码页面
                                                            LoginService.userInfo.user = phoneNum;
                                                            //记录从注册页面跳转到找回密码页面
                                                            LoginService.toFindPwdFrontPage = "2";
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }else if(status==2){
                                    def.remind("提示信息", "请先阅读服务协议！", "知道了");
                                }else{
                                    def.remind("提示信息", "网络异常！", "知道了");
                                }
                            }catch(e){
                                def.remind("提示信息", "网络异常！", "知道了");
                            }
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            //发送短信获取验证码
            getMsgData : function(phoneNum, cache, $scope){
                HttpServiceBus.connect({
                    url : '/user/action/DataValidationActionC.jspx',
                    params : {
                        op:'sendRegCheckCodeActionC',
                        hospitalId: cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_HOSPITAL_ID),
                        PHONE_NUMBER: phoneNum,
                        modId:'10001',
                        messageType:'3'
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        if(success){
                            def.checkNum = retVal.data.SECURITY_CODE;
                            $scope.userInfo.phoneNumDisabled = true;
                            $scope.userInfo.validateBtnDisabled = true;
                            def.onRefreshDataviewDelay();
                        } else {
                            def.checkNum = undefined;
                            def.remind("提示信息", "手机号获取验证码失败！", "知道了");
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            onRefreshDataviewDelay : function(){
                def.second = 120;
                var validateMsgBtn = document.getElementById("regist.validateMsgBtn");
                var phoneNumInput = document.getElementById("regist.phoneNumInput");
                def.task=window.setInterval(def.setBtnState, 1000, phoneNumInput, validateMsgBtn);
            },
            setBtnState: function (phoneNumInput, validateMsgBtn) {
                try {
                    if (def.second != -1) {
                        //直接操作$scope中的模型效率低下并且页面无法更新,因此直接操作dom
                        validateMsgBtn.innerText = '剩余' + def.second + '秒';
                        def.second--;
                    } else {
                        //直接操作$scope中的模型使页面无法更新,因此直接操作dom
                        validateMsgBtn.removeAttribute("disabled");
                        phoneNumInput.removeAttribute("disabled");
                        validateMsgBtn.innerText = '获取验证码';
                        clearInterval(def.task);
                        def.checkNum = "";
                    }
                } catch (e) {
                    clearInterval(def.task);
                }
            },
            registAndLogin : function($scope, afterRegistAndLogin){
                //新版原型中没有阅读协议的字样,暂时不处理以下内容
                //if(isRead!="1"){
                //    Ext.Msg.alert('温馨提示', '请您先阅读协议！');
                //    return;
                //}
                var phoneNum = $scope.userInfo.phoneNum.trim();
                var loginNum = $scope.userInfo.loginNum;
                var password = $scope.userInfo.password;
                var passwordAgain = $scope.userInfo.passwordAgain;
                //效验手机号
                if(!this.validatePhoneNum(phoneNum)){
                    return false;
                }
                if(password != passwordAgain){
                    def.remind("提示信息", "您两次输入的密码不一致！", "知道了");
                    return false;
                }
                //验证密码
                if(!this.validatePassword(password)){
                    return false;
                }
                //效验验证码
                if(!this.validateLoginNum(loginNum)){
                    return false;
                }
                if(phoneNum.length==14){
                    phoneNum=phoneNum.substring(3);
                }
                //提交注册信息
                this.submitRegistInfo(phoneNum, password, afterRegistAndLogin);
            },
            submitRegistInfo : function(phoneNum, password, afterRegistAndLogin){
                var cache = CacheServiceBus.getMemoryCache();
                var storageCache = CacheServiceBus.getStorageCache();
                var userRegistInfo = {
                    USER_CODE : phoneNum,
                    PASSWORD : RsaUtilService.getRsaResult(password),
                    PHONE_NUMBER : phoneNum,
                    USER_SOURCE : cache.get(CACHE_CONSTANTS.STORAGE_CACHE.CURRENT_USER_SOURCE),
                    PUBLIC_SERVICE_TYPE: "", //global.currentUserPublicServerType,//微信公众平台用户ID
                    OPEN_ID: ""  //global.currentUserOpenId //开放平台类型
                };
                HttpServiceBus.connect({
                    url : '/user/action/LoginAction.jspx',
                    params : {
                        op : 'register',
                        postdata : userRegistInfo
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        var message = retVal.message;
                        if(success){
                            storageCache.set(CACHE_CONSTANTS.STORAGE_CACHE.USER, phoneNum);
                            storageCache.set(CACHE_CONSTANTS.STORAGE_CACHE.PWD, password);
                            //调用登录接口
                            var userInfo = {
                                user : phoneNum,
                                pwd : password
                            };
                            LoginService.doLogin(userInfo, afterRegistAndLogin);
                        }else{
                            def.remind("提示信息", message, "知道了");
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            validatePassword :function(password){
                if(!password){
                    def.remind("提示信息", "密码必须输入！", "知道了");
                    return false;
                }
                var passwordLen = password.length;
                if(passwordLen < 6 || passwordLen >16){
                    def.remind("提示信息", "密码必须大于5位，小于17位！", "知道了");
                    return false;
                }
                var patrn = /^[!@#$*_A-Za-z0-9]+$/;
                if (!patrn.test(password)) {
                    def.remind("提示信息", "密码必须字母、数字或者特殊字符(!@#$*_ )！", "知道了");
                    return false;
                }
                return true;
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/4/30
 * 创建原因：Rsa加密的service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.login.rsautil.service")
    .require([
    ])
    .type("service")
    .name("RsaUtilService")
    .params([
    ])
    .action(function(){
        var def = {
            key : {},
            //加密
            getRsaResult : function (pwd)
            {
                var maxDigits = 130;
                setMaxDigits(maxDigits);
                //第一个参数为加密指数、第二个参数为解密参数、第三个参数为加密系数
                var e = "10001";
                var n = "93b2b4a59fe63cdc1a65c6e006d2a710de3d8bcfe93cb601f1af2c49946b80dfa1e607195b0ee8969e24544153fc12b84acdfbba53949f0a0d6c6f665dce4c37";
                var key = new RSAKeyPair(e, '', n);
                var result=encryptedString(key, pwd);
                return result;
            },
            //解密
            getRsaDecodeResult : function(pwd){
                var maxDigits = 130;
                setMaxDigits(maxDigits);
                //第一个参数为加密指数、第二个参数为解密参数、第三个参数为加密系数
                var e = "10001";
                var n = "93b2b4a59fe63cdc1a65c6e006d2a710de3d8bcfe93cb601f1af2c49946b80dfa1e607195b0ee8969e24544153fc12b84acdfbba53949f0a0d6c6f665dce4c37";
                var key = new RSAKeyPair(e, '', n);
                var result = decryptedString(key, pwd);
                return result;
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：消息中心主页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.messagecenter.messageCenter.controller")
    .require([
        "kyee.quyiyuan.messagecenter.messageCenter.service"
        ,"kyee.quyiyuan.messagecenter.queryCardResult.controller"
        ,"kyee.quyiyuan.messagecenter.queryCardResult.service"
    ])
    .type("controller")
    .name("MessageCenterController")
    .params(["$scope", "$state", "KyeeMessageService",
        "MessageCenterService", "QueryCardResultService", "CacheServiceBus",
        "AppointRegistDetailService", "$ionicListDelegate"])
    .action(function($scope, $state, KyeeMessageService,
                     MessageCenterService, QueryCardResultService, CacheServiceBus,
                     AppointRegistDetailService, $ionicListDelegate){

        // 初始化按钮选中样式
        $scope.activityClass = 0;

        // 初始化搜索框内容
        $scope.searchText = "";

        $scope.readFlag = 0;

        /**
         * 判空显示函数
         * @param data
         * @param text
         */
        $scope.changeEmptyText = function (data, text) {
            if(!data || data.length == 0){
                $scope.showEmpty = true;
                $scope.emptyText = text;
            } else {
                $scope.showEmpty = false;
            }
        };

        /**
         * 消息查询函数
         */
        $scope.doRefresh = function (showLoadingFlag) {
            var userInfo = CacheServiceBus.getMemoryCache().get(
                CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);

            if(!userInfo){
                $scope.changeEmptyText([], "请先登录");
                $scope.$broadcast('scroll.refreshComplete');
                return;
            }

            MessageCenterService.queryMessages(showLoadingFlag, $scope.readFlag, function(data){
                $scope.messages = data;
                // 保存原始数据
                $scope.OriginalMessages = data;
                // 判空显示
                if($scope.readFlag == 0){
                    $scope.changeEmptyText($scope.messages, "暂无未读消息");
                } else if($scope.readFlag == 1){
                    $scope.changeEmptyText($scope.messages, "暂无已读消息");
                }

                // 处理消息头已读未读的样式
                for(var index = 0;index <$scope.messages.length; index++){
                    if($scope.messages[index].READ_FLAG == 0){
                        $scope.messages[index].TITLE_STYLE = "color: #333;font-weight: 600;";
                    }
                    if($scope.messages[index].MESSAGE_DESCRIPTION.length > 36){
                        $scope.messages[index].MESSAGE_DESCRIPTION =
                            $scope.messages[index].MESSAGE_DESCRIPTION.substr(0,35) + "...";
                    }
                }
            });
            $scope.$broadcast('scroll.refreshComplete');
        };

        // 调用查询
        $scope.doRefresh(true);

        /**
         * 修改消息已读未读状态函数
         * @param index
         */
        $scope.changeStatus = function (index) {
            if($scope.messages[index].READ_FLAG == 1){
                $scope.messages[index].TITLE_STYLE = "color: #333;font-weight: 600;";
                $scope.messages[index].READ_FLAG = 0;
            } else {
                $scope.messages[index].TITLE_STYLE = "";
                $scope.messages[index].READ_FLAG = 1;
            }
            MessageCenterService.updateStatus($scope.messages[index].MESSAGE_ID
                ,$scope.messages[index].READ_FLAG);

            $ionicListDelegate.closeOptionButtons();
        };

        /**
         * 删除消息函数
         * @param index
         */
        $scope.delete = function (index) {
            KyeeMessageService.confirm({
                title: "温馨提示",
                content: "是否确认删除？",
                onSelect: function (res) {
                    if(res){
                        $scope.messages.splice(index, 1);
                        MessageCenterService.deleteMessage($scope.messages[index].MESSAGE_ID);
                    }
                }
            });
        };

        /**
         * 单击消息事件
         * @param index
         */
        $scope.messageClick = function (index) {
            var data = $scope.messages[index];
            var obj = JSON.parse(data.MESSAGE_PARAMETER);
            // 将数据置为已读
            if(data.READ_FLAG == 0){
                MessageCenterService.updateStatus(data.MESSAGE_ID, 1);
                $scope.messages[index].READ_FLAG = 1;
                $scope.messages[index].TITLE_STYLE = "";
            }

            // 判断是否需要跳转
            if(data.URL_FLAG != '1'){
                return;
            }

            // 装换跳转数据
            var urlData;
            if(obj.URL_DATA){
                urlData = JSON.parse(obj.URL_DATA);
            } else {
                urlData = {};
            }

            // 执行跳转页面
            if(obj.URL == "KYMH.view.center.RebateCenter"){
                $state.go("rebate");
            } else if(obj.URL == "KYMH.view.messageCenter.QueryCardResultsView"){
                QueryCardResultService.data = urlData;
                $state.go("query_card_result");
            } else if(obj.URL == "KYMH.view.myQuYi.MedicalGuideDetail"){
                AppointRegistDetailService.doSetAppointDetailParams(urlData);
                $state.go("appoint_regist_detail");
            }

        };

        /**
         * 筛选已读未读事件
         * @param status
         */
        $scope.selectStatus = function (status) {
            $scope.activityClass = status;
            $scope.readFlag = status;
            $scope.searchText = "";
            $scope.doRefresh(true);
        };

        /**
         * 搜索框输入响应事件
         */
        $scope.searchContent = function () {
            $scope.messages = [];
            var searchKey = $scope.searchText.trim();
            if(searchKey.length != 0 && $scope.OriginalMessages){
                for(var index = 0; index < $scope.OriginalMessages.length; index++){
                    var item = $scope.OriginalMessages[index];
                    var messageTitle = item["MESSAGE_TITLE"];
                    var messageDescription = item["MESSAGE_DESCRIPTION"];
                    if(messageTitle.indexOf(searchKey) != -1 || messageDescription.indexOf(searchKey) != -1){
                        $scope.messages.push(item);
                    }
                }
                $scope.changeEmptyText($scope.messages, "没有找到相关内容");
            } else {
                $scope.messages = $scope.OriginalMessages;
                if($scope.readFlag == 0){
                    $scope.changeEmptyText($scope.messages, "暂无未读消息");
                } else if($scope.readFlag == 1){
                    $scope.changeEmptyText($scope.messages, "暂无已读消息");
                }
            }
        };

    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：查卡结果页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.messagecenter.queryCardResult.controller")
    .require(["kyee.quyiyuan.messagecenter.queryCardResult.service"])
    .type("controller")
    .name("QueryCardResultController")
    .params(["$scope", "$state", "QueryCardResultService", "CacheServiceBus"])
    .action(function($scope, $state, QueryCardResultService, CacheServiceBus){

        // 获取初始化数据
        $scope.data = QueryCardResultService.data;
        $scope.data.CARDS = JSON.parse($scope.data.CARDS);

        // 判空显示
        if($scope.data.CARDS.length > 0){
            $scope.showEmpty = false;
        } else {
            $scope.showEmpty = true;
        }

        /**
         * 选择就诊卡点击函数
         * @param cardIndex
         */
        $scope.messageClick = function (cardIndex) {
            var hospitalId = $scope.data.HOSPITAL_ID ;
            var userVsId = $scope.data.USER_VS_ID;
            var cardNo = $scope.data.CARDS[cardIndex].CARD_NO;
            QueryCardResultService.saveDefaultCard(userVsId, cardNo, hospitalId, function (data) {
                if(data.success){
                    $scope.refreshData(userVsId, hospitalId);
                }
            });
            $state.go("messagecenter->MAIN_TAB");
        };

        //刷新当前就诊者信息
        $scope.refreshData = function(userVsId, hospitalId) {

            if (userVsId != CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID ||
                hospitalId != CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id) {
                return;
            }

            QueryCardResultService.refreshData(hospitalId, function (result) {
                if (result.length <= 0) {
                    return;
                }

                var data = result[0];
                //成功并且有数据，解析该就诊者的卡信息
                var detialList = JSON.parse(data.DETIAL_LIST);
                data.PATIENT_CARD = [];
                if (detialList != null) {
                    for(var index = 0; index < detialList.length; index++){
                        detialList[index].USER_VS_ID = data.USER_VS_ID;
                        //排除重复的卡号，并且清理空的身份证
                        var isExist = true;
                        for(var indexCard = 0; indexCard < data.PATIENT_CARD.length; indexCard++){
                            if (data.PATIENT_CARD[indexCard].PATIENT_ID == detialList[index].PATIENT_ID) {
                                if (data.PATIENT_CARD[indexCard].ID_NO == null
                                    || data.PATIENT_CARD[indexCard].ID_NO == undefined) {
                                    data.PATIENT_CARD[indexCard] = detialList[index];
                                }
                                else {
                                    isExist = false;
                                }
                            }
                        }
                        if (isExist) {
                            data.PATIENT_CARD.push(detialList[index]);
                        }
                    }
                }


                CacheServiceBus.getMemoryCache().set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO,
                    data.PATIENT_CARD[0]);
                data.CARD_NO = CacheServiceBus.getMemoryCache().get(
                    CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO).CARD_NO;
                CacheServiceBus.getMemoryCache().set(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT,
                    data);
            });
        }
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：消息中心主页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.messagecenter.messageCenter.service")
    .require([])
    .type("service")
    .name("MessageCenterService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function(HttpServiceBus, CacheServiceBus){

        var def = {
            /**
             * 查询所有的消息
             */
            queryMessages : function(showLoadingFlag, readFlag, onSuccess){
                HttpServiceBus.connect({
                    url : "/messageCenter/action/MessageCenterActionC.jspx",
                    showLoading: showLoadingFlag,
                    params : {
                        op: "queryMessagesList",
                        READ_FLAG: readFlag,
                        USER_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                        USER_VS_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID
                    },
                    cache: {
                        by: "TIME",
                        value: 60
                    },
                    onSuccess : function (resp) {
                        if(!resp.data.rows){
                            return;
                        }
                        onSuccess(resp.data.rows);
                    }
                });
            },
            /**
             * 删除消息
             */
            deleteMessage : function(messageId){
                HttpServiceBus.connect({
                    url : "/messageCenter/action/MessageCenterActionC.jspx",
                    showLoading: false,
                    params : {
                        op: "deleteMessageById",
                        MESSAGE_ID: messageId
                    }
                });
            },
            /**
             * 更新消息已读未读状态
             */
            updateStatus : function(messageId, readFlag){
                HttpServiceBus.connect({
                    url : "/messageCenter/action/MessageCenterActionC.jspx",
                    showLoading: false,
                    params : {
                        op: "updateMessageReadStatus",
                        MESSAGE_ID: messageId,
                        READ_FLAG: readFlag
                    }
                });
            }
        };

        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：查卡结果页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.messagecenter.queryCardResult.service")
    .require([])
    .type("service")
    .name("QueryCardResultService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function(HttpServiceBus, CacheServiceBus){

        var def = {
            /**
             * 保存默认选中就诊卡
             */
            saveDefaultCard : function(userVsId, cardNo, hospitalId, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        op: "updateCardByUserVsId",
                        userVsId: userVsId,
                        cardNo: cardNo,
                        hospitalId: hospitalId
                    },
                    onSuccess : function (resp) {
                        onSuccess(resp);
                    }
                });
            },
            /**
             * 刷新当前就诊者信息
             */
            refreshData : function(hospitalId, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        op: "selectedCustomPatient",
                        userId: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                        hospitalId: hospitalId
                    },
                    onSuccess : function (resp) {
                        if(!resp.data){
                            return;
                        }
                        onSuccess(resp.data);
                    }
                });
            }
        };

        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/30.
 * 创建原因：
 * 修改者：
 * 修改原因：
 *
 */

new KyeeModule()
    .group("kyee.quyiyuan.myquyi.appoint.regist.detail.controller")
    .require([ "kyee.framework.service.view","kyee.quyiyuan.myquyi.appoint.regist.detail.service"])
    .type("controller")
    .name("AppointRegistDetailController")
    .params(["$scope","AppointRegistDetailService"])
    .action(function($scope,AppointRegistDetailService){
        //预约挂号详情
        $scope.resultData={
            'appointNotHidden':true,//以hidden结尾的都是开关
            'registNotHidden':false,
            'amountNotHidden':true,
            'appointDetailNotHidden':true,
            'treatmentCostsNotHidden':true,
            'payIsNotHidden':false,
            'reportNotHidden':true,
            'examNotHidden':true
        };
        AppointRegistDetailService.getAppointDetail(function(resultData){

            $scope.resultData=resultData;
        });
        //展开显示缴费详情
        $scope.showIndex = -1;
        $scope.onPayDetail=function(index){
            $scope.showIndex = index;
        };
        //创建是否显示报告单详情
        $scope.displayRecord=[];
        //点击报告单详情
        $scope.onReportDetail= function(index){
            $scope.tableId = index;
            //获得当前显示标记
            var currentDisplay = $scope.displayRecord[index];
            //将当前显示标记置相反值
            $scope.displayRecord[index]=(currentDisplay==undefined?true:!currentDisplay);
            //将其余的显示标记置否
            for(var i=0;i<$scope.displayRecord.length;i++){
                if(i != index){
                    $scope.displayRecord[i] = false;
                }
            }
        };
        //医患互动，要进行判断
        AppointRegistDetailService.getDoctorPatient(function(resultData){

        });
        //取消挂号
        $scope.onRegistCancelTap=function(){
        AppointRegistDetailService.onRegistCancelTap(function(resultData){

        });
        };
        //预约转挂号
        $scope.onAppointToRegisterTap=function(){
            AppointRegistDetailService.onAppointToRegisterTap(function(resultData){
            });
        };
        //取消预约
        $scope.onAppointCancelTap = function(){
            AppointRegistDetailService.onAppointCancelTap(function(resultData){
            });
        };
        //跳转到院外导航
        $scope.onMgDetailHospitalOutTap = function() {
            AppointRegistDetailService.onMgDetailHospitalOutTap(function (resultData) {

            });
        };
        //跳转到医院导航
        $scope.onMgDetailDeptTap = function() {
            AppointRegistDetailService.onMgDetailDeptTap(function (resultData) {

            });
        };
        //预约状态弹窗
        $scope.onAppointStatus = function() {
            AppointRegistDetailService.onAppointStatus(function (resultData) {

            });
        };

    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/5/9.
 * 创建原因：预约挂号记录
 * 修改者：
 * 修改原因：
 *
 */
/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/30.
 * 创建原因：
 * 修改者：
 * 修改原因：
 *
 */

new KyeeModule()
    .group("kyee.quyiyuan.myquyi.appoint.regist.list.controller")
    .require([ "kyee.framework.service.view","kyee.quyiyuan.myquyi.appoint.regist.List.service"])
    .type("controller")
    .name("AppointRegistListController")
    .params(["$scope","AppointRegistListService"])
    .action(function($scope,AppointRegistListService){
        //预约挂号记录
       /* $scope.appointListData={

            'appointListNotHidden':false
            //'payNotHidden':false
        };*/
        AppointRegistListService.getAppointList(function(appointListData){


            $scope.resultData=appointListData.resultData;
            $scope.appointListNotHidden=appointListData.appointListNotHidden
            console.log(appointListData.resultData);
            console.log(appointListData.appointListNotHidden);
        });

    })
    .build();


new KyeeModule()
    .group("kyee.quyiyuan.myquyi.medical_guide.controller")
    .require([
        "kyee.quyiyuan.myquyi.medical_guide.service",
        "kyee.quyiyuan.myquyi.my_care_doctors.controller",
        "kyee.quyiyuan.myquyi.appoint.regist.detail.controller",
        "kyee.quyiyuan.myquyi.appoint.regist.detail.service",
        "kyee.quyiyuan.inpatientBusiness.controller"])
    .type("controller")
    .name("MedicalGuideController")
    .params(["$scope","MedicalGuideService","AppointRegistDetailService","$state"])
    .action(function($scope,MedicalGuideService,AppointRegistDetailService,$state){

        MedicalGuideService.loadStore(function(result){
            $scope.result = result;
        });
        $scope.result= {
            'appointList':[],
            'registList':[],
            'quenceList':[],
            'feeList':[],
            'reportList':[],
            'satisfactionList':[]
        };
        $scope.doRefresh = function(){
            MedicalGuideService.loadStore(function(result){
                $scope.result = result;
            });
            $scope.$broadcast('scroll.refreshComplete');
        };
        $scope.onShowAppointDetail = function(appointNodeInfo){
            AppointRegistDetailService.doSetAppointDetailParams(appointNodeInfo);
            $state.go("appoint_regist_detail");
        };

        $scope.onAppointTap = function(){
            MedicalGuideService.onAppointTap();
        };
        $scope.onAppointMoreTap = function(){
            MedicalGuideService.onAppointMoreTap();
        };
        $scope.onRegistTap = function(){
            MedicalGuideService.onRegistTap();
        };
        $scope.onReportMoreTap = function(){
            MedicalGuideService.onReportMoreTap();
        };
        $scope.onReportListTap = function(record){
            MedicalGuideService.onReportListTap(record);
        };
        $scope.onSatisficationMoreTap = function(){
            MedicalGuideService.onSatisficationMoreTap();
        };
        $scope.onSatisficationListTap = function(record){
            MedicalGuideService.onSatisficationListTap(record);
        };
        $scope.onPaymentMoreTap = function(){
            MedicalGuideService.onPaymentMoreTap();
        };
        $scope.onPaymentListTap = function(record){
            MedicalGuideService.onPaymentListTap(record);
        };
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：我的关注页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.myquyi.my_care_doctors.controller")
    .require([
        "kyee.quyiyuan.myquyi.my_care_doctors.service"
        ,"kyee.quyiyuan.interaction.doctorPersonalPage.controller"
    ])
    .type("controller")
    .name("MyCareDoctorsController")
    .params(["$scope", "$state","MyCareDoctorsService", "KyeeMessageService",
        "DoctorPersonalPageService", "AppointDeptSelectService", "RegistDeptSelectService",
        "HospitalSelectorService", "CacheServiceBus"])
    .action(function($scope, $state, MyCareDoctorsService, KyeeMessageService,
                     DoctorPersonalPageService, AppointDeptSelectService, RegistDeptSelectService,
                     HospitalSelectorService, CacheServiceBus){

        // 初始化点击项目
        $scope.clickItem = 1;

        /**
         * 初始化查询页面数据
         */
        MyCareDoctorsService.queryMyCareList(function(data){
            $scope.careList = data;
            if(!$scope.careList || $scope.careList.length == 0){
                $scope.showEmpty = true;
            }
        });

        /**
         * 跳转预约函数
         * @param data
         */
        $scope.gotoAppoint = function (data) {
            $scope.clickItem = 0;
            if(data.APPOINT_POWER == 0){
                return;
            }
            var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            if(data.HOSPITAL_ID != hospitalId){
                KyeeMessageService.confirm({
                    title: "温馨提示",
                    content: "此操作会切换到"+data.HOSPITAL_NAME+"，是否切换？",
                    onSelect: function (res) {
                        if(res){
                            MyCareDoctorsService.queryHospitalInfo(data.HOSPITAL_ID, function(result){
                                // 切换医院
                                HospitalSelectorService.selectHospital(data.HOSPITAL_ID, result.HOSPITAL_NAME,
                                    result.MAILING_ADDRESS, result.PROVINCE_CODE, result.PROVINCE_NAME,
                                    result.CITY_CODE, result.CITY_NAME, "医院正在切换至", function () {
                                        // 跳转预约
                                        var deptData = {};
                                        deptData.DEPT_CODE = data.DEPT_CODE;
                                        deptData.DEPT_NAME = data.DEPT_NAME;
                                        deptData.DOCTOR_CODE = data.DOCTOR_CODE;
                                        AppointDeptSelectService.deptData = deptData;
                                        $state.go("appoint_schedule");
                                    });
                            });
                        }
                    }
                });
            } else {
                // 跳转预约
                var deptData = {};
                deptData.DEPT_CODE = data.DEPT_CODE;
                deptData.DEPT_NAME = data.DEPT_NAME;
                deptData.DOCTOR_CODE = data.DOCTOR_CODE;
                AppointDeptSelectService.deptData = deptData;
                $state.go("appoint_schedule");
            }
        };

        /**
         * 跳转挂号函数
         * @param data
         */
        $scope.gotoRegist = function (data) {
            $scope.clickItem = 0;
            if(data.REGIST_POWER == 0){
                return;
            }
            var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            if(data.HOSPITAL_ID != hospitalId){
                KyeeMessageService.confirm({
                    title: "温馨提示",
                    content: "此操作会切换到"+data.HOSPITAL_NAME+"，是否切换？",
                    onSelect: function (res) {
                        if(res){
                            MyCareDoctorsService.queryHospitalInfo(data.HOSPITAL_ID, function(result){
                                // 切换医院
                                HospitalSelectorService.selectHospital(data.HOSPITAL_ID, result.HOSPITAL_NAME,
                                    result.MAILING_ADDRESS, result.PROVINCE_CODE, result.PROVINCE_NAME,
                                    result.CITY_CODE, result.CITY_NAME, "医院正在切换中...", function () {
                                        var deptData = {};
                                        deptData.DEPT_CODE = data.DEPT_CODE;
                                        deptData.DEPT_NAME = data.DEPT_NAME;
                                        deptData.DOCTOR_CODE = data.DOCTOR_CODE;
                                        RegistDeptSelectService.deptData = deptData;
                                        $state.go("regist_doctorSchedule");
                                    });
                            });
                        }
                    }
                });
            } else {
                var deptData = {};
                deptData.DEPT_CODE = data.DEPT_CODE;
                deptData.DEPT_NAME = data.DEPT_NAME;
                deptData.DOCTOR_CODE = data.DOCTOR_CODE;
                RegistDeptSelectService.deptData = deptData;
                $state.go("regist_doctorSchedule");
            }
        };

        /**
         * 跳转医患互动医生主页函数
         * @param data
         */
        $scope.gotoInteraction = function (data) {
            if($scope.clickItem == 0){
                $scope.clickItem = 1;
                return;
            }

            // 跳转到医生主页
            if(data.HOSPITAL_ID == CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id){
                var paramData = {};
                paramData.HOSPITAL_ID = data.HOSPITAL_ID;
                paramData.DOCTOR_CODE = data.DOCTOR_CODE;
                paramData.DEPT_CODE = data.DEPT_CODE;
                paramData.PAGE_TYPE = 3;
                DoctorPersonalPageService.paramData = paramData;
                $state.go("doctorPersonalPage");
            }

            // 如果是当前医院则可以跳转
            //var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            //if(data.HOSPITAL_ID == hospitalId){
            //    MyCareDoctorsService.queryInteractionInfo(data.HOSPITAL_ID, data.DOCTOR_CODE,
            //        function(result){
            //            if(result.TEMP_VALUE != '0'
            //                && result.APPOINT_NUM > 0){
            //                var data = {};
            //                data.hospitalId = data.HOSPITAL_ID;
            //                data.doctorCode = data.DOCTOR_CODE;
            //                DoctorPersonalPageService.data = data;
            //                $state.go("doctorPersonalPage");
            //            }
            //    });
            //}
        };
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.myquyi.controller")
    .require([
        "kyee.quyiyuan.myquyi.service",
        "kyee.quyiyuan.myquyi.my_care_doctors.controller",
        "kyee.quyiyuan.myquyi.appoint.regist.detail.controller",
        "kyee.quyiyuan.inpatientBusiness.controller",
        "kyee.quyiyuan.myquyi.medical_guide.controller"
    ])
    .type("controller")
    .name("MyquyiController")
    .params(["$scope","MyquyiService"])
    .action(function($scope,MyquyiService){

        var backTabIndex = MyquyiService.getBackTabIndex();
        if(backTabIndex != -1){
            MyquyiService.doShowMyquyiView(backTabIndex);
            MyquyiService.setBackTabIndex(-1);
        }
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 程铄闵
 * 创建日期:2015年5月4日16:13:30
 * 创建原因：住院业务首页控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientBusiness.controller")
    .require(["kyee.quyiyuan.inpatientBusiness.service","kyee.quyiyuan.inpatientPay.controller","kyee.quyiyuan.inpatientFee.controller"])
    .type("controller")
    .name("inpatientBusinessController")
    .params(["$scope","$state","inpatientBusinessService",'PrePayedService','PrePayedInfoService','KyeeMessageService','HttpServiceBus','CacheServiceBus','KyeeUtilsService','KyeeMessageService'])
    .action(function ($scope,$state,inpatientBusinessService,PrePayedService,PrePayedInfoService,KyeeMessageService,HttpServiceBus,CacheServiceBus,KyeeUtilsService,KyeeMessageService) {
        //页面数据
        inpatientBusinessService.loadData(function (data) {
            //var orgTriageData = InpatientPaymentService.dealData(data.rows);

        }, HttpServiceBus, $scope,CacheServiceBus,KyeeMessageService);

        //住院费用单击展开详情
        $scope.clickItem = function (index) {
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }
            else{
                $scope.isDisplay = index;
            }
            $scope.feeDetail = $scope.feeInfo[index].FEEITEMINFO;
        };
        //点击切换住院号按钮,跳转到住院预交第一个页面
        $scope.goPrePayedPage = function(){
            //debugger;
            var info = $scope.payInfo[0];
            var params = {
                frontPage:'1', //跳转标记
                INPATIENT_NO:info.INPATIENT_NO, //住院号
                PATIENT_NAME:info.ADMISS_DATE //患者姓名
            };
            PrePayedService.payInfo = params;
            $state.go('inpatientBusiness_to_prePayed');
        };
        //点击缴费按钮，跳转到住院预交第二个页面
        $scope.goPrePayedInfoPage = function(){
            //debugger;
            var info = $scope.payInfo[0];
            var params={
                frontPage:'1', //跳转标记
                INPATIENT_NO:info.INPATIENT_NO, //住院号
                PATIENT_NAME:info.ADMISS_DATE, //患者姓名
                SEX:info.SEX,
                AGE:info.AGE,
                BED_NO:info.BED_NO,
                WARD_NAME:info.WARD_NAME,
                ADMISS_DATE:info.ADMISS_DATE,
                BALANCE:info.BALANCE,
                CHARGE_AMOUNT:info.CHARGE_AMOUNT,
                DEPO_AMOUNT:info.DEPO_AMOUNT
            };
            PrePayedInfoService.payInfo = params;
            $state.go('inpatientBusiness_to_prePayedInfo');
        };
        //日期格式转换
        $scope.format = function(v,param){
            if(param == 'MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
            else if(param == 'YYYY/MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
        };
    })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 程铄闵
 * 创建日期:2015年5月7日10:18:09
 * 创建原因：住院费用详情控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientFee.controller")
    .require(["kyee.quyiyuan.inpatientFee.service"])
    .type("controller")
    .name("inpatientFeeController")
    .params(["$scope","$state","inpatientFeeService", 'KyeeMessageService', 'HttpServiceBus','KyeeUtilsService'])
    .action(function ($scope, $state, inpatientFeeService, KyeeMessageService, HttpServiceBus,KyeeUtilsService) {
        //页面数据
        inpatientFeeService.loadData(function (data) {

        }, HttpServiceBus, $scope);

        //返回住院业务首页
        $scope.back = function(){
            $state.go('myquyi->MAIN_TAB.inpatientBusiness');
        };

        //单击展开详情
        $scope.clickItem = function(index){
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }
            else{
                $scope.isDisplay = index;
            }
            $scope.feeDetail = $scope.feeInfo[index].FEEITEMINFO;
        };
        //日期格式转换
        $scope.format = function(v,param){
            if(param == 'MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
            else if(param == 'YYYY/MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
        };
    })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 程铄闵
 * 创建日期:2015年5月6日10:56:22
 * 创建原因：住院缴费详情控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientPay.controller")
    .require(["kyee.quyiyuan.inpatientPay.service"])
    .type("controller")
    .name("inpatientPayController")
    .params(["$scope","$state","inpatientPayService",'PrePayedService','KyeeMessageService', 'HttpServiceBus','KyeeUtilsService'])
    .action(function ($scope, $state, inpatientPayService,PrePayedService, KyeeMessageService, HttpServiceBus,KyeeUtilsService) {
        //页面数据
        inpatientPayService.loadData(function (data) {

        }, HttpServiceBus, $scope);

        //返回住院业务首页
        $scope.back = function(){
            $state.go('myquyi->MAIN_TAB.inpatientBusiness');
        };

        //单击展开详情
        $scope.clickItem = function(index){
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }
            else{
                $scope.isDisplay = index;
            }
            $scope.payDetail = $scope.payInfo[index].DETAIL;
        };
        //点击切换住院号按钮,跳转到住院预交第一个页面
        $scope.goPrePayedPage = function(){
            //debugger;
            var info = $scope.payInfo[0];
            var params = {
                frontPage:'1', //跳转标记
                INPATIENT_NO:info.INPATIENT_NO, //住院号
                PATIENT_NAME:info.ADMISS_DATE //患者姓名
            };
            PrePayedService.payInfo = params;
            $state.go('inpatientBusiness_to_prePayed');
        };
        //日期格式转换
        $scope.format = function(v,param){
            if(param == 'MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
            else if(param == 'YYYY/MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
        };
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/30.
 * 创建原因：
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.myquyi.appoint.regist.detail.service")
    .require(["kyee.framework.service.message",
        "kyee.quyiyuan.service_bus.cache",
        "kyee.quyiyuan.service_bus.http"])
    .type("service")
    .name("AppointRegistDetailService")
    .params(["HttpServiceBus","KyeeMessageService","$state","CacheServiceBus"])
    .action(function(HttpServiceBus,KyeeMessageService,$state,CacheServiceBus){

        var def = {
            /*预约挂号详情*/
            pagedata:null,//门诊业务页面传递的参数
            appointDetailInfo:undefined,
            result:undefined,
            //获取门诊业务页面传递来的参数
            doSetAppointDetailParams:function(pagedata){
                this.pagedata = pagedata;
            },
            //请求预约挂号详情
            getAppointDetail:function(onSuccess){
                HttpServiceBus.connect(
                    {
                        url : "/multibusiness/action/VisitTreeAcionC.jspx",
                        params : {
                            op:"getVisitTreeDetailAppointActionC",
                            loc:"c",
                           USER_ID:this.pagedata.USER_ID,//global
                            //USER_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                            PATIENT_ID: this.pagedata.PATIENT_ID,
                            HOSPITAL_ID: this.pagedata.HOSPITAL_ID,
                            REG_ID: this.pagedata.REG_ID,
                            isLogin: true,
                            type: this.pagedata.TYPE,
                            START_DAY: this.pagedata.REG_DATE,
                            END_DAY: this.getNextDay(this.pagedata.REG_DATE),
                            USER_VS_ID:"133443"//global
                        },
                        onSuccess:function(data){//回调函数
                            var isNotSuccess=data.success;

                            if(isNotSuccess){

                                var appointDetailData=data.data;//后台数据结构是data.appointDetailInfo

                                var resultData=def.dealAppointData(appointDetailData);
                                onSuccess(resultData);
                            }else{
                                KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                            }
                        },
                        onError:function(){
                            KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                        }
                    }
                );

            },
            /*医患互动*/
            getDoctorPatient:function(onSuccess){
                HttpServiceBus.connect(
                    {
                        url : "/patientwords/action/PatientWordsActionC.jspx",
                        params : {
                            _dc:"1430363328066",
                            hospitalId:"1001",
                            loc:"c",
                            op:"queryParameter",
                            isLogin:"true",
                            hospitalID:"1001",
                            opVersion:"1.2.10",
                            operateCurrent_UserId:"95883",
                            USER_VS_ID:"133443",
                            operateUserSource:"0"

                        },
                        onSuccess:function(data){//回调函数
                            if(data.success){
                                //console.log(data);
                                var deptTables=data.rows;//后台数据结构是data.rows
                                // console.log(deptTables);
                                var resultData=def.dealDoctorPatientData(deptTables);
                                onSuccess(resultData);
                            }else{
                                KyeeMessageService.broadcast({
                                    content:"网络异常",
                                    duration:3000
                                });
                            }
                        },
                        onError:function(){
                            KyeeMessageService.broadcast({
                                content:"网络异常",
                                duration:3000
                            });
                        }
                    }
                );

            },
            //处理预约详情数据
            dealAppointData:function(appointDetailData){
                //对后台返回的data进行null和undefined和空判断
                if(appointDetailData !=null &&appointDetailData!="" && appointDetailData !=undefined){
                    var appointDetailInfo=appointDetailData.appointDetailInfo[0];
                    var controlParams=appointDetailData.controlParams;
                    var treatmentCostsDetailInfo =appointDetailData.treatmentCostsDetailInfo;//已缴费
                    var willPaidDetailInfo = appointDetailData.willPaidDetailInfo;//待缴费
                    var doctorReportDetailInfo = appointDetailData.doctorReportDetailInfo;
                    var doctorExamDetailInfo =appointDetailData.doctorExamDetailInfo;
                    //start 预约缴费费用为0时，隐藏预约费用 APPOINT_AMOUNT：参数 0 隐藏 1 不隐藏
                    var amountNotHidden=true;
                    if(controlParams !="" && controlParams !=undefined){
                        if(controlParams.APPOINT_AMOUNT=='0'){
                             amountNotHidden=false;
                        }
                    }
                    //end 预约缴费费用为0时，隐藏预约费用 APPOINT_AMOUNT：参数 0 隐藏 1 不隐
                    //对appointDetailInfo进行null和undefined和空判断
                    if(appointDetailInfo !=null &&appointDetailInfo!="" && appointDetailInfo !=undefined){
                       var appointDetailNotHidden=true;

                        // start 处理CLINIC_DURATION
                        if (appointDetailInfo.CLINIC_DURATION == undefined || appointDetailInfo.CLINIC_DURATION == null) {
                            appointDetailInfo.CLINIC_DURATION = '';
                        } else {
                            var clinicDuration = appointDetailInfo.CLINIC_DURATION;
                            if(clinicDuration!=undefined && clinicDuration.lastIndexOf('/')!=-1){
                                appointDetailInfo.CLINIC_DURATION = clinicDuration.substring(clinicDuration.lastIndexOf('/')+1);
                            }
                        }
                        //end 处理CLINIC_DURATION
                        //就诊状态处理 1-已确认（已取号）2-已就诊 3-已退号
                        var visit_status = appointDetailInfo.VISIT_STATUS;
                        if (visit_status == undefined || visit_status == '0' || visit_status == '') {
                            appointDetailInfo.SHOW_VISIT_STATUS = '未就诊';
                        } else if (visit_status == '1') {
                            appointDetailInfo.SHOW_VISIT_STATUS = '已取号';
                        } else if (visit_status == '2') {
                            appointDetailInfo.SHOW_VISIT_STATUS = '已就诊';
                        } else if (visit_status == '3') {
                            appointDetailInfo.SHOW_VISIT_STATUS = '已退号';
                        }
                        //就诊时间
                        appointDetailInfo.REG_DATE_TIME =appointDetailInfo.CLINIC_DURATION;
                        //就诊日期
                        var regDate=appointDetailInfo.REG_DATE;
                        appointDetailInfo.REG_DATE = regDate.replace(/\-/g, '/');
                        //医院名称
                        appointDetailInfo.HOSPITAL_NAME = this.pagedata.HOSPITAL_NAME;
                        appointDetailInfo.HOSPITAL_POSITION = this.pagedata.HOSPITAL_NAME;
                        //身份证号加星   PHONE_NUMBER
                        var idNo=this.getStarIdNo(appointDetailInfo.ID_NO);
                        appointDetailInfo.ID_NO=idNo;
                        //手机号加星
                        var phoneNumber=this.getStarPhoneNum(appointDetailInfo.PHONE_NUMBER);
                        appointDetailInfo.PHONE_NUMBER=phoneNumber;
                        //预约成功显示取消预约和预约转挂号
                        var type = parseInt(appointDetailInfo.TYPE);
                        var appointType = parseInt(appointDetailInfo.APPOINT_TYPE);
                        var registType = parseInt(appointDetailInfo.REGIST_TYPE);
                        //?????????????????????????????????????????????????????????????????
                        if(type == 0 && appointType==1){
                            var appointNotHidden=true;
                            var payIsNotHidden=false;
                        }else if (appointType == 7) {
                             payIsNotHidden=true;
                             appointNotHidden=false;
                            var appointPaytimer=appointDetailData.curHosAppointRecTimer.AppointPaytimer;//配置订单有效时间
                            var serverTime=appointDetailData.curHosAppointRecTimer.ServerTime;          //服务器当前时间
                            var isAppointSuccessPay=appointDetailData.curHosAppointRecTimer.APPOINT_SUCCESS_PAY;//预约成功后支付开关
                            var remainSenconds=this.getLastMinutes(appointPaytimer,appointDetailInfo.REG_CREATE_TIME,serverTime);
                            if(remainSenconds>0){
                                this.updateValue(remainSenconds,false);
                            }
                        }
                        //只有挂号成功才显示取消挂号
                        if (type==1 && registType == 1 && appointDetailData.controlParams != undefined &&appointDetailData.controlParams.CANCLE_REGIST_CONTROL == '1') {
                            var registNotHidden=true;
                        } else{
                                registNotHidden =false;
                        }
                    }else{
                        appointDetailNotHidden=false;

                    }
                    //是否显示缴费详情
                    if (treatmentCostsDetailInfo != undefined && treatmentCostsDetailInfo.length > 0) {
                        var treatmentCostsNotHidden=true;
                    }else{
                         treatmentCostsNotHidden=false;
                    }
                    //start 缴费详情
                    if (treatmentCostsDetailInfo != undefined && treatmentCostsDetailInfo.length > 0) {
                        var me = this;
                        //循环只是为了日期和药品进行处理
                       for(var i=0;i<treatmentCostsDetailInfo.length;i++){
                           for(var j=0;j<treatmentCostsDetailInfo[i].PAYDETAIL.length;j++)
                           {
                               treatmentCostsDetailInfo[i].SHOW_DATE = treatmentCostsDetailInfo[i].PAYDETAIL[j].VISIT_DATE;//.substr(0, 10);
                           }


                           if (Number(treatmentCostsDetailInfo[i].PAY_FLAG) == 0) {//待缴费
                               for( j=0;j<treatmentCostsDetailInfo[i].PAYDETAIL.length;j++)
                               {
                                   treatmentCostsDetailInfo[i].ITEM_CLASS = me.getItemClass(treatmentCostsDetailInfo[i].PAYDETAIL[j].ITEM_CLASS);
                               }

                           } else {
                               for( j=0;j<treatmentCostsDetailInfo[i].PAYDETAIL.length;j++)
                               {
                                   treatmentCostsDetailInfo[i].ITEM_CLASS = treatmentCostsDetailInfo[i].PAYDETAIL[j].ITEM_CLASS;
                               }

                           }
                           treatmentCostsDetailInfo[i].SHOW_PAY_STATUS = me.getJfStatus(treatmentCostsDetailInfo[i].PAY_FLAG, treatmentCostsDetailInfo[i].ACCOUNT_FLAG)[0];
                           treatmentCostsDetailInfo[i].SHOW_PAY_STATUS_COLOR = me.getJfStatus(treatmentCostsDetailInfo[i].PAY_FLAG, treatmentCostsDetailInfo[i].ACCOUNT_FLAG)[1];
                       }
                    }
                    //end 缴费详情
                    //start 报告单处理
                    var reportNotHidden=false;//报告单开关
                    if (doctorReportDetailInfo != undefined && doctorReportDetailInfo.length > 0 ||
                        doctorExamDetailInfo != undefined && doctorExamDetailInfo.length > 0) {
                         reportNotHidden=true;
                    }
                    if (doctorReportDetailInfo != undefined && doctorReportDetailInfo.length > 0) {
                        for(var k=0;k<doctorReportDetailInfo.length;k++){
                            var detialList =eval(doctorReportDetailInfo[k].LABDETAIL);
                            doctorReportDetailInfo[k].LAB_DETAIL = [];
                            if (detialList != null && detialList != undefined) {
                                doctorReportDetailInfo[k].noResult=true;
                                for(var m=0;m<detialList.length;m++){
                                    doctorReportDetailInfo[k].LAB_DETAIL[m].push(detialList[m]);
                                }
                            }else{
                                doctorReportDetailInfo[k].noResult=false;
                            }
                        }
                    }
                    //检查单
                    if (doctorExamDetailInfo != undefined && doctorExamDetailInfo.length > 0) {
                        var examNotHidden=true;
                    }else{
                        examNotHidden=false;
                    }
                    //end 报告单结束
                }
               this.appointDetailInfo=appointDetailInfo;
                var result={'appointDetailInfo':appointDetailInfo,//预约详情
                    'controlParams':appointDetailData.controlParams,//预约详情控制参数
                    'treatmentCostsDetailInfo':treatmentCostsDetailInfo,//缴费详情
                    'curHosAppointRecTimer':appointDetailData.curHosAppointRecTimer,//当前医院预约定时
                    'doctorReportDetailInfo':doctorReportDetailInfo,//报告单详情
                    'doctorExamDetailInfo':doctorExamDetailInfo,//检查详情
                    'appointTypeDesc':appointDetailData.appointTypeDesc,//预约状态
                    'appointNotHidden':appointNotHidden,//以hidden结尾的都是开关
                    'registNotHidden':registNotHidden,
                    'amountNotHidden':amountNotHidden,
                    'appointDetailNotHidden':appointDetailNotHidden,
                    'treatmentCostsNotHidden':treatmentCostsNotHidden,
                    'payIsNotHidden':payIsNotHidden,
                    'reportNotHidden':reportNotHidden,
                    'examNotHidden':examNotHidden
                   };
                this.result=result;
                return result;
            },
            /*处理医患互动数据*/
            dealDoctorPatientData:function(deptTables){
                if(deptTables !=null && deptTables !=undefined){//对data进行空判断
                    var  letters=[];//获取字母数组
                    var resultMap={};//获取字母对应的科室
                    var result={};//返回处理后的数据
                    for(var i=0; i<deptTables.length ;i++){
                        if(resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] == undefined){
                            var list = [];
                            list.push(deptTables[i]);
                            resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] = list;
                            letters.push(deptTables[i].FULL_UPPER_SPELL.substr(0,1));
                        }else{
                            resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)].push(deptTables[i]);
                        }
                    }
                    result["letters"]=letters;
                    result["resultMap"]=resultMap;
                    return result;
                }

            },
            //获取第二天时间
            getNextDay: function (d) {
                d = new Date(d);
                d = +d + 1000 * 60 * 60 * 24;
                d = new Date(d);
                return d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate();
            },
            //将身份证号变成星号形式
            getStarIdNo: function (idNo) {
                if (idNo == null || idNo == undefined || idNo == '') {
                    return;
                }
                else {
                    var idNo = idNo.toString();
                    var len = idNo.length;
                    idNo = idNo.substr(0, 2) + '****' + idNo.substr(len - 6, 6);
                    return idNo;
                }
            },
            //将手机号变成星号形式
            getStarPhoneNum: function (phoneNum) {
                if (phoneNum == null || phoneNum == undefined || phoneNum == '') {
                    return;
                }
                else {
                    var phoNum = phoneNum.toString();
                    phoNum = phoNum.substr(0, 3) + '****' + phoNum.substr(7);
                    return phoNum;
                }
            },
            //跳转到院外导航
            onMgDetailHospitalOutTap: function () {
                this.createViewToViewportConfig('KYMH.view.navigation.outNavigation', this.pagedata);
            },
            //跳转到医院导航
            onMgDetailDeptTap: function () {
                this.createViewToViewportConfig('KYMH.view.navigation.FloorNavigation', this.pagedata);
            },
            //待缴费ITEM_CLASS转换
            getItemClass: function (ITEM_CLASS) {
                var itemClass = ITEM_CLASS;
                if ('A' == ITEM_CLASS) {
                    itemClass = '药品';
                } else if ('C' == ITEM_CLASS) {
                    itemClass = '检查';
                } else if ('D' == ITEM_CLASS) {
                    itemClass = '化验';
                }
                return itemClass;
            },
            //已缴费状态判断
            getJfStatus: function (PAY_FLAG, ACCOUNT_FLAG) {
                var v = '', s = '';
                if (Number(PAY_FLAG) == 1) {
                    switch (Number(ACCOUNT_FLAG)) {
                        case 0:
                            v = '正在处理';
                            s = '#EC2B10';
                            break;
                        case 1:
                            v = '缴费成功';
                            s = '#999999';
                            break;
                        case 2:
                            v = '缴费失败';
                            s = '#EC2B10';
                            break;
                        case 3:
                            v = '已退费';
                            s = '#999999';
                            break;
                    }
                }
                return [v, s];
            },
            //缴费按钮？？？？？？？？？？？？？？？？？？？
            payBtnTap: function () {
                var mSelectedItemData = this.mSelectedItemData;
                var details = [];
                details.push(
                    {
                        SERIAL_NO: mSelectedItemData.PAYDETAIL[0].SERIAL_NO,
                        VISIT_DATE: mSelectedItemData.PAYDETAIL[0].VISIT_DATE
                    }
                );
                var payStore = Ext.getStore('paymentOrder') || Ext.create('KYMH.store.payment.PaymentGetOrder');
                payStore._proxy._actionMethods.read = 'POST';
                payStore.load({
                    params: {
                        MARK_DESC: global.currentUserRecord.NAME + '-缴费单',
                        AMOUNT: mSelectedItemData.ACCOUNT_SUM,
                        USER_NAME: global.currentUserRecord.NAME,
                        details: Ext.JSON.encode(details, true),
                        PATIENT_ID: global.currentCardInfo.PATIENT_ID,
                        HOSPITAL_ID: this.pagedata.HOSPITAL_ID,
                        USER_ID: global.currentUserRecord.USER_ID
                    },
                    callback: function (records, operation, success) {
                        if (success) {
                            //订单编号
                            var tradeNo = records[0].raw.OUT_TRADE_NO;
                            var desc = records[0].raw.DESC;
                            //医保支付金额  By  章剑飞   KYEEAPPC-1229
                            var pPayAmount = '';
                            var msAccountPayAmout = '';
                            var msPayAmout = '';
                            localStorage.TRADE_NO = tradeNo;
                            var data = {'MARK_DESC': global.currentUserRecord.NAME + '-缴费单',
                                'MARK_DETAIL': desc,
                                'AMOUNT': mSelectedItemData.ACCOUNT_SUM,
                                'AMOUNT-TEXT': "¥" + mSelectedItemData.ACCOUNT_SUM,
                                'PRESC_ATTR': '',
                                'ITEM_CLASS': mSelectedItemData.ITEM_CLASS,
                                // begin  增加医保支付需要参数
                                'SERIAL_NO': mSelectedItemData.PAYDETAIL[0].SERIAL_NO,
                                'VISIT_DATE': mSelectedItemData.PAYDETAIL[0].VISIT_DATE,
                                'TRADE_NO': tradeNo,
                                'PATIENT_PAY_AMOUNT': "¥" + pPayAmount,
                                'MEDICAL_SECURITY_ACCOUNT_PAY_AMOUNT': "¥" + msAccountPayAmout,
                                'MEDICAL_SECURITY_PAY_AMOUNT': "¥" + msPayAmout,
                                'MASTERTABLE': mSelectedItemData,
                                'DETAILS': '',
                                'IS_PAID': records[0].raw.IS_PAID
                                // end  增加医保支付需要参数   By  章剑飞   KYEEAPPC-1229
                            };
                            global.formVisitTreeDetail = true;
                            this.createViewToViewportConfig('KYMH.view.payment.PayFeeOrderView', data);
                        } else {
                            if (operation.getResponse() != null) {
                                var result = operation.getResponse().responseText;
                                var resultModel = Ext.JSON.decode(result);
                                if (resultModel.message != '' || resultModel.message != null || resultModel.message != undefined) {
                                    var array = resultModel.message.split('|');
                                }
                                if ((array[0] == 0 || array[0] == '0') && array[1] != undefined) {
                                    Ext.Msg.alert('系统提示', array[1]);
                                    return;
                                }
                            } else {
                                Ext.Msg.alert('提示', "网络不给力，请稍后重试！");
                            }

                        }
                    },
                    scope: this
                });
            },
            //获取剩余时间的秒数
            getLastMinutes:function(appointPayTimer,regCreateTime,serverTime){
                var now = new Date(serverTime.replace(/-/g,'/'));
                var nowMillisecond=now.getTime();
//        var nowMillisecond = serverTime;
                regCreateTime = regCreateTime.replace(/-/g,'/');
                if(regCreateTime.indexOf('.')!=-1){
                    regCreateTime=regCreateTime.substr(0,regCreateTime.indexOf('.'));
                }
                var regCreateMillisecond = new Date(regCreateTime).getTime();
                var appointPayMillisecond = appointPayTimer * 60 * 1000;
                //距预约时间已经过了的毫秒数
                var diff = nowMillisecond - regCreateMillisecond;
                //计算剩余秒数
                var remainMillisecond = appointPayMillisecond - diff;
                var remainMinutes=remainMillisecond/1000;
                return remainMinutes;
            },
            updateValue: function (time,old) {
                //console.log(time);
                if (old) {
                    clearInterval(me.task);
                }
                if (time) {
                    var now = new Date();
                    console.log(now);
                    //  var tem  = Ext.Date.parse(now, this.getFormat());
//                var tem2 = now.getSeconds()+parseInt(time);
                    var tem2=now.getTime()+parseInt(time)*1000;
                    console.log(tem2);
//                now.setSeconds(tem2);
                    now.setTime(tem2);
                    console.log(now);
                    if (now) {
                        var me = this;
                        me.task = setInterval(function () {
                                me.setTime(me, now);
                            },
                            1000);
                        me.setTime(me, now);
                    }
                }
            },
            setTime: function (me,time) {
                var now = new Date(), //服务器时间
                    ms = time - now,
                //计算出开始时间和现在时间的时间戳差
                    minute = Math.floor(ms / (1000 * 60)) % 60,
                //分钟
                    second = Math.floor(ms / 1000) % 60,
                //秒
                    label;
                //console.log('正在执行');
                if (ms > 0 && global.currentClassName=='KYMH.view.myQuYi.MedicalGuideDetail') {
                    var myTimeTip = Ext.Viewport.down('#myTimeTip')
                    myTimeTip.setHidden(false);
                    Ext.Viewport.down('#mTimeSpacerId').setHidden(true);
                    if(second<10){
                        second='0'+second;
                    }
                    var hj=myTimeTip.innerElement.dom.querySelector('#timeTip');
                    hj.textContent=minute+':'+second;
//                console.log('B定时器在运行中。。。。'+ms);
                } else if(global.currentClassName=='KYMH.view.myQuYi.MedicalGuideDetail'){//ms <= 0 &&
                    this.getAppointDetail();
                }else{
                    clearInterval(me.task);
                }
            },
            //取消挂号
            onRegistCancelTap: function (resultData) {
                var meAppointCancel = this;
                KyeeMessageService.confirm({
                    title:"取消提示",
                    content:"是否取消该挂号？",
                    onSelect:function (buttonTap) {
                        if (buttonTap === true) {
                            HttpServiceBus.connect({
                                url : "/register/action/RegisterActionC.jspx",
                                params: {
                                    op:"abandonRegisterActionC",
                                    loc:"c",
                                    hospitalID: meAppointCancel.appointDetailInfo.HOSPITAL_ID,
                                    REG_ID:meAppointCancel.appointDetailInfo.REG_ID,
                                    C_REG_ID: meAppointCancel.appointDetailInfo.C_REG_ID,
                                   // APPOINT_SOURCE: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).currentUserSource,
                                    APPOINT_SOURCE:"0",//global
                                   // USER_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID
                                   USER_ID:"796631"
                                },
                                onSuccess:function(data){
                                    var msg = data.message;
                                    if (data.success) {
                                        //resultData.registNotHidden=false;
                                        $state.go("myquyi->MAIN_TAB");
                                            KyeeMessageService.message({
                                                title:"系统提示",
                                                content:"取消挂号正在处理"});

                                    } else {
                                        KyeeMessageService.message({
                                            title:"系统提示",
                                            content:msg});
                                    }
                                },
                                onError:function(){
                                    KyeeMessageService.broadcast({
                                        content:"网络异常",
                                        duration:3000
                                    });
                                }
                            });
                        }
                    }
                });
            },
            //预约转挂号按钮
            onAppointToRegisterTap: function (resultData) {
                var meAppointCancel = this;
                KyeeMessageService.confirm({
                    title:"系统提示",
                    content:"是否预约转挂号？",
                    onSelect:function (buttonTap) {
                        if (buttonTap === true) {
                            HttpServiceBus.connect({
                                url : "/appoint/action/AppointActionC.jspx",
                                params: {
                                    op:"changeAppoint2RegesiterActionC",
                                    loc:"c",
                                    hospitalID: meAppointCancel.appointDetailInfo.HOSPITAL_ID,
                                    HID: meAppointCancel.appointDetailInfo.HID + '/' + meAppointCancel.appointDetailInfo.CLINIC_DURATION,
                                    MARK_DESC: meAppointCancel.appointDetailInfo.MARK_DESC,
                                    AMOUNT: meAppointCancel.appointDetailInfo.AMOUNT,
                                    C_REG_ID: meAppointCancel.appointDetailInfo.C_REG_ID,
                                  // USER_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                                    USER_ID:"796631",
                                    postdata:{"REG_CREATE_TIME":"2015-05-09 16:16:47","C_REG_ID":"92041","PHONE_NUMBER":"","APPOINT_SOURCE":0,"DOCTOR_SUGGEST_SCORE":0,"HOSPITAL_SCORE":0,"REG_ID":35278,"HOSPITAL_ID":1001,"REG_DATE":"2015/05/11","PATIENT_ID":"T1431148477","PATIENT_NAME":"\u4f53\u9a8c\u5c31\u8bca\u8005","DEPT_NAME":"\u9aa8\u8d28\u758f\u677e\u75c7\u95e8\u8bca","LOC_INFO":"","AMOUNT":0.01,"TYPE":0,"STATUS":0,"CLINIC_DURATION":"\u4e0b\u5348","MARK_DESC":"\u5f20\u4e3b\u4efb\u4e3b\u4efb\u53f7","APPT_MADE_DATE":"2015-05-09 16:16:47","USER_ID":"796631","CLINIC_TYPE":"\u4e3b\u4efb","DOCTOR_NAME":"\u5f20\u4e3b\u4efb","DOCTOR_CODE":"4443","DEPT_CODE":"\u9aa8\u8d28\u758f\u677e\u75c7\u95e8\u8bca","ID_NO":"230909199101177396","APPOINT_TYPE":1,"REGIST_TYPE":0,"TRADE_ORDER_NO":"QY10011431159407667","HANDLE_MESSAGE":"\u9884\u7ea6\u6210\u529f","VISIT_STATUS":"1","AppointPaytimer":"15","SHOW_AMOUNT":"\u00a5 0.01\u5143","HOSPITAL_NAME":"\u8da3\u533b\u4f53\u9a8c\u533b\u9662","HOSPITAL_POSITION":"\u8da3\u533b\u4f53\u9a8c\u533b\u9662","SHOW_VISIT_STATUS":"\u5df2\u53d6\u53f7","REG_DATE_TIME":"2015/05/11 \u4e0b\u5348","APPOINT_TYPE_DESC":"\u9884\u7ea6\u6210\u529f"}

                                },
                                onSuccess:function(data){
                                   // var appointNotHidden=true;
                                    var msg = data.message;
                                    if (data.success) {
                                        var amount = this.appointDetailInfo.AMOUNT;
                                        amount = amount.toString();
                                        if (amount.indexOf('.') != -1) {
                                            this.appointDetailInfo.AMOUNT_TEXT = "￥" + Math.round(amount * 100) / 100;
                                            this.appointDetailInfo.AMOUNT = Math.round(amount * 100) / 100;
                                        } else {
                                            this.appointDetailInfo.AMOUNT_TEXT = "￥" + this.appointDetailInfo.AMOUNT +".0";
                                            this.appointDetailInfo.AMOUNT = this.appointDetailInfo.AMOUNT + ".0";
                                        }
                                        //订单编号
                                        var tradeNo = data[0].raw.OUT_TRADE_NO;
                                        localStorage.TRADE_NO = tradeNo;
                                        //add
                                        CacheServiceBus.getStorageCache().set("IS_OPEN_BALANCE",data[0].raw.IS_OPEN_BALANCE);
                                        CacheServiceBus.getStorageCache().set("USER_PAY_AMOUNT",data[0].raw.USER_PAY_AMOUNT);
                                        CacheServiceBus.getMemoryCache().set("registFeeData",this.appointDetailInfo);
                                        //global.registFeeData = this.appointDetailInfo;
                                        this.appointDetailInfo.flag = '2';//代表预约转挂号
                                       this.appointDetailInfo.HOSPITAL_ID=CacheServiceBus.getMemoryCache().get("currentHospitalID");
                                        CacheServiceBus.getStorageCache().set("isShow",data[0].raw.isShow);
                                        //跳到支付页面
                                        //this.createViewToViewportConfig('KYMH.view.regist.PayOrder', this.appointDetailInfo);

                                    } else{
                                        KyeeMessageService.message({
                                            title:"系统提示",
                                            content:msg});
                                    }
                                },
                                onError:function(){
                                    KyeeMessageService.broadcast({
                                        content:"网络异常",
                                        duration:3000
                                    });
                                }
                            });
                        }
                    }
                });

            },
            //取消预约按钮
            onAppointCancelTap: function () {
                var meAppointCancel = this;
                KyeeMessageService.confirm({
                        title:"取消提示",
                        content:"是否取消该预约？",
                        onSelect:function (buttonTap) {
                            if (buttonTap === true) {
                                HttpServiceBus.connect({
                                    url : "/appoint/action/AppointActionC.jspx",
                                    params: {
                                        op:"abandonAppointActionC",
                                        loc:"c",
                                        hospitalID: meAppointCancel.appointDetailInfo.HOSPITAL_ID,
                                        REG_ID:meAppointCancel.appointDetailInfo.REG_ID,
                                        //APPOINT_SOURCE: global.currentUserSource,
                                       // APPOINT_SOURCE: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).APPOINT_SOURCE
                                        APPOINT_SOURCE:"0",
                                        C_REG_ID: meAppointCancel.appointDetailInfo.C_REG_ID,
                                        opVersion:"1.2.0"
                                    },
                                    onSuccess:function(data){
                                        //resultData.appointNotHidden=true;
                                         var msg = data.message;
                                        if (data.success) {
                                            if(msg=="success"){
                                                //resultData.appointNotHidden=false;
                                                $state.go("myquyi->MAIN_TAB");
                                                return;

                                            }else{
                                                KyeeMessageService.message({
                                                    title:"系统提示",
                                                    content:msg});
                                            }
                                        } else {
                                            KyeeMessageService.message({
                                                title:"系统提示",
                                                content:msg});
                                        }
                                    },
                                    onError:function(){
                                        KyeeMessageService.broadcast({
                                            content:"网络异常",
                                            duration:3000
                                        });
                                    }
                                });
                            }
                        }
                    });
            },
            //继续支付
            onGoToPayIdTap: function () {
                this.clearUserAmount();//add 清缓存
                //var meGoPay = this;
                KyeeMessageService.confirm({
                    title:"系统提示",
                    content:"是否继续支付？",
                    onSelect:function (buttonTap) {
                        if (buttonTap === true) {
                            HttpServiceBus.connect({
                                url : "/appoint/action/AppointActionC.jspx",
                                params: {
                                    hospitalID: this.appointDetailInfo.HOSPITAL_ID,
                                    MARK_DESC: this.appointDetailInfo.MARK_DESC,
                                    AMOUNT: this.appointDetailInfo.AMOUNT,
                                   // postdata: Ext.JSON.encode(this.appointDetailInfo),
                                    USER_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                                    PATIENT_ID: this.appointDetailInfo.PATIENT_ID,
                                    C_REG_ID: this.appointDetailInfo.C_REG_ID
                                },
                                onSuccess: function (data) {
                                    if (data.success) {
                                        var amount = this.appointDetailInfo.AMOUNT.toString();
                                        if (amount.indexOf('.') != -1) {
                                            this.appointDetailInfo.AMOUNT_TEXT = "￥" + Math.round(amount * 100) / 100;
                                        } else {
                                            this.appointDetailInfo.AMOUNT_TEXT = "￥" + this.appointDetailInfo.AMOUNT + ".0";
                                        }

                                        //订单编号
                                        var tradeNo = data[0].raw.OUT_TRADE_NO;
                                        CacheServiceBus.getStorageCache().set("TRADE_NO", data[0].raw.OUT_TRADE_NO);
                                        //add     加数据
                                        CacheServiceBus.getStorageCache().set("IS_OPEN_BALANCE", data[0].raw.IS_OPEN_BALANCE);
                                        CacheServiceBus.getStorageCache().set("USER_PAY_AMOUNT",data[0].raw.USER_PAY_AMOUNT);
                                        CacheServiceBus.getStorageCache().set("REMAIN_SECONDS",data[0].raw.REMAIN_SECONDS);
                                        CacheServiceBus.getMemoryCache().set("registFeeData", this.appointDetailInfo);
                                        this.appointDetailInfo.flag = '3';//代表预约
                                        localStorage.isShow = data[0].raw.isShow;
                                        this.appointDetailInfo.APPOINT_SUCCESS_PAY = this.curHosAppointRecTimer.APPOINT_SUCCESS_PAY;
                                        clearInterval(this.task);
                                        //跳到支付页面
                                        //this.createViewToViewportConfig('KYMH.view.regist.PayOrder', this.appointDetailInfo);
                                    } else {
                                        if (data[0] != null && data[0] != '' && data[0] != undefined) {
                                            var error = data[0].node.message;
                                            // 不符合校验规则
                                            KyeeMessageService.message({
                                                title:"系统提示",
                                                content:error});
                                        }
                                        this.getAppointDetail();
                                    }
                                }
                            });
                        }
                    }
                    });
            },
            clearUserAmount: function () {
                CacheServiceBus.getStorageCache().set("IS_OPEN_BALANCE",undefined);
                CacheServiceBus.getStorageCache().set("USER_PAY_AMOUNT",undefined);
            },
            //取消订单
            onCancelPayIdTap: function () {
                        KyeeMessageService.confirm({
                            title:"系统提示",
                            content:"是否取消订单？",
                            onSelect:function (buttonTap) {
                                if (buttonTap === true) {
                                    HttpServiceBus.connect({
                                        url : "/appoint/action/AppointActionC.jspx",
                                        params: {
                                            HOSPITAL_ID: this.appointDetailInfo.HOSPITAL_ID,
                                            C_REG_ID: this.appointDetailInfo.C_REG_ID,
                                            REG_CREATE_TIME: this.appointDetailInfo.REG_CREATE_TIME,
                                            APPOINT_PAY_TIMER: this.curHosAppointRecTimer.AppointPaytimer,
                                            REG_ID: this.appointDetailInfo.REG_ID
                                        },
                                        onSuccess: function (data) {
                                            if (data.success) {
                                               // Ext.Msg.alert('系统提示', records[0].raw.message);
                                                KyeeMessageService.message({
                                                    title:"系统提示",
                                                    content:data[0].raw.message});
                                                //跳到myQuYi.MedicalGuide
                                                //this.createViewToViewport('KYMH.view.myQuYi.MedicalGuide');
                                            } else {
                                                if (data[0] != null && data[0] != '' && data[0] != undefined) {
                                                    var error = data[0].node.message;
                                                    // 不符合校验规则
                                                    KyeeMessageService.message({
                                                        title: "系统提示",
                                                        content: error
                                                    });
                                                }
                                                this.getAppointDetail();
                                            }
                                        }

                                    });

                                }
                            }
                });
            },
            //预约状态弹窗
            onAppointStatus:function(){
                var meStatus = this;
               var  handleMessage=meStatus.appointDetailInfo.HANDLE_MESSAGE;
                //预约状态判断
                if(handleMessage!=undefined&&handleMessage!=null){
                    var appointMessage=handleMessage;
                }else{
                    appointMessage=meStatus.result;

                }
                KyeeMessageService.message({
                    title:"状态描述",
                    content:appointMessage})
            }
        };

        return def;
    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/5/9.
 * 创建原因：预约挂号记录
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.myquyi.appoint.regist.List.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("AppointRegistListService")
    .params(["HttpServiceBus","KyeeMessageService","$state"])
    .action(function(HttpServiceBus,KyeeMessageService,$state){
        var def ={
            resultTimer:undefined,
            onCancelAppointTap:function(){
                Ext.Msg.alert('提示', '您的认证正在审核中...');
            },
            /**
             * {初始化界面}
             * @param me
             */
            initView:function(me){
                this.callParent([me]);
                //版本1.0.7 2014年10月14日16:12:45
                if(global.currentCustomPatient!=undefined)
                {
                    var str = global.currentCustomPatient.OFTEN_NAME;
                    this.getPersonBtn().setText(global.setingPersonInfo+str+'</div></div>');
                }
                else
                {
                    this.getPersonBtn().setText(global.setingPersonInfo+'选择就诊卡</div></div>');
                }
                this.loadStore();
            },
            /**
             * 刷新按钮
             */
            onRefreshBtn:function(){
                this.loadStore();
            },
            /**
             * {点击列表项}
             * @param dataview
             * @param index
             * @param tag
             * @param record
             * @param e
             * @param opt
             */
            onAppointRecordListTap:function (dataview, index, tag, record, e, opt){
                var rec = record.data;
                var targetC = e.target.className;
                //@edit 刘健 修改原因：预约记录中增加医患互动入口 2015年3月7日16:17:37任务号：KYEEAPPC-1244
                if(targetC=="doctor-record_patientappoint" || targetC=="icon-yhhd" || targetC=="patient-doctor"){
                    var patientCard = global.currentCardInfo;
                    //该就诊者没有卡，进入查取就诊卡界面了
                    if(patientCard == undefined){
                        this.msgBox = Ext.Msg.confirm("温馨提示","您还没有选择就诊卡，是否选择？",function(buttonId){
                            if (buttonId === 'yes') {
                                this.createViewToViewportConfig('KYMH.view.center.QueryHisCardView',global.currentCustomPatient);
                            }
                        },this);
                        return;
                    }
                    else{
                        var arc=new Array();
                        arc[0]={hospitalID:rec.HOSPITAL_ID,hosptialName:rec.HOSPITAL_NAME,DOCTOR_CODE:rec.DOCTOR_CODE,PATIENT_ID:rec.PATIENT_ID,PATIENT_NAME:rec.PATIENT_NAME,PREPAGE:'KYMH.view.myQuYi.AppointAndRegistList'};
                        //this.createViewToViewportConfig('KYMH.view.interaction.InteractionPatientMessage',arc);
                        this.createViewToViewportConfig('KYMH.view.interaction.InteractionDoctorInfo',arc);
                    }
                }else{
                    if(targetC == 'x-button-icon commentIco x-icon-mask cancelAppoint'){
                        this.cancelPay(rec);
                    }else if(targetC == 'x-button-icon commentIco x-icon-mask gotoPay'){
                        this.gotoPay(rec);
                    }else{
                        //this.createViewToViewportConfig('KYMH.view.regist.AppointRecordDetailNew',rec);
                        rec.fromSource=2,//跳转页面时做标记，以便返回到此页面
                            this.createViewToViewportConfig('KYMH.view.myQuYi.MedicalGuideDetail',rec);
                    }
                }
                //@end 刘健 修改原因：预约记录中增加医患互动入口 2015年3月7日16:17:37任务号：KYEEAPPC-1244
            },

            gotoPay:function(formdata){
                this.clearUserAmount();//add 清缓存   2014年11月28日20:20:13      任务号：KYEEAPP-1052
                var payStore = Ext.getStore('afterappointtofee') || Ext.create('KYMH.store.regist.AfterAppointToFee');
                payStore.load({
                    params: {
                        HID:formdata.HID,
                        hospitalID:formdata.HOSPITAL_ID,
                        MARK_DESC:formdata.MARK_DESC,
                        AMOUNT:formdata.AMOUNT,
                        postdata: Ext.JSON.encode(formdata),
                        USER_ID:global.currentUserRecord.USER_ID,
                        PATIENT_ID:global.currentCardInfo.PATIENT_ID,
                        C_REG_ID:formdata.REG_ID
                    },
                    callback: function (records, operation, success) {
                        if (success) {
                            var amount = formdata.AMOUNT.toString();
                            if(amount.indexOf('.') != -1){
                                formdata.AMOUNT_TEXT =  "￥" + Math.round(amount*100)/100;
                            }else {
                                formdata.AMOUNT_TEXT = "￥" + formdata.AMOUNT + ".0";
                            }

                            //订单编号
                            var tradeNo = records[0].raw.OUT_TRADE_NO;
                            localStorage.TRADE_NO = tradeNo ;
                            //add     加数据  2014年11月28日20:20:13      任务号：KYEEAPP-1052
                            localStorage.IS_OPEN_BALANCE=records[0].raw.IS_OPEN_BALANCE;
                            localStorage.USER_PAY_AMOUNT=records[0].raw.USER_PAY_AMOUNT;
                            localStorage.REMAIN_SECONDS=records[0].raw.REMAIN_SECONDS;
                            formdata.C_REG_ID = formdata.REG_ID;
                            global.registFeeData = formdata;
                            formdata.flag='3';//代表预约
                            localStorage.isShow=records[0].raw.isShow;
                            clearInterval(this.task);
                            formdata.APPOINT_SUCCESS_PAY="1";
                            this.createViewToViewportConfig('KYMH.view.regist.PayOrder',formdata);
                        }else {
                            if(records[0]!=null&&records[0]!=''&&records[0]!=undefined){
                                var error = records[0].node.message;
                                // 不符合校验规则
                                Ext.Msg.alert('系统提示', error);
                            }
                            this.loadStore();
                        }
                    },
                    scope: this
                });
            },

            cancelPay:function(formdata){
                this.msgBox = Ext.Msg.confirm("确认提示","你确认要取消？",function(buttonId){
                    if (buttonId === 'yes'){
                        var cancelStore = Ext.getStore('cancelforappointpay') || Ext.create('KYMH.store.regist.CancelForAppointPay');
                        cancelStore.load({
                            params: {
                                HOSPITAL_ID:formdata.HOSPITAL_ID,
                                C_REG_ID:formdata.REG_ID,
                                REG_CREATE_TIME:formdata.REG_CREATE_TIME,
                                APPOINT_PAY_TIMER:formdata.AppointPaytimer,
                                REG_ID:formdata.REG_ID
                            },
                            callback: function (records, operation, success) {
                                if (success) {
                                    Ext.Msg.alert('系统提示',records[0].raw.message);
                                    this.loadStore();
                                }else {
                                    if(records[0]!=null&&records[0]!=''&&records[0]!=undefined){
                                        var error = records[0].node.message;
                                        // 不符合校验规则
                                        Ext.Msg.alert('系统提示', error);
                                    }
                                    this.loadStore();
                                }
                            },
                            scope: this
                        });

                    }
                },this);
            },


            clearUserAmount:function(){
                localStorage.IS_OPEN_BALANCE=undefined;
                localStorage.USER_PAY_AMOUNT=undefined;
            },
            timers : [],
            getAppointList:function(onSuccess){
                var me=this;

                //初始化的时候释放数组里所有的定时器
                for(var i=0;i<this.timers.length;i++){
                    clearInterval(this.timers[i]);
                }
               // Ext.getStore('AppointAndRegistStore').removeAll();
               /* if (global.currentCustomPatient == undefined) {
                    return;
                }*/
                //解决加载双圈的问题
               /* var store = Ext.create('KYMH.store.myQuYi.AppointAndRegistList');
                var cache = this.getAppointRecordView().config.pagedata;*/
                    //清理上次的缓存数据
                    //store.removeAll(true);
                HttpServiceBus.connect(
                    {
                        url : "/multibusiness/action/VisitTreeAcionC.jspx",
                        params : {
                            op:"getVisitTreeAppointMoreRecsActionC",
                            loc:"c",
                           /* USER_ID:this.pagedata.USER_ID,//global
                            //USER_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                            PATIENT_ID: this.pagedata.PATIENT_ID,
                            HOSPITAL_ID: this.pagedata.HOSPITAL_ID,
                            REG_ID: this.pagedata.REG_ID,
                            isLogin: true,
                            type: this.pagedata.TYPE,
                            START_DAY: this.pagedata.REG_DATE,
                            END_DAY: this.getNextDay(this.pagedata.REG_DATE),
                            USER_VS_ID:"133443"//global*/
                            USER_VS_ID:"894350",
                            HOSPITAL_ID:"1001",
                            USER_ID:"796631",
                            isLogin:"true",
                            hospitalID:"1001",
                            opVersion:"1.2.10",
                            operateCurrent_UserId:"796631",
                            operateUserSource:"0"
                        },
                        onSuccess:function(data){
                            var app7index=[];
                            if(data.success){
                                if(data.data!=null&&data.data!=""&&data.data!=undefined){
                                    var appointListNotHidden=true;
                                    var resultData = data.data.moreAppointRegs;
                                    var resultTimer = data.data.curHosTimerAppoint;
                                    this.resultTimer=data.data.curHosTimerAppoint;
                                    for(var i=0;i<resultData.length;i++){
                                        if(resultTimer){
                                            resultData[i].AppointPaytimer=resultTimer.AppointPaytimer;
                                        }
                                        var type=parseInt(resultData[i].TYPE);
                                        var appointType=parseInt(resultData[i].APPOINT_TYPE);
                                        var registType=parseInt(resultData[i].REGIST_TYPE);
                                        var statusType='';
                                        if(type==0){
                                            statusType=appointType;
                                        }else if(type==1){
                                            statusType=registType;
                                        }else if(type==2){
                                            statusType=appointType;
                                        }
                                        var statusResult=me.getStatus(type,statusType);
                                        resultData[i].APPOINT_STATUS_DESC= statusResult[0];
                                        resultData[i].APPOINTSTATUS= statusResult[1];
                                    }
                                    //this.addParameter(store,resultData);进行医患互动请求
                                    this.timers=[];
                                    for(var i=0;i<resultData.length;i++){
                                        var remainSenconds = resultData[i].REMAIN_SECORDS;
                                        if(remainSenconds>0){
                                            app7index.push(i);
                                            //创建一个定时器对象
                                            var timer = new Object();
                                            //将定时器对象放入数组，以便遍历释放
                                            this.timers.push(timer);
                                            //前台用regId当做id
                                            var regId = resultData[i].REG_ID;
                                            //启动定时器
                                            this.updateValue(remainSenconds,timer,regId);
                                        }
                                    }

                                }else{
                                    //显示无数据提示
                                    appointListNotHidden=false;
                                    KyeeMessageService.message({
                                        title:"系统提示",
                                        content:"您目前还没有预约挂号记录"});
                                }
                            }else{
                                //显示无数据提示
                                appointListNotHidden=false;
                                KyeeMessageService.message({
                                    title:"系统提示",
                                    content:"您目前还没有预约挂号记录"});
                            }
                            if(app7index!=''&& app7index.length>0){
                                for(var i=0;i<app7index.length;i++){
                                    var index_app=app7index[i];
                                   // this.getAppointRecordList().innerElement.dom.querySelectorAll('.outer-box-record')[index_app].style.height='9.5em';
                                }
                            }
                            var appointListData={"resultData":resultData,
                                "appointListNotHidden":appointListNotHidden

                            };
                            onSuccess(appointListData);
                        },
                        onError:function(){
                            KyeeMessageService.broadcast({
                                content:"网络异常",
                                duration:3000
                            });
                        }
                    }
                );
            },
            //获取剩余时间的秒数
            getLastMinutes:function(appointPayTimer,regCreateTime,serverTime){
                var now = new Date(serverTime.replace(/-/g,'/'));
                var nowMillisecond=now.getTime();
                regCreateTime = regCreateTime.replace(/-/g,'/');
                if(regCreateTime.indexOf('.')!=-1){
                    regCreateTime=regCreateTime.substr(0,regCreateTime.indexOf('.'));
                }
                var regCreateMillisecond = new Date(regCreateTime).getTime();
                var appointPayMillisecond = appointPayTimer * 60 * 1000;
                //距预约时间已经过了的毫秒数
                var diff = nowMillisecond - regCreateMillisecond;
                //计算剩余秒数
                var remainMillisecond = appointPayMillisecond - diff;
                var remainMinutes=remainMillisecond/1000;
                return remainMinutes;
            },

            updateValue: function (time,timer,regId) {

                if (time) {
                    var now = new Date();
                    var tem2=now.getTime()+parseInt(time)*1000;
                    now.setTime(tem2);
                    if (now) {
                        timer = setInterval(function () {
                                KYMH.app.getController('KYMH.controller.myQuYi.AppointAndRegistList').setTime(timer, now,regId);
                            },
                            1000);
                        KYMH.app.getController('KYMH.controller.myQuYi.AppointAndRegistList').setTime(timer, now,regId);
                    }
                }
            },
            setTime: function (timer,time,regId) {
                var now = new Date(), //服务器时间
                    ms = time - now,
                //计算出开始时间和现在时间的时间戳差
                    minute = Math.floor(ms / (1000 * 60)) % 60,
                //分钟
                    second = Math.floor(ms / 1000) % 60,
                //秒
                    label;
                //console.log('正在执行');
                if (ms > 0 && global.currentClassName=='KYMH.view.myQuYi.AppointAndRegistList') {
                    if(second<10){
                        second='0'+second;
                    }
                    if(this.getAppointRecordList().innerElement.query('.regId'+regId)[0]!=undefined){
                        this.getAppointRecordList().innerElement.query('.regId'+regId)[0].textContent=minute+':'+second;
                    }
                } else if(global.currentClassName=='KYMH.view.myQuYi.AppointAndRegistList'){
                    this.getAppointRecordList().innerElement.query('.tips'+regId)[0].innerHTML='<span style="color:red">您的订单付款超时</span>';
                    clearInterval(timer);
                }else{
                    clearInterval(timer);
                }
            },
            //医患互动功能按钮是否隐藏
            addParameter:function(){
                var store = Ext.getStore('addParameter') || Ext.create('KYMH.store.comm.AddParameter');
                store.load({
                    params:{
                        hospitalId:global.currentHospitalID
                    },
                    callback: function(records, operation, success) {
                        if(success){
                            var listEle=this.getAppointRecordList().innerElement.dom;
                            var pcar=listEle.querySelectorAll('#interaction');
                            if(records[0].raw.data == '1'){
                                for(var i=0;pcar!=null && pcar.length>0 && i<pcar.length;i++){
                                    pcar[i].style.display='inline';
                                }
                            }
                            else{
                                return;
                            }
                        }
                    },scope:this
                });
            },

            //判断预约挂号状态
            getStatus:function(type,statusType){
                var v='',s='';
                if(type==0){//预约
                    switch (statusType){
                        case 0:v='正在处理';s='#C21010';break;
                        case 1:v='预约成功';s='#06c1ae';break;
                        case 2:v='预约失败';s='#868181';break;
                        case 3:v='取消成功';s='#868181';break;
                        case 4:v='取消失败';s='#868181';break;
                        case 5:v='已转挂号';s='#868181';break;
                        case 6:v='未转成功';s='#868181';break;
                        case 7:v='待缴费';s='#C21010';break;
                        case 8:v='已缴费';s='#868181';break;
                        case 9:v='待退费';s='#C21010';break;
                    }
                }else if(type==1){//挂号
                    switch (statusType){
                        case 0:v='正在处理';s='#C21010';break;
                        case 1:v='挂号成功';s='#06c1ae';break;
                        case 2:v='挂号失败';s='#868181';break;
                        case 3:v='未缴费';s='#C21010';break;
                        case 4:v='取消成功';s='#868181';break;
                        case 5:v='取消失败';s='#868181';break;
                        case 6:v='已退费';s='#868181';break;
                        case 7:v='待退费';s='#C21010';break;
                    }
                }else if(type==2){
                    switch (statusType){
                        case 0:v='正在处理';s='#C21010';break;
                        case 5:v='已转挂号';s='#868181';break;
                        case 6:v='未转成功';s='#868181';break;
                    }
                }
                return [v,s];

            }


        };
        return def;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.myquyi.medical_guide.service")
    .require([
        "kyee.quyiyuan.service_bus.http",
        "kyee.quyiyuan.service_bus.cache",
        "kyee.framework.service.message",
        "kyee.quyiyuan.report.service",
        "kyee.quyiyuan.satisfaction.satisfactionHospital.service",
        "kyee.quyiyuan.satisfaction.satisfactionDoctor.service",
        "kyee.quyiyuan.satisfaction.satisfactionMenu.service"
    ])
    .type("service")
    .name("MedicalGuideService")
    .params([
        "$state","HttpServiceBus","CacheServiceBus","KyeeMessageService",
        "ReportService","SatisfactionDoctorService","SatisfactionMenuService",
        "SatisfactionHospitalService"
    ])
    .action(function(
        $state,HttpServiceBus,CacheServiceBus,KyeeMessageService,ReportService,
        SatisfactionDoctorService,SatisfactionMenuService,SatisfactionHospitalService
    ){

        var def = {
            scope : null,
            //result:'',
            satisfyData:null,//满意度数据，供满意度模块使用
            getSatisfyData:function(){
                return this.satisfyData;
            },
            setSatisfyData:function(satisfyData){
                this.satisfyData = satisfyData;
            },

            medicalGuideRecord:undefined,

            loadStore:function(loadStoreCallbackFunc){
                var me = this;
                var patientId='';
                //if(global.currentCardInfo!=undefined){
                //    patientId=global.currentCardInfo.PATIENT_ID;
                //}
                patientId = 'T1426129158';
                HttpServiceBus.connect({
                    url: 'multibusiness/action/VisitTreeAcionC.jspx',
                    params: {
                        op: 'getVisitTreeActionC',
                        loc: 'c',
                        USER_VS_ID:93547,//zwhtemp
                        USER_ID:69991,//zwhtemp
                        HOSPITAL_ID:'1001',//zwhtemp
                        PATIENT_ID:patientId,
                        LIMIT:3,
                        QUEUE_TYPE:0,//排队模式
                        LIMIT_AR:10//默认取端上的预约挂号条数
                    },
                    onSuccess: function (records) {
                        me.medicalGuideRecord=records.data;
                        var appointList = me.doSetAppointData();
                        var registList = me.doSetRegistData();
                        var quenceList = me.doSetQuenceData();
                        var feeList = me.doSetFeeResultData();
                        var reportList = me.doSetReportResultData();
                        var satisfactionList = me.doSetSatisfactionResultData();
                        var result = {
                            'appointList':appointList,
                            'registList':registList,
                            'quenceList':quenceList,
                            'feeList':feeList,
                            'reportList':reportList,
                            'satisfactionList':satisfactionList
                        };
                        loadStoreCallbackFunc(result);
                    }
                })
            },

            doSetAppointData: function () {
                var appointList = [];
                var appointResult=this.medicalGuideRecord.appointNodeInfo;//预约信息
                if(appointResult !=null && appointResult !=undefined && appointResult.length>0){
                    var yyDetailStr='';
                    var length=appointResult.length<4 ? appointResult.length:3;//取三条
                    for(var i=0;i<length;i++){
                        //时间格式化
                        var reg_date=appointResult[i].REG_DATE;
                        if(reg_date!=null&&reg_date!=''&&reg_date!=undefined){
                            reg_date=appointResult[i].REG_DATE.toString().substr(5,5);
                        }else{
                            reg_date='';
                        }
                        //上午、下午
                        var clinic_duration=appointResult[i].CLINIC_DURATION;
                        if(clinic_duration!=null&&clinic_duration!=''&& clinic_duration!=undefined){
                            if(clinic_duration.indexOf(' ')>-1){
                                clinic_duration=clinic_duration.substring(clinic_duration.lastIndexOf('/')+1).split(' ')[0];
                            }else{
                                clinic_duration=clinic_duration.substring(clinic_duration.lastIndexOf('/')+1);
                            }
                        }else{
                            clinic_duration='';
                        }

                        var time=reg_date+clinic_duration;

                        var deptName=appointResult[i].DEPT_NAME;//预约科室

                        var type=parseInt(appointResult[i].TYPE);//类型：预约、挂号等

                        var statusType=parseInt(appointResult[i].APPOINT_TYPE);//状态类型：处理中等

                        if(type==0){
                            statusType=parseInt(appointResult[i].APPOINT_TYPE);
                        }else if(type==1){
                            statusType=parseInt(appointResult[i].REGIST_TYPE);
                        }else if(type==2){
                            statusType=parseInt(appointResult[i].APPOINT_TYPE);
                        }
                        var yystatus= this.getStatus(type,statusType);
                        var status=yystatus[0];//状态文字值
                        var statusColor=yystatus[1];
                        var fontColor='#333333';
                        if('#999999'==statusColor){
                            fontColor='#999999';
                        }
                        yyDetailStr={
                            'time':time,
                            'deptName':deptName,
                            'status':status,
                            'statusColor':statusColor,
                            'fontColor':fontColor,
                            'appointNodeInfo':appointResult[i]
                        };
                        appointList.push(yyDetailStr);
                    }
                }
                return appointList;
            },
            doSetRegistData:function(){
                var registList = [];
                var registResult=this.medicalGuideRecord.registNodeInfo;//挂号信息
                if(registResult!=undefined&&registResult!=null&&registResult.length>0){
                    var ghDetailStr='';
                    var length=registResult.length<4 ? registResult.length:3;
                    for(var i=0;i<length;i++){
                        var reg_date=registResult[i].REG_DATE;
                        if(reg_date!=null&&reg_date!=''&&reg_date!=undefined){
                            reg_date=registResult[i].REG_DATE.toString().substr(5,5);
                        }else{
                            reg_date='';
                        }
                        var clinic_duration=registResult[i].CLINIC_DURATION;
                        if(clinic_duration!=null&&clinic_duration!=''&& clinic_duration!=undefined){
                            if(clinic_duration.indexOf(' ')>-1){
                                clinic_duration=clinic_duration.split('/')[1].split(' ')[0];
                            }else{
                                clinic_duration=clinic_duration.split('/')[1];
                            }
                        }else{
                            clinic_duration='';
                        }
                        var time=reg_date+clinic_duration;
                        var deptName=registResult[i].DEPT_NAME;
                        var type=parseInt(registResult[i].TYPE);
                        var statusType=parseInt(registResult[i].REGIST_TYPE);
                        if(type==0){
                            statusType=parseInt(registResult[i].APPOINT_TYPE);
                        }else if(type==1){
                            statusType=parseInt(registResult[i].REGIST_TYPE);
                        }else if(type==2){
                            statusType=parseInt(registResult[i].APPOINT_TYPE);
                        }
                        var ghstatus= this.getStatus(type,statusType);
                        var status=ghstatus[0];
                        var statusColor=ghstatus[1];
                        var fontColor='#333333';
                        if('#999999'==statusColor){
                            fontColor='#999999';
                        }
                        ghDetailStr={
                            'time':time,
                            'deptName':deptName,
                            'status':status,
                            'statusColor':statusColor,
                            'fontColor':fontColor,
                            'registNodeInfo':registResult[i]
                        };
                        registList.push(ghDetailStr);
                    }
                }
                return registList;
            },
            doSetQuenceData:function(){
                var quenceList = [];
                var quenceResult=this.medicalGuideRecord.quenceNodeInfo;//排队信息
                if(quenceResult!=undefined&&quenceResult!=null&&quenceResult.length>0){
                    var pdDetailStr='';
                    var length=quenceResult.length<4 ? quenceResult.length:3;
                    for(var i=0;i<length;i++){
                        var deptName=quenceResult[i].DEPT_NAME;
                        var beforeP=quenceResult[i].QUEUE_COUNT;
                        if(beforeP>0){
                            pdDetailStr=deptName+'前面排队人数：'+beforeP+'人';
                        }else{
                            pdDetailStr=deptName+'已叫号';
                        }
                        if(pdDetailStr!="" && pdDetailStr !=null && pdDetailStr !=undefined){
                            quenceList.push(pdDetailStr)
                        }
                    }
                }
                return quenceList;
            },
            doSetFeeResultData:function(){
                var feeList = [];
                var feeResult=this.medicalGuideRecord.treatmentCostsInfo;//缴费信息
                var sortFeeResult='';
                if(feeResult!=undefined&&feeResult!=null&&feeResult!=''){
                    sortFeeResult=feeResult.sort(function(a,b){return new Date(b.VISIT_DATE)- new Date(a.VISIT_DATE)});
                }
                if(sortFeeResult!=undefined&&sortFeeResult!=null&&sortFeeResult.length>0){
                    var feeDetailStr='';
                    var length=sortFeeResult.length<4 ? sortFeeResult.length:3;
                    for(var i=0;i<length;i++){
                        var visit_date=sortFeeResult[i].VISIT_DATE;
                        if(visit_date!=null&&visit_date!=''&&visit_date!=undefined){
                            visit_date=sortFeeResult[i].VISIT_DATE.toString().substr(5,5);
                        }else{
                            visit_date='';
                        }
                        var account_sum=sortFeeResult[i].ACCOUNT_SUM;
                        if(account_sum!=null&&account_sum!=''&&account_sum!=undefined){
                            account_sum=Number(sortFeeResult[i].ACCOUNT_SUM).toFixed(2);
                        }else{
                            account_sum='';
                        }
                        var pay_flag=sortFeeResult[i].PAY_FLAG;
                        var ITEM_CLASS=sortFeeResult[i].ITEM_CLASS;
                        if(Number(pay_flag)==0){//待缴费
                            ITEM_CLASS=this.getItemClass(ITEM_CLASS);
                        }
                        var showText=visit_date+'|'+ITEM_CLASS+'|¥'+account_sum;
                        if(Number(pay_flag)==0){
                            feeDetailStr={
                                'showText':showText,
                                'status':'待缴费',
                                'statusColor':'#EC2B10',
                                'fontColor':'black',
                                'sortFeeResult':sortFeeResult[i]
                            };
                        }else{//已缴费
                            var jfstatus=this.getJfStatus(sortFeeResult[i].PAY_FLAG,sortFeeResult[i].ACCOUNT_FLAG);
                            var status=jfstatus[0];
                            var statusColor=jfstatus[1];
                            var fontColor='#333333';
                            if('#999999'==statusColor){
                                fontColor='#999999';
                            }
                            feeDetailStr={
                                'showText':showText,
                                'status':status,
                                'statusColor':statusColor,
                                'fontColor':fontColor,
                                'sortFeeResult':sortFeeResult[i]
                            };
                        }
                        feeList.push(feeDetailStr);
                    }
                }
                return feeList;
            },
            doSetReportResultData:function(){
                var reportList = [];
                var reportResult=this.medicalGuideRecord.doctorReportInfo;//报告单信息
                if(reportResult!=undefined&&reportResult!=null&&reportResult.length>0){
                    var reportDetailStr='';
                    var length=reportResult.length<4 ? reportResult.length:3;
                    for(var i=0;i<length;i++){
                        var ITEM_NAME=reportResult[i].ITEM_NAME;
                        if(ITEM_NAME!=null&&ITEM_NAME!=''&&ITEM_NAME!=undefined){
                            ITEM_NAME=reportResult[i].ITEM_NAME.substr(0,15);
                        }else{
                            ITEM_NAME='';
                        }
                        var REPORT_DATE=reportResult[i].REPORT_DATE;
                        if(REPORT_DATE!=null&&REPORT_DATE!=''&&REPORT_DATE!=undefined){
                            REPORT_DATE=reportResult[i].REPORT_DATE.toString().substr(5,5);
                        }else{
                            REPORT_DATE='';
                        }
                        var report_type= reportResult[i].REPORT_TYPE;
                        reportDetailStr={
                            'REPORT_DATE':REPORT_DATE,
                            'ITEM_NAME':ITEM_NAME,
                            'REPORT_TYPE':report_type
                        };
                        reportList.push(reportDetailStr);
                    }
                }
                return reportList;
            },
            doSetSatisfactionResultData:function(){
                var satisfactionList = [];
                var satisfactionResult=this.medicalGuideRecord.Satisfactions;//满意度信息
                if(satisfactionResult!=undefined&&satisfactionResult!=null&&satisfactionResult.length>0){
                    var mydDetailStr='';
                    var length=satisfactionResult.length<4 ? satisfactionResult.length:3;
                    for(var i=0;i<length;i++){
                        var reg_date=satisfactionResult[i].REG_DATE;
                        if(reg_date!=null&&reg_date!=''&&reg_date!=undefined){
                            reg_date=satisfactionResult[i].REG_DATE.toString().substr(5,5);
                        }else{
                            reg_date='';
                        }
                        var clinic_duration=satisfactionResult[i].CLINIC_DURATION;
                        if(clinic_duration!=null&&clinic_duration!=''){
                            clinic_duration=clinic_duration.split('/')[1].substr(0,2);
                        }else{
                            clinic_duration='';
                        }
                        var time=reg_date+clinic_duration;
                        var deptName=satisfactionResult[i].DEPT_NAME;
                        var isSuggest=satisfactionResult[i].IS_SUGGEST;
                        var score=satisfactionResult[i].IS_SCORE;
                        var mydStatus=this.getPjStatus(isSuggest,score);
                        var status = mydStatus[0];
                        var statusColor = mydStatus[1];
                        var fontColor='#333333';
                        if('#999999'==statusColor){
                            fontColor='#999999';
                        }
                        mydDetailStr={
                            "time":time,
                            "deptName":deptName,
                            "status":status,
                            "statusColor":statusColor,
                            "fontColor":fontColor,
                            "satisfactionResult":satisfactionResult[i]
                        };
                        satisfactionList.push(mydDetailStr);
                    }
                }
                return satisfactionList;
            },
            getStatus:function(type,statusType){
                var v='',s='';
                if(type==0){//预约
                    switch (statusType){
                        case 0:v='正在处理';s='#EC2B10';break;
                        case 1:v='预约成功';s='#999999';break;
                        case 2:v='预约失败';s='#999999';break;
                        case 3:v='取消成功';s='#999999';break;
                        case 4:v='取消失败';s='#999999';break;
                        case 5:v='已转挂号';s='#999999';break;
                        case 6:v='未转成功';s='#999999';break;
                        case 7:v='待缴费';s='#EC2B10';break;
                        case 8:v='已缴费';s='#999999';break;
                        case 9:v='待退费';s='#EC2B10';break;
                    }
                }else if(type==1){//挂号
                    switch (statusType){
                        case 0:v='正在处理';s='#EC2B10';break;
                        case 1:v='挂号成功';s='#999999';break;
                        case 2:v='挂号失败';s='#999999';break;
                        case 3:v='未缴费';s='#EC2B10';break;
                        case 4:v='取消成功';s='#999999';break;
                        case 5:v='取消失败';s='#999999';break;
                        case 6:v='已退费';s='#999999';break;
                        case 7:v='待退费';s='#EC2B10';break;
                    }
                }else if(type==2){
                    switch (statusType){
                        case 0:v='正在处理';s='#EC2B10';break;
                        case 5:v='已转挂号';s='#999999';break;
                        case 6:v='未转成功';s='#999999';break;
                    }
                }
                return [v,s];
            },
            //满意度评价状态判断
            getPjStatus:function(IS_SUGGEST,IS_SCORE){
                var v='',s='';
                if(IS_SUGGEST=='0' && IS_SCORE=='0'){
                    v='未评价';
                    s='#EC2B10';
                } else if(IS_SUGGEST=='0' && IS_SCORE=='1'){
                    v='未评价医生';
                    s='#EC2B10';
                } else if(IS_SUGGEST=='1' && IS_SCORE=='0'){
                    v='未评价医院';
                    s='#EC2B10';
                } else if(IS_SUGGEST=='2' && IS_SCORE=='0'){
                    v='未评价医院';
                    s='#EC2B10';
                } else {
                    v='已评价';
                    s='#999999';
                }
                return [v,s];
            },
            //已缴费状态判断
            getJfStatus:function(PAY_FLAG,ACCOUNT_FLAG){
                var v='',s='';
                if(Number(PAY_FLAG)==1){
                    switch (Number(ACCOUNT_FLAG)){
                        case 0:v='正在处理';s='#EC2B10';break;
                        case 1:v='缴费成功';s='#999999';break;
                        case 2:v='缴费失败';s='#EC2B10';break;
                        case 3:v='已退费';s='#999999';break;
                    }
                }
                return [v,s];
            },
            //待缴费ITEM_CLASS转换
            getItemClass:function(ITEM_CLASS){
                var itemClass=ITEM_CLASS;
                if('A'==ITEM_CLASS){
                    itemClass='药品';
                }else if('C'==ITEM_CLASS){
                    itemClass='检查';
                }else if('D'==ITEM_CLASS){
                    itemClass='化验';
                }
                return itemClass;
            },

            onAppointTap:function(){
                var btnRights = CacheServiceBus.getStorageCache().get("homeData").rights;
                if(btnRights!=null){
                    var showFlag=false;
                    for(var i=0;i<btnRights.length;i++){
                        if(btnRights[i].MODULE_CODE=='APPOINT'){
                            showFlag=true;
                            if(btnRights[i].IS_ENABLE=='0'){
                                KyeeMessageService.message({
                                    title:"温馨提示",
                                    content:btnRights[i].DISABLEINFO
                                });
                                return;
                            }
                        }
                    }
                    if(!showFlag){
                        KyeeMessageService.message({
                            title:"温馨提示",
                            content:'此功能暂未开放，敬请期待！'
                        });
                        return;
                    }
                }
                var currentHospitalID = CacheServiceBus.getStorageCache().get("hospitalInfo").id;
                if(currentHospitalID==null || currentHospitalID== undefined){
                    KyeeMessageService.confirm({
                        title:"提示信息",
                        content:"您还未选择医院,请选择医院！",
                        onSelect:function(status){
                            if(status){
                                $state.go('hospital_selector');
                            }
                        }
                    });
                    return;
                }
                $state.go('appoint');
            },
            onAppointMoreTap:function(){
                $state.go('appoint_regist_list');
            },
            onRegistTap:function(){
                var btnRights = CacheServiceBus.getStorageCache().get("homeData").rights;
                if(btnRights!=null){
                    var showFlag=false;
                    for(var i=0;i<btnRights.length;i++){
                        if(btnRights[i].MODULE_CODE=='REGIST'){
                            showFlag=true;
                            if(btnRights[i].IS_ENABLE=='0'){
                                KyeeMessageService.message({
                                    title:"温馨提示",
                                    content:btnRights[i].DISABLEINFO
                                });
                                return;
                            }
                        }
                    }
                    if(!showFlag){
                        KyeeMessageService.message({
                            title:"温馨提示",
                            content:'此功能暂未开放，敬请期待！'
                        });
                        return;
                    }
                }
                var currentHospitalID = CacheServiceBus.getStorageCache().get("hospitalInfo").id;
                if(currentHospitalID==null || currentHospitalID== undefined){
                    KyeeMessageService.confirm({
                        title:"提示信息",
                        content:"您还未选择医院,请选择医院！",
                        onSelect:function(status){
                            if(status){
                                $state.go('hospital_selector');
                            }
                        }
                    });
                    return;
                }
                $state.go('regist');
            },
            onReportMoreTap:function(){
                $state.go('report');
            },
            onReportListTap:function(record){
                if(record.REPORT_TYPE=='E'){
                    ReportService.goToReport(1);//检查单
                }else{
                    ReportService.goToReport(0);//检验单
                }
            },
            onSatisficationMoreTap:function(){
                $state.go('satisfaction');
            },
            onSatisficationListTap:function(record){
                record.CLINIC_DURATION=record.CLINIC_DURATION.split('/')[1];
                var path=record.DOCTOR_PIC_PATH;
                if(path==undefined||path==null||path==''||path=='null'){
                    record.DOCTOR_PIC_PATH='resources/images/doctor_male.png'
                }
                this.setSatisfyData(record);
                record.fromSource=1;

                if (record.IS_SUGGEST=='0' || record.IS_SCORE == '0') {
                    if (record.IS_SATISFIED_OPEN == 0) {
                        KyeeMessageService.message({
                            title:"温馨提示",
                            content:'该医院暂未开放满意度评价功能！'
                        });
                        return;
                    }
                    if (record.IS_NEED_VISIT == 0 && record.VISIT_STATUS != '2') {
                        KyeeMessageService.message({
                            title:"温馨提示",
                            content:'该医生需要就诊以后才能评价！'
                        });
                        return;
                    }
                }
                if(record.IS_SUGGEST=='0'){
                    SatisfactionMenuService.isTabActive = 1;
                    SatisfactionDoctorService.data = record;
                    $state.go("satisfaction_menu.satisfaction_doctor");//医生评价
                } else if(record.IS_SCORE == '0'){
                    SatisfactionMenuService.isTabActive = 2;
                    SatisfactionDoctorService.data = record;
                    $state.go("satisfaction_menu.satisfaction_hospital");//医院评价
                } else{
                    SatisfactionMenuService.isTabActive = 1;
                    SatisfactionDoctorService.data = record;
                    $state.go("satisfaction_menu.satisfaction_doctor");//医生已评价
                }
            },
            onPaymentMoreTap:function(){
                $state.go('payment');
            },
            onPaymentListTap:function(record) {
                if (parseInt(record.PAY_FLAG) == 1) {//已缴费
                    $state.go('alreadyPayment');//已缴费
                } else {
                    $state.go('payment');//待缴费
                }
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：我的关注页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.myquyi.my_care_doctors.service")
    .require([])
    .type("service")
    .name("MyCareDoctorsService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function(HttpServiceBus, CacheServiceBus){

        var def = {
            /**
             * 查询所有关注的医生
             */
            queryMyCareList : function(onSuccess){
                var me = this;
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "queryMyCareList",
                        userId: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                        userVsId: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID
                    },
                    cache: {
                        by: "TIME",
                        value: 60
                    },
                    onSuccess : function (resp) {
                        if(!resp.rows){
                            return;
                        }
                        var data = me.makePicPath(resp.rows);
                        onSuccess(me.groupList(data, "HOSPITAL_ID"));
                    }
                });
            },
            /**
             * 查询切换医院所需要到的医院信息
             */
            queryHospitalInfo : function(hospitalId, onSuccess){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "queryRegistJumpInfo",
                        DOCTOR_HOSPITALID: hospitalId
                    },
                    onSuccess : function (resp) {
                        if(!resp.data){
                            return;
                        }
                        onSuccess(resp.data);
                    }
                });
            },
            /**
             * 查询医患互动跳转参数
             */
            queryInteractionInfo : function(hospitalId, doctorCode, onSuccess){
                HttpServiceBus.connect({
                    url : "/patientwords/action/PatientWordsActionC.jspx",
                    params : {
                        op: "queryRegistJumpInfo",
                        DOCTOR_HOSPITALID: hospitalId,
                        DOCTOR_CODE:doctorCode
                    },
                    onSuccess : function (resp) {
                        if(!resp.data){
                            return;
                        }
                        onSuccess(resp.data);
                    }
                });
            },
            /**
             * 对数据进行分组的函数
             * @param data
             * @param key
             * @returns {{}}
             */
            groupList: function (data, key) {
                var result = {};
                for (var i=0; i<data.length; i++) {
                    if (!result[data[i][key]])
                        result[data[i][key]]=[];
                    result[data[i][key]].push(data[i]);
                }

                var keys = Object.keys(result);
                for(var k=0; k<keys.length; k++){
                    if(result[keys[k]].length===0)
                        delete result[keys[k]];
                }
                return result;
            },
            /**
             * 重新转换图片路径
             * @param data
             * @returns {*}
             */
            makePicPath: function (data) {
                for(var index = 0; index < data.length; index++){
                    if(data[index].DOCTOR_PIC_PATH){
                        if(data[index].DOCTOR_PIC_PATH.substring(0,7) != 'http://'){
                            data[index].DOCTOR_PIC_PATH = AppConfig.SERVER_URL + data[index].DOCTOR_PIC_PATH;
                        }
                    } else {
                        data[index].DOCTOR_PIC_PATH = "/resource/images/icons/headh.png";
                    }
                }
                return data;
            }
        };

        return def;
    })
    .build();
new KyeeModule()
    .group("kyee.quyiyuan.myquyi.service")
    .require([

    ])
    .type("service")
    .name("MyquyiService")
    .params([
        "$state"
    ])
    .action(function($state){

        var def = {

            //我的趣医当前激活的tab按钮
            backTabIndex:-1,
            //设置激活按钮
            setBackTabIndex:function(index){
                this.backTabIndex = index;
            },
            //获取当前激活按钮
            getBackTabIndex:function(){
                return this.backTabIndex;
            },
            //显示我的趣医页面
            //入参：activeIndex：要显示页面的index,如第一个页面index为1
            doShowMyquyiView:function(Index){
                var routerMap = [//路由映射，根据activeIndex跳转对应路由
                    "myquyi->MAIN_TAB.medicalGuide",
                    "myquyi->MAIN_TAB.inpatientBusiness",
                    "myquyi->MAIN_TAB.careDoctors"
                ];
                this.backTabIndex = Index;
                $state.go(routerMap[Index-1]);
            }

        };
        return def;
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 程铄闵
 * 创建日期:2015年4月29日15:49:00
 * 创建原因：住院费用服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientBusiness.service")
    .type("service")
    .name("inpatientBusinessService")
    .action(function () {

        var def = {
            //加载数据
            loadData: function (getData, HttpServiceBus, $scope,CacheServiceBus,KyeeMessageService) {
                var me = this;
                var global = CacheServiceBus.getMemoryCache();
                var localStore = CacheServiceBus.getStorageCache();
                HttpServiceBus.connect({
                    url: "/PreCharge/action/PreChargeActionC.jspx",
                    params: {
                        op: "inHospital",
                        USER_VS_ID: '726',
                        USER_ID: '2164442'
                    },
                    cache:{
                        by : "TIME",
                        value : 60  //单位：秒
                    },
                    onSuccess: function (data) {
                        if (data != null) {
                            //数据获取成功
                            if (data.success) {
                                //住院缴费数据
                                var payInfo = JSON.parse(data.data.PAY_INFO);
                                $scope.flag = payInfo.FLAG; //是否有去缴费按钮 1-未失效；0-失效
                                $scope.payInfo = JSON.parse(payInfo.INFO).rows;//住院缴费记录
                                if ($scope.payInfo.length == 0) {
                                    $scope.payFlag = 'payEmpty';
                                    $scope.payMore = '';
                                }
                                else {
                                    $scope.INPATIENT_NO = $scope.payInfo[0].INPATIENT_NO; //当前住院号
                                    $scope.payFlag = 'payNoEmpty';
                                    //三条以上的数据显示更多按钮
                                    if ($scope.payInfo.length == 3) {
                                        $scope.payMore = 'payMore';
                                    }
                                    for (var k = 0; k < $scope.payInfo.length; k++) {
                                        var balance = $scope.payInfo[k].BALANCE;//余额
                                        var charge = $scope.payInfo[k].CHARGE_AMOUNT;//共缴费
                                        if (balance == undefined) {
                                            $scope.payInfo[k].BALANCE = '';
                                        }
                                        else {
                                            $scope.payInfo[k].BALANCE = '¥ ' + balance;
                                        }
                                        if (charge == undefined) {
                                            $scope.payInfo[k].CHARGE_AMOUNT = '';
                                        }
                                        else {
                                            $scope.payInfo[k].CHARGE_AMOUNT = '¥ ' + charge;
                                        }
                                    }
                                }
                                //住院费用数据
                                $scope.feeInfo = [];//住院费用记录
                                $scope.feeDetail = [];//住院费用详情
                                var feeInfo = JSON.parse(data.data.HOSPITAL_INFO);
                                if (feeInfo.length == 0) {
                                    $scope.feeFlag = 'feeEmpty';
                                    $scope.feeMore = '';
                                }
                                else {
                                    $scope.feeFlag = 'feeNoEmpty';
                                    if (feeInfo.length == 3) {
                                        $scope.feeMore = 'feeMore';
                                    }
                                    for (var i = 0; i < feeInfo.length; i++) {
                                        var fee = JSON.parse(feeInfo[i]);
                                        var totalFee = fee.TOTAL_FEE;//总费用
                                        if (totalFee == undefined) {
                                            fee.TOTAL_FEE = '';
                                        }
                                        else {
                                            fee.TOTAL_FEE = '¥ ' + totalFee;
                                        }
                                        var feeDetail = JSON.parse(fee.FEEITEMINFO);//费用详情
                                        for (var j = 0; j < feeDetail.length; j++) {
                                            var realFee = feeDetail[j].REAL_PAY_FEE;//费用详情金额
                                            if (realFee == undefined) {
                                                feeDetail[j].REAL_PAY_FEE = '';
                                            }
                                            else {
                                                feeDetail[j].REAL_PAY_FEE = '¥ ' + realFee;
                                            }
                                        }
                                        fee.FEEITEMINFO = [];
                                        fee.FEEITEMINFO = feeDetail;
                                        $scope.feeInfo[i] = fee;
                                    }
                                }
                                //住院报告单
                                $scope.reportFlag = 'reportEmpty';
                            }
                            //数据获取失败
                            else {
                                KyeeMessageService.broadcast('网络异常，请稍后重试！');
                            }
                        }
                    },
                    onError: function () {
                    }
                })
            }
        };
        return def;
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 程铄闵
 * 创建日期:2015年5月7日10:18:28
 * 创建原因：住院费用详情服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientFee.service")
    .type("service")
    .name("inpatientFeeService")
    .action(function () {

        var def = {
            //加载数据
            loadData: function (getData, HttpServiceBus, $scope) {
                HttpServiceBus.connect({
                    url: "/PreCharge/action/PreChargeActionC.jspx",
                    /*                    params: {
                     loc: "c",
                     op: "getHistroyMore",
                     isLogin: "true",
                     USER_VS_ID: '726',
                     USER_ID: '2164442',
                     opVersion: "1.2.11",
                     operateCurrent_UserId: '2164442',
                     hospitalID: '1501',
                     page: '1',
                     start: '0',
                     rows: '100'
                     },//测试库*/
                    params: {
                        op: "getHistroyMore",
                        USER_VS_ID: '726',
                        USER_ID: '2164442',
                        page: '1',
                        start: '0',
                        rows: '100'
                    },
                    cache:{
                        by : "TIME",
                        value : 60  //单位：秒
                    },
                    onSuccess: function (data) {
                        if (data != null) {
                            /*                            data = {"success":true,"message":"success","resultCode":"0000000","data":["{\"INHOSPITAL_ID\":5,\"HOSPITAL_ID\":1501,\"PATIENT_ID\":\"1350014\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2015-02-09 16:31:58\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 15:34:17\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:11:24\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"9\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"90.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"121.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"200.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"89.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"67550.81\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"INHOSPITAL_ID\":699,\"HOSPITAL_ID\":290001,\"PATIENT_ID\":\"Q150213002\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2015-02-02 20:17:23\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"93149.28\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"INHOSPITAL_ID\":700,\"HOSPITAL_ID\":290007,\"PATIENT_ID\":\"Q150307001\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2015-02-02 20:17:23\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:12:50\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-01-22 10:10:54\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"93149.28\",\"HOSPITAL_NAME\":\"测试1.2.10低端Other\"}","{\"INHOSPITAL_ID\":8,\"HOSPITAL_ID\":1501,\"PATIENT_ID\":\"1350014\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2015-01-22 20:10:46\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 15:34:17\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:11:24\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"9\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"90.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"121.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"200.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"89.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"67550.81\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"INHOSPITAL_ID\":9,\"HOSPITAL_ID\":1501,\"PATIENT_ID\":\"1350014\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2015-01-22 20:10:46\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 15:34:17\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:11:24\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"9\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"90.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"121.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"200.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"89.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"67550.81\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"INHOSPITAL_ID\":10,\"HOSPITAL_ID\":1501,\"PATIENT_ID\":\"1350014\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2015-01-22 20:10:46\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 15:34:17\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:11:24\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"9\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"90.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"121.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"200.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"89.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"67550.81\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"INHOSPITAL_ID\":698,\"HOSPITAL_ID\":1501,\"PATIENT_ID\":\"1350014\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2015-01-22 20:10:46\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 15:34:17\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:11:24\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"9\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"90.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"121.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"200.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"89.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"67550.81\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"INHOSPITAL_ID\":7,\"HOSPITAL_ID\":1501,\"PATIENT_ID\":\"1350014\",\"VISIT_ID\":\"1\",\"INHOSPITAL_DATE\":\"2014-09-25 16:31:58\",\"FEEITEMINFO\":\"[{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 15:34:17\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:11:24\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"9\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"90.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"121.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"200.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"头孢他啶粉针\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"灯盏细辛注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"14853.87\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"5622.30\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0},{\\\"VISIT_ID\\\":0,\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"TOTAL_COSTS\\\":0.0,\\\"SHOULD_PAY_FEE\\\":0.0,\\\"REAL_PAY_FEE\\\":\\\"89.00\\\",\\\"PREPAID_BALANCE\\\":0.0,\\\"BILLING_DATE_TIME\\\":\\\"2015-02-09 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"AMOUNT\\\":0.0}]\",\"TOTAL_FEE\":\"67550.81\",\"HOSPITAL_NAME\":\"测试单端医院\"}"]}*/
                            //数据获取成功
                            if (data.success) {
                                $scope.feeInfo = [];
                                $scope.detailFlag = [];//费用详情是否存在：true-有 false-无
                                for (var i = 0; i < data.data.length; i++) {
                                    $scope.feeInfo[i] = JSON.parse(data.data[i]);
                                    //var da = new Date(Date.parse($scope.feeInfo[i].INHOSPITAL_DATE));//费用日期
                                    //$scope.feeInfo[i].INHOSPITAL_DATE = da.toLocaleDateString().substr(5);
                                    var fee = $scope.feeInfo[i].TOTAL_FEE;//总费用
                                    if (fee == undefined) {
                                        $scope.feeInfo[i].TOTAL_FEE = '';
                                    }
                                    else {
                                        $scope.feeInfo[i].TOTAL_FEE = '¥ ' + fee;
                                    }
                                    var detail = JSON.parse($scope.feeInfo[i].FEEITEMINFO);
                                    if (detail.length == 0) {
                                        $scope.detailFlag[i] = false;
                                        $scope.feeInfo[i].FEEITEMINFO = [];
                                    }
                                    else {
                                        for (var j = 0; j < detail.length; j++) {
                                            //单次费用日期
                                            //var da = new Date(Date.parse(detail[j].BILLING_DATE_TIME));
                                            //detail[j].BILLING_DATE_TIME = da.toLocaleDateString().substr(5);
                                            //单次费用金额
                                            var realFee = detail[j].REAL_PAY_FEE;
                                            if (realFee == undefined) {
                                                detail[j].REAL_PAY_FEE = '';
                                            }
                                            else {
                                                detail[j].REAL_PAY_FEE = '¥ ' + realFee;
                                            }
                                        }
                                        $scope.detailFlag[i] = true;
                                        $scope.feeInfo[i].FEEITEMINFO = [];
                                        $scope.feeInfo[i].FEEITEMINFO = detail;
                                    }
                                }
                            }
                            //数据获取失败
                            else {
                                KyeeMessageService.broadcast('网络异常，请稍后重试！');
                            }
                        }
                    },
                    onError: function () {

                    }
                })
            },

            getInPatientData: function () {
            }
        };
        return def;
    })
    .build();

/*
 * 产品名称：quyiyuan
 * 创建人: 程铄闵
 * 创建日期:2015年5月6日10:56:29
 * 创建原因：住院缴费详情服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientPay.service")
    .type("service")
    .name("inpatientPayService")
    .action(function () {

        var def = {
            //加载数据
            loadData: function (getData, HttpServiceBus, $scope) {
                HttpServiceBus.connect({
                    url: "/PreCharge/action/PreChargeActionC.jspx",
                    /*                    params : {
                     loc : "c",
                     op : "payInfoMore",
                     isLogin : "true",
                     USER_VS_ID:'726',
                     USER_ID:'2164442',
                     opVersion : "1.2.11",
                     operateCurrent_UserId:'2164442',
                     hospitalID : '1501',
                     page:'1',
                     start:'0',
                     rows:'100'
                     },//测试库*/
                    params: {
                        op: "payInfoMore",
                        USER_VS_ID: '726',
                        USER_ID: '2164442',
                        page: '1',
                        start: '0',
                        rows: '100'
                    },
                    cache:{
                        by : "TIME",
                        value : 60  //单位：秒
                    },
                    onSuccess: function (data) {
                        if (data != null) {
                            //test!!!1111111111
                            //data = {"success":true,"message":"success","resultCode":"0000000","data":["{\"PRE_ID\":188,\"INPATIENT_NO\":\"12345678963\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":201,\"INPATIENT_NO\":\"12348658\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":203,\"INPATIENT_NO\":\"1234568890\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":208,\"INPATIENT_NO\":\"34836568\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":211,\"INPATIENT_NO\":\"123467952\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":212,\"INPATIENT_NO\":\"55663322\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":214,\"INPATIENT_NO\":\"8862453\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":215,\"INPATIENT_NO\":\"223464\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":217,\"INPATIENT_NO\":\"123456462\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":199,\"INPATIENT_NO\":\"123654\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":198,\"INPATIENT_NO\":\"23652365\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":189,\"INPATIENT_NO\":\"3366998887\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":190,\"INPATIENT_NO\":\"223366559988\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":191,\"INPATIENT_NO\":\"445566332178\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":193,\"INPATIENT_NO\":\"123456789\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"1111.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":194,\"INPATIENT_NO\":\"23569852\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":195,\"INPATIENT_NO\":\"123654789654\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":196,\"INPATIENT_NO\":\"123655789654ertyu\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":197,\"INPATIENT_NO\":\"1234567890321yu\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":218,\"INPATIENT_NO\":\"1234659\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":219,\"INPATIENT_NO\":\"1234546\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":220,\"INPATIENT_NO\":\"46585454\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":244,\"INPATIENT_NO\":\"22563322\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":245,\"INPATIENT_NO\":\"22563322\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"PRE_ID\":246,\"INPATIENT_NO\":\"123456789\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"PRE_ID\":247,\"INPATIENT_NO\":\"19841020\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"PRE_ID\":249,\"INPATIENT_NO\":\"123456789qwerty\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":251,\"INPATIENT_NO\":\"5566321456\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试1.2.10低端Other\"}","{\"PRE_ID\":252,\"INPATIENT_NO\":\"3477467\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":253,\"INPATIENT_NO\":\"22345dfhh\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":243,\"INPATIENT_NO\":\"2235682\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":242,\"INPATIENT_NO\":\"2233665\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\",\\\"DEPO_DATE\\\":\\\"2015-01-15 11:36:28\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\",\\\"DEPO_DATE\\\":\\\"2015-01-15 11:36:28\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":223,\"INPATIENT_NO\":\"4123488\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":231,\"INPATIENT_NO\":\"4123488\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"体验医院\"}","{\"PRE_ID\":232,\"INPATIENT_NO\":\"3455685\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"34.00\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":233,\"INPATIENT_NO\":\"489655\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":236,\"INPATIENT_NO\":\"10201125\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":237,\"INPATIENT_NO\":\"1020521\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"10.00\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":239,\"INPATIENT_NO\":\"22336622\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"10.00\\\",\\\"DEPO_DATE\\\":\\\"2015-01-15 11:36:28\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"10.00\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":240,\"INPATIENT_NO\":\"225423\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\",\\\"DEPO_DATE\\\":\\\"2015-01-15 11:36:28\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":254,\"INPATIENT_NO\":\"123456dfhjy\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试1.2.10低端Other\"}","{\"PRE_ID\":184,\"INPATIENT_NO\":\"3477467\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"PRE_ID\":77,\"INPATIENT_NO\":\"111\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"11.00\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":147,\"INPATIENT_NO\":\"12346795\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":148,\"INPATIENT_NO\":\"12345\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":150,\"INPATIENT_NO\":\"5656567\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":151,\"INPATIENT_NO\":\"1234567890\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":152,\"INPATIENT_NO\":\"12466\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":153,\"INPATIENT_NO\":\"456248624eetueyi\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":154,\"INPATIENT_NO\":\"564589532486qwertyuittiru\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":155,\"INPATIENT_NO\":\"weturu459657866\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":146,\"INPATIENT_NO\":\"87686987\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":145,\"INPATIENT_NO\":\"3636578\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":86,\"INPATIENT_NO\":\"123456\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\",\\\"DEPO_DATE\\\":\\\"2015-01-15 11:36:28\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"520.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"500.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":88,\"INPATIENT_NO\":\"11\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"1.00\\\",\\\"DEPO_DATE\\\":\\\"2015-01-15 11:36:28\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"1.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"111.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"11.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"11.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"11.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"11.00\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":138,\"INPATIENT_NO\":\"654231587\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":139,\"INPATIENT_NO\":\"789654\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":141,\"INPATIENT_NO\":\"3695423\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"PRE_ID\":142,\"INPATIENT_NO\":\"556348\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"PRE_ID\":143,\"INPATIENT_NO\":\"364658\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":144,\"INPATIENT_NO\":\"343678\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":156,\"INPATIENT_NO\":\"55663322447788wwertui\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":157,\"INPATIENT_NO\":\"554632rety556332\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":158,\"INPATIENT_NO\":\"QWWER44566328\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":169,\"INPATIENT_NO\":\"_1\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":170,\"INPATIENT_NO\":\"-1\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":171,\"INPATIENT_NO\":\"对方哈哈\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":172,\"INPATIENT_NO\":\"%^^$#@$^\\u0026*235788\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":173,\"INPATIENT_NO\":\"15268456688886555637qwerrtyuio\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":174,\"INPATIENT_NO\":\"124584585685eetyeyioegjoeyotif\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":178,\"INPATIENT_NO\":\"3462$46\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":182,\"INPATIENT_NO\":\"346257\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}","{\"PRE_ID\":168,\"INPATIENT_NO\":\"1\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"1.00\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"2.00\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":167,\"INPATIENT_NO\":\"5563246327562\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":159,\"INPATIENT_NO\":\"55639874RrtyyTtyyrTYYYT\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":160,\"INPATIENT_NO\":\"ERRYyuiiyr554466328\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"},{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":161,\"INPATIENT_NO\":\"5563322eetyurTTUTYII\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":162,\"INPATIENT_NO\":\"55632894\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":163,\"INPATIENT_NO\":\"55632489\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":164,\"INPATIENT_NO\":\"12237855\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":165,\"INPATIENT_NO\":\"5566322wwrtuRTYUUT\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[{\\\"PRED_ID\\\":0,\\\"PRE_ID\\\":0,\\\"DEPO_AMOUNT\\\":\\\"0.10\\\"}]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":166,\"INPATIENT_NO\":\"223367891\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"测试单端医院\"}","{\"PRE_ID\":183,\"INPATIENT_NO\":\"347747\",\"HOSPITAL_ID\":0,\"AGE\":0,\"ADMISS_DATE\":\"2015-01-15 13:00:35\",\"ADMISS_TIMES\":0,\"CHARGE_AMOUNT\":\"5000.00\",\"DETAIL\":\"[]\",\"HOSPITAL_NAME\":\"低端1.2.0\"}"]}
                            //数据获取成功
                            if (data.success) {
                                $scope.payInfo = [];
                                $scope.detailFlag = [];//缴费详情是否存在：true-有 false-无
                                for (var i = 0; i < data.data.length; i++) {
                                    $scope.payInfo[i] = JSON.parse(data.data[i]);
                                    //var da = new Date(Date.parse($scope.payInfo[i].ADMISS_DATE));//缴费日期
                                    //$scope.payInfo[i].ADMISS_DATE = da.toLocaleDateString().substr(5);
                                    var amount = $scope.payInfo[i].CHARGE_AMOUNT;//共缴费
                                    if (amount == undefined) {
                                        $scope.payInfo[i].CHARGE_AMOUNT = '';
                                    }
                                    else {
                                        $scope.payInfo[i].CHARGE_AMOUNT = '¥ ' + amount;
                                    }
                                    var detail = JSON.parse($scope.payInfo[i].DETAIL);
                                    if (detail.length == 0) {
                                        $scope.detailFlag[i] = false;
                                        $scope.payInfo[i].DETAIL = [];
                                    }
                                    else {
                                        for (var j = 0; j < detail.length; j++) {
                                            //单次缴费金额
                                            var depo = detail[j].DEPO_AMOUNT;
                                            if (depo == undefined) {
                                                detail[j].DEPO_AMOUNTT = '';
                                            }
                                            else {
                                                detail[j].DEPO_AMOUNTT = '¥ ' + depo;
                                            }
                                        }
                                        $scope.detailFlag[i] = true;
                                        $scope.payInfo[i].DETAIL = [];
                                        $scope.payInfo[i].DETAIL = detail;
                                    }
                                }
                            }
                            //数据获取失败
                            else {
                                KyeeMessageService.broadcast('网络异常，请稍后重试！');
                            }
                        }
                    },
                    onError: function () {

                    }
                })
            },

            getInPatientData: function () {
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：卢飞
 * 创建时间： 2015年5月8日10:41:05
 * 创建原因：医院导航控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.navigationOut.controller")
    .require(["kyee.quyiyuan.navigationOut.service","kyee.framework.service.message"])
    .type("controller")
    .name("NavigationOutController")
    .params(["$scope", "$state", "KyeeViewService", "CacheServiceBus", "NavigationOutService","KyeeMessageService"])
    .action(function ($scope, $state, KyeeViewService, CacheServiceBus, NavigationOutService,KyeeMessageService) {
        var hospitalinfo = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
        var hospitalId = 3819;
        var hosPoint = undefined;//医院所在地点
        var currentPoint = undefined;//用户所在地点
        var dis = undefined;//距离
        var map = undefined;//百度地图
        $scope.isShow = true;
        $scope.Navigate = false;
        //向百度地图发送请求绘制地图
        $scope.showPage = function () {

            NavigationOutService.getHospitalAddress(function (hospitalData) {
                KyeeMessageService.loading({
                    content :  "正在加载，请稍后..." ,
                    mask : false
                });
                var mi = this;
                var geolocation = new BMap.Geolocation();
                hosPoint = new BMap.Point(hospitalData.lng,hospitalData.lat);
                geolocation.getCurrentPosition( $scope.getCurrentPointFunction, {enableHighAccuracy: true, racy: 200});
               //加载map至页面
                map = new BMap.Map("l-map", {minZoom: 15});
                map.centerAndZoom(hosPoint, 18); //显示中心
               /* map.addOverlay(new BMap.Marker(hosPoint))
                map.setCenter(hosPoint,16);
                map.enableScrollWheelZoom(); //启用滚轮缩放
                map.enableKeyboard();
                map.enableDragging();
                map.enableDoubleClickZoom()*/
            });
        };
        //获取当前位置信息
        $scope.getCurrentPointFunction = function(r)
        {
            currentPoint =  r.point;
            dis = new BMap.Map().getDistance(currentPoint,hosPoint);
            map.addOverlay(new BMap.Marker(currentPoint))

            if (dis<1000)
            {
                $scope.findByFoot(currentPoint,hosPoint,map);
            }else
            {
                var geocoder = new BMap.Geocoder();
                geocoder.getLocation(hosPoint,function(rs){
                    if (r.address.city!=rs.addressComponents.city)
                    {
                        KyeeMessageService.confirm("提示","您与医院不在同一个城市，是否继续导航？","kyee_framework_message_dialog_ok_button",function(){
                            if (btn=='yes')
                            {
                                $scope.findMore(currentPoint,hosPoint,map);
                            }else
                            {

                            }
                        });
                    }else
                    {
                        $scope.find(currentPoint,hosPoint,map);
                    }
                });
            }
            KyeeMessageService.hideLoading();
        };
        /*公交导航函数*/
        $scope.find=function(point,endpoint,map)
        {
            //BMAP_STATUS_SUCCESS	检索成功。对应数值“0”。
            //BMAP_STATUS_CITY_LIST	城市列表。对应数值“1”。
            //BMAP_STATUS_UNKNOWN_LOCATION	位置结果未知。对应数值“2”。
            //BMAP_STATUS_UNKNOWN_ROUTE	导航结果未知。对应数值“3”。
            //BMAP_STATUS_INVALID_KEY	非法密钥。对应数值“4”。
            //BMAP_STATUS_INVALID_REQUEST	非法请求。对应数值“5”。
            //BMAP_STATUS_PERMISSION_DENIED	没有权限。对应数值“6”。(自 1.1 新增)
            //BMAP_STATUS_SERVICE_UNAVAILABLE	服务不可用。对应数值“7”。(自 1.1 新增)
            //BMAP_STATUS_TIMEOUT	超时。对应数值“8”。(自 1.1 新增)
            var transit = new BMap.TransitRoute(map, {renderOptions: {map: map, panel: "r-result",autoViewport:true},onSearchComplete:function(result){
                if(transit.getStatus()==BMAP_STATUS_SUCCESS)
                {
                }else if (transit.getStatus()==BMAP_STATUS_UNKNOWN_LOCATION)
                {
                    KyeeMessageService.message("提示","位置结果未知");
                }
                else if (transit.getStatus()==BMAP_STATUS_UNKNOWN_ROUTE)
                {
                    //在同一个城市，距离大余1000米，且没有公交结果时，调用步行导航的方式
                    $scope.findByFoot(point,endpoint,map);
                }else if (transit.getStatus()==BMAP_STATUS_INVALID_KEY)
                {
                    KyeeMessageService.message("提示","非法密钥");
                }else if (transit.getStatus()==BMAP_STATUS_INVALID_REQUEST)
                {
                    KyeeMessageService.message("提示","非法请求");
                }else if (transit.getStatus()==BMAP_STATUS_PERMISSION_DENIED)
                {
                    KyeeMessageService.message("提示","没有权限");
                }else if (transit.getStatus()==BMAP_STATUS_SERVICE_UNAVAILABLE)
                {
                    KyeeMessageService.message("提示","服务不可用");
                }else if (transit.getStatus()==BMAP_STATUS_TIMEOUT)
                {
                    KyeeMessageService.message("提示","请求超时");
                }else
                {
                    KyeeMessageService.message("提示","导航失败");
                }
            }});
            transit.search(point, endpoint);
        };
        /*当离目标坐标距离小于1000米时，采用步行导航的方式*/
        $scope.findByFoot=function(point,endpoint,map)
        {
            var walkingRoute = new BMap.WalkingRoute(map, {renderOptions: {map: map, panel: "r-result",autoViewport:true},onSearchComplete:function(result){
                if(walkingRoute.getStatus()!=BMAP_STATUS_SUCCESS)
                {
                  /*  Ext.Msg.alert ("提示","导航失败");
                    KYMH.app.getController('KYMH.controller.navigation.outNavigation').onGoBackBtnTap();*/
                }
            }});
            walkingRoute.search(point, endpoint);
        };
        /*当患者与所选医院不在同一个城市时的导航方式*/
        $scope.findMore=function(point,endpoint,map)
        {
            var transit = new BMap.DrivingRoute(map, {renderOptions: {map: map, panel: "r-result",autoViewport:true},onSearchComplete:function(result){
                if(transit.getStatus()!=BMAP_STATUS_SUCCESS)
                {
                   /* Ext.Msg.alert ("提示","导航失败");
                    KYMH.app.getController('KYMH.controller.navigation.outNavigation').onGoBackBtnTap();*/
                }
            }});
            transit.search(point, endpoint);
        };
        /*附近医院*/
        $scope.onNearByTap=function()
        {
            KyeeMessageService.loading({
                content :  "正在加载，请稍后..." ,
                mask : false
            });
            if(currentPoint==undefined||currentPoint==null||currentPoint=='null'||currentPoint=='')
            {
                this.onGoBackBtnTap();
            }
            var Nmap = new BMap.Map("l-map");
            Nmap.centerAndZoom(currentPoint, 12);
            var local = new BMap.LocalSearch(Nmap, {
                renderOptions:{map: Nmap,panel:"r-result"}
            });
            local.searchInBounds("医院", Nmap.getBounds());
            $scope.isShow = false;
            $scope.Navigate = true;
            KyeeMessageService.hideLoading();
        };
        /*在附近医院界面返回院外导航结果界面*/
        $scope.onShowRouteTap=function()
        {
            $scope.Navigate = false;
            $scope.isShow = true;
            this.showPage();
        };
        $scope.showPage();
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.navigationOut.service")
    .require([])
    .type("service")
    .name("NavigationOutService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function (HttpServiceBus, CacheServiceBus) {

        var def = {
            //获取医院位置
            getHospitalAddress: function (onSuccess) {
                var me = this;
                HttpServiceBus.connect({
                    url: 'area/action/AreaHospitalActionImplC.jspx',
                    params: {
                        hospitalId: CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                        op: "queryHospitalCoordinatesById"
                    },
                    onSuccess: function (data) {
                        var endpoint = new BMap.Point(data.data[0].LONGITUDE, data.data[0].LATITUDE);
                        onSuccess(endpoint);
                    },
                    onError: function () {
                    }
                });
            }
        };
        return def;
    }).build();

/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/5/4
 * 创建原因：已缴费用controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.alreadypayment.controller")
    .require([
        "kyee.quyiyuan.payment.alreadypayment.service",
        "kyee.framework.service.view",
        "kyee.quyiyuan.payment.payeddetail.controller"
    ])
    .type("controller")
    .name("AlreadyPaymentController")
    .params(["$scope", "AlreadyPaymentService", "KyeeViewService", "CacheServiceBus"])
    .action(function($scope, AlreadyPaymentService, KyeeViewService, CacheServiceBus){
        //是否显示“没有已缴费记录”
        $scope.emptyPayedInfo = false;
        //显示“没有已缴费记录”
        var showEmptyPayedInfo = function(){
            $scope.emptyPayedInfo = true;
        }

        //回调方法，设置页面上的数据
        var setPaymentData = function(paymentData){
            $scope.paymentData = paymentData;
        };
        var setDates = function(dates){
            $scope.dates = dates;
        };

        var cache = CacheServiceBus.getMemoryCache();
        var storageCache = CacheServiceBus.getStorageCache();

        //获取数据，在页面上展示
        AlreadyPaymentService.getPaymentData(setPaymentData, setDates, cache, storageCache, showEmptyPayedInfo);

        //时间降序
        $scope.down = function(payedData1, payedData2){
            return (payedData1.PAY_DATE.substring(11, 16) < payedData2.PAY_DATE.substring(11, 16)) ? 1 : -1;
        }

        //打开模态窗口
        $scope.openModal = function(id, template){
            KyeeViewService.openModalFromUrl({
                id : id,
                url : template,
                scope : $scope
            });
        };
        //隐藏模态窗口
        $scope.hideModal = function(id){
            KyeeViewService.hideModal({
                id : id,
                scope : $scope
            });
        }

        $scope.toPaymentDetail = function(payedData){
            //跳转到支付明细页面，将数据存入到AlreadyPaymentService中,以便带入下个页面
            AlreadyPaymentService.payedData = payedData;
            this.openModal("", "modules/business/payment/views/payed_detail.html");
        }
    })
    .build();
/*
 * 创建人: 程铄闵
 * 创建日期:2015年4月29日15:49:00
 * 创建原因：住院费用控制
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientPayment.controller")
    .require(["kyee.quyiyuan.inpatientPayment.service"])
    .type("controller")
    .name("InpatientPaymentController")
    .params(["$scope","InpatientPaymentService",'KyeeMessageService','HttpServiceBus','KyeeUtilsService'])
    .action(function($scope,InpatientPaymentService,KyeeMessageService,HttpServiceBus,KyeeUtilsService){

        //获取医院参数--是否显示剩余金额
        InpatientPaymentService.getRestParam(function(data){
            $scope.restShow = data.SHOW_YE;//1-显示余额；0-不显示余额
        }, HttpServiceBus);

        //页面数据
        InpatientPaymentService.loadData(function(data){

        }, HttpServiceBus,$scope,KyeeUtilsService);

        //单击展开详情
        $scope.clickItem = function(index){
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }
            else{
                $scope.isDisplay = index;
                $scope.firstId = index;//选择的第一级项目id
            }
            debugger;
            $scope.dateData = $scope.billDateData[index].DATE_DATA;
        };

        //点击弹出详情框
        $scope.detailClick = function(indexSec){
            debugger;
            $scope.secondId = indexSec;
            $scope.detailData = $scope.billDateData[$scope.firstId].DATE_DATA[$scope.secondId] //弹出框详细信息
            $scope.detailData.BILLING_DATE_TIME =  KyeeUtilsService.DateUtils.formatFromDate($scope.detailData.BILLING_DATE_TIME,'YYYY/MM/DD');
            KyeeMessageService.message({
                title:'<div class="inpatientPayment-head-cls"><img src="resource/images/payment/more.png"/>' +
                '<span class="head-name">项目花费详情</span>' +
                '<span  class="head-date">'+$scope.detailData.BILLING_DATE_TIME+'</span></div>',
                content:'<div class="inpatientPayment-items-cls">' +
                '<div class="item-cls"><span class="name-cls">项目</span><span class="value-cls">'+$scope.detailData.ITEM_NAME+'</span></div>'+
                '<div class="item-cls"><span class="name-cls">金额</span><span class="amount-cls">'+$scope.detailData.REAL_PAY_FEE+'</span></div>'+
                '<div class="item-cls"><span class="name-cls">规格</span><span class="value-cls">'+$scope.detailData.ITEM_SPEC+'</span></div>'+
                '<div class="item-cls"><span class="name-cls">数量</span><span class="value-cls">'+$scope.detailData.AMOUNT+'</span></div>'+
                '<div class="item-cls"><span class="name-cls">单位</span><span class="value-cls">'+$scope.detailData.UNITS+'</span></div>'+
                '</div>',
                okText:'我知道了'
            })
        };
        //日期格式转换
        $scope.format = function(v,param){
            if(param == 'MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
            else if(param == 'YYYY/MM/DD'){
                if(v != undefined){
                    return KyeeUtilsService.DateUtils. formatFromDate(v,param);
                }
            }
        };
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��10��14:39:01
 * ����ԭ����֧������������
 * �޸��ߣ�
 * �޸�ԭ����
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payOrder.controller")
    .require(["kyee.quyiyuan.payOrder.service"])
    .type("controller")
    .name("PayOrderController")
    .params(["$scope", "$state", "PayOrderService", "KyeeViewService", "CacheServiceBus"])
    .action(function($scope, $state, PayOrderService, KyeeViewService, CacheServiceBus){
        //��ҳ���ݵ�����
        $scope.payData = PayOrderService.payData;
        //�û��ڹҺ�֧��ʱ������������ֻ��֧��Ȥҽ�������ķ���
        if(PayOrderService.IS_OPEN_BALANCE == 'success'){
            $scope.amountuser = true;
        }
        //�ж�ԤԼ���Ƿ�֧��
        if(PayOrderService.payData.APPOINT_SUCCESS_PAY=='1'){
            $scope.checkTimeOut = parseInt(PayOrderService.REMAIN_SECONDS);
        }
        PayOrderService.bindPayType(function(data){

        });
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/5/4
 * 创建原因：已缴详情controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.payeddetail.controller")
    .require([
        "kyee.quyiyuan.payment.alreadypayment.service"
    ])
    .type("controller")
    .name("PayedDetailController")
    .params(["$scope", "AlreadyPaymentService"])
    .action(function($scope, AlreadyPaymentService){
        //从上一页中带入的数据
        $scope.payedData = AlreadyPaymentService.payedData;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:22:00
 * 创建原因：待缴费用控制器
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.controller")
    .require(["kyee.quyiyuan.payment.service", "kyee.quyiyuan.inpatientPayment.controller","kyee.quyiyuan.payOrder.controller","kyee.quyiyuan.payOrder.service"])
    .type("controller")
    .name("PaymentController")
    .params(["$scope", "$state", "PaymentService", "KyeeMessageService", "PayOrderService"])
    .action(function ($scope, $state, PaymentService, KyeeMessageService, PayOrderService) {

        //获取医院参数
        PaymentService.getParam(function (data) {
            //医保参数
            $scope.MedicalPay = data.MedicalPay;
            //是否多选
            $scope.chooseMore = data.chooseMore;
        });


        //获取待缴费数据
        PaymentService.loadData(function (data) {
            $scope.paymentData = PaymentService.dealData(data);
        });

        //刷新
        $scope.doRefresh = function(){
            //获取待缴费数据
            PaymentService.loadData(function (data) {
                $scope.paymentData = PaymentService.dealData(data);
                $scope.$broadcast('scroll.refreshComplete');
            });

        };

        //单选
        $scope.radioChecked = -1;
        //多选
        $scope.checkBoxChecked = [];

        //选中
        $scope.choose = function (index) {
            if ($scope.chooseMore == 0) {
                //单选
                $scope.radioChecked = index;
            } else {
                if ($scope.checkBoxChecked[index]) {
                    //多选
                    $scope.checkBoxChecked[index] = false;
                } else {
                    //多选
                    $scope.checkBoxChecked[index] = true;
                }
            }

        };
        //选中的金额总和
        $scope.totalCount = function () {
            var amount = 0;
            if ($scope.chooseMore == 0) {
                //单选，医保支付可选的情况下才可选中
                if ($scope.radioChecked >= 0 && $scope.payStatus($scope.paymentData.group[$scope.radioChecked])=='0') {
                    amount = parseFloat($scope.paymentData.group[$scope.radioChecked].AMOUNT);
                }
            } else {
                //多选
                for (var i = 0; i < $scope.checkBoxChecked.length; i++) {
                    if ($scope.checkBoxChecked[i]) {
                        amount = amount + parseFloat($scope.paymentData.group[i].AMOUNT);
                    }
                }
            }
            amount = amount.toFixed(2);
            return amount;
        };
        //医保支付
        $scope.Md_pay = function () {
            //切换为医保支付
            PaymentService.Md_pay(function (data) {
                if (data.message == "notBind") {
                    KyeeMessageService.broadcast({
                        content: '请先绑定医保卡！'
                    });
                } else {
                    //刷新数据
                    $scope.doRefresh();
                }
            });
        };
        //个人支付
        $scope.Ps_pay = function () {
            //切换为医保支付
            PaymentService.Ps_pay(function (data) {
                //刷新数据
                $scope.doRefresh();
            });
        };

        //默认医保支付状态
        $scope.payStatus = function (group) {
            if (group.MS_STATUS == '1' && (group.STATUS == '1002' || group.STATUS == '1000' || group.ETL_READ != '1')) {
                //医保支付，并且未划价完成，ETL未回写成功
                return '1';
            } else if (group.MS_STATUS == '1' && group.STATUS == '3000') {
                //医保结算失败
                return '2';
            } else if (group.MS_STATUS == '1' && group.STATUS != '1001') {
                //医保支付，并且已经开始自费或结算
                return '3';
            } else {
                //医保支付可选
                return '0';
            }
        };
        //查询医保支付状态
        $scope.loadPreSettlement = function(serialNo,v_date,p_attr){
            //获取待缴费数据
            PaymentService.loadPreSettlement(function (data) {
                //自费结果
                if(data.data.STATUS == '2000'){     //自费失败
                    KyeeMessageService.broadcast({
                        content: '缴费失败，请重新缴费！'
                    });
                    //缴费/结算失败，还原为预结算完成状态
                    $scope.backToPre(data.data.TRADE_NO);
                }else if(data.data.STATUS == '2002'){     //自费处理中
                    KyeeMessageService.broadcast({
                        content: '您的医保自费部分正在处理，请稍后查询！'
                    });
                }
                //结算结果
                else if(data.data.STATUS == '3000'){
                    //结算失败
                    if(data.data.PATIENT_PAY_AMOUNT=='0'){
                        //结算失败，且无自费部分
                        if(data.data.ERROR_MSG == '' || data.data.ERROR_MSG == undefined){
                            KyeeMessageService.broadcast({
                                content: '结算失败。'
                            });
                        }else{
                            KyeeMessageService.broadcast({
                                content: '结算失败，失败原因：' + data.data.ERROR_MSG
                            });
                        }
                    }else{
                        if(data.data.ERROR_MSG == '' || data.data.ERROR_MSG == undefined){
                            KyeeMessageService.broadcast({
                                content: '结算失败（如果您尚未退费，则不需要支付自费部分金额）。'
                            });
                        }else{
                            KyeeMessageService.broadcast({
                                content: '结算失败，请再次结算（如果您尚未退费，则不需要支付自费部分金额）。失败原因：' + data.data.ERROR_MSG
                            });
                        }
                    }
                    //缴费/结算失败，还原为预结算完成状态
                    $scope.backToPre(data.data.TRADE_NO);
                }else if(data.data.STATUS == '3002' || data.data.STATUS == '6000'
                    || data.data.STATUS == '6001'){
                    KyeeMessageService.broadcast({
                        content: '您的医保结算正在处理，请稍后查询！'
                    });
                }else if(data.data.STATUS == '3001'){     //结算成功
                    KyeeMessageService.broadcast({
                        content: '结算成功。'
                    });
                    //刷新数据
                    $scope.doRefresh();

                }
            },serialNo,v_date,p_attr);
        };
        //缴费/结算失败，还原为预结算完成状态
        $scope.backToPre = function(tradeNo){
            PaymentService.backToPre(function (data) {
                //刷新数据
                $scope.doRefresh();
            },tradeNo);
        };
        //缴费
        $scope.paySubmit = function(){
            PaymentService.PaymentGetOrder(function (data) {
                //刷新数据
                $state.go('payOrder');
            },$scope.chooseMore,$scope.checkBoxChecked,$scope.paymentData,$scope.radioChecked,PayOrderService);

        }
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��6��15:22:00
 * ����ԭ���ҵ��˵���������
 * �޸��ߣ�
 * �޸�ԭ��
 */
new KyeeModule()
    .group("kyee.quyiyuan.paymentMain.controller")
    .require(["kyee.quyiyuan.paymentMain.service","kyee.quyiyuan.payment.controller","kyee.quyiyuan.inpatientPayment.controller","kyee.quyiyuan.payment.alreadypayment.controller","kyee.quyiyuan.payment.prepayed.controller"])
    .type("controller")
    .name("PaymentMainController")
    .params(["$scope","$state","PaymentMainService"])
    .action(function($scope,$state,PaymentMainService){

        //�Ƿ���ʾ�ѽɷ��úʹ��ɷ���ѡ��
        $scope.showOption = 0;
        //��ʾ������
        $scope.showOptionTap = function(){
            $scope.showOption = 1 - $scope.showOption;
        };
        //��ת���ѽɷ���
        $scope.toIsPaid = function(){
            $scope.showOption = 0;
            $state.go("payment.alreadyPayment");
        };
        //��ת��δ�ɷ���
        $scope.toUnPaid = function(){
            $scope.showOption = 0;
            $state.go("payment.payment");
        };
        //�������ѡ���Ĭ��ѡ��
        $scope.isActive = '0';

    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/5/4
 * 创建原因：住院预交controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.prepayed.controller")
    .require([
        "kyee.quyiyuan.payment.prepayed.service",
        "kyee.quyiyuan.payment.prepayedinfo.controller"
    ])
    .type("controller")
    .name("PrePayedController")
    .params(["$scope", "$state", "PrePayedService"])
    .action(function($scope, $state, PrePayedService){
        //用户信息
        $scope.userInfo = PrePayedService.userInfo;
        //跳转到pre_payed_info.html页面
        var afterSubmit = function(){
            $state.go("payment.prePayedInfo");
        };
        //确认
        $scope.submit = function(){
            var hospitalCode = $scope.userInfo.hospitalCode.trim();
            var patientName = $scope.userInfo.patientName.trim();
            PrePayedService.submit(hospitalCode, patientName, afterSubmit);
        };
    })
    .build();
new KyeeModule()
    .group("kyee.quyiyuan.payment.prepayedgo.controller")
    .require([
        "kyee.quyiyuan.payment.prepayedgo.service",
        "kyee.framework.service.view",
        "kyee.quyiyuan.payment.prepayedinfo.service"
    ])
    .type("controller")
    .name("PrePayedGoController")
    .params(["$scope", "PrePayedGoService", "KyeeViewService", "PrePayedInfoService"])
    .action(function($scope, PrePayedGoService, KyeeViewService, PrePayedInfoService){
        //将上一页的预交金额带过来
        $scope.prePayedMoney = "￥" + PrePayedInfoService.prePayedMoney;

        //隐藏模态窗口
        var hideModal = function(){
            KyeeViewService.hideModal({
                scope : $scope
            });
        };
        //后退
        $scope.back = function(){
            hideModal();
        }
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/5/4
 * 创建原因：住院预交信息controller
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.prepayedinfo.controller")
    .require([
        "kyee.framework.service.message",
        "kyee.quyiyuan.payment.prepayedinfo.service",
        "kyee.framework.service.view",
        "kyee.quyiyuan.payment.prepayedgo.controller"
    ])
    .type("controller")
    .name("PrePayedInfoController")
    .params(["$scope", "$state", "PrePayedService", "PrePayedInfoService", "KyeeViewService"])
    .action(function($scope, $state, PrePayedService, PrePayedInfoService, KyeeViewService){
        //回填页面中的支付信息
        $scope.payInfo = PrePayedService.payInfo;
        //对一些特殊格式的支付信息做处理
        if($scope.payInfo.ADMISS_DATE){
            $scope.payInfo.ADMISS_DATE = $scope.payInfo.ADMISS_DATE.substring(0, 10); //入院日期
        }
        $scope.payInfo.DEPO_AMOUNT = "￥" + $scope.payInfo.DEPO_AMOUNT; //已交总金额
        $scope.payInfo.CHARGE_AMOUNT = "￥" + $scope.payInfo.CHARGE_AMOUNT; //消费总金额
        $scope.payInfo.BALANCE = "￥" + $scope.payInfo.BALANCE; //可用余额

        //打开模态窗口
        var openModal = function(template){
            KyeeViewService.openModalFromUrl({
                url : template,
                scope : $scope
            });
        };

        //点击支付按钮后的跳转
        var afterPaySubmit = function(){
            openModal("modules/business/payment/views/pre_payed_go.html");
        };

        //支付
        $scope.paySubmit = function(){
            PrePayedInfoService.paySubmit($scope.payInfo.prePayedMoney, afterPaySubmit);
        }
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/5/4
 * 创建原因：已缴费用service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.alreadypayment.service")
    .require([
        "kyee.framework.service.message"
    ])
    .type("service")
    .name("AlreadyPaymentService")
    .params([
        "HttpServiceBus",
        "KyeeMessageService"
    ])
    .action(function(HttpServiceBus, KyeeMessageService){
        var def = {
            payedData : {},
            //提示信息
            remind : function(title, content, okText){
                KyeeMessageService.message({
                    title : title,
                    content : content,
                    okText : okText
                });
            },
            getPaymentData : function(setPaymentData, setDates, cache, storageCache, showEmptyPayedInfo){
                HttpServiceBus.connect({
                    url : '/payment/action/PaymentActionC.jspx',
                    params : {
                        op : "queryPayHistoryRecs",
                        hospitalID : storageCache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                        opVersion : "1.2.10",
                        operateCurrent_UserId : cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                        USER_VS_ID : cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID
                    },
                    onSuccess : function(retVal){
                        if(retVal){
                            var isSuccess = retVal.success;
                            var message = retVal.message;
                            if(isSuccess){
                                var payInfo = retVal.data.rows;
                                if(payInfo.length > 0){
                                    //按照日期处理数据
                                    var paymentData = def.getFormatDatas(payInfo);  //所有数据
                                    //回调方法，设置页面上的数据
                                    setPaymentData(paymentData.formatDatas);
                                    setDates(paymentData.dates);
                                }else{   //没有已交费用的数据,则显示“没有已缴费信息”
                                    showEmptyPayedInfo();
                                }
                            }else{
                                def.remind("提示信息", "您还没有绑定就诊卡,请先绑定!", "知道了");
                            }
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            getFormatDatas : function(datas){
                var formatDatas = {};   //最终格式化数据
                var dates = [];         //所有的日期数组（精确到天）
                //日期对应的数据，包含总金额和数据（数组）
                for(var datasKey in datas){
                    var data = datas[datasKey];
                    var currentDate = data.PAY_DATE.substring(0, 10);  //截取日期到天
                    if(dates.indexOf(currentDate) == -1){   //不存在当前日期加到数组中，并且设置最终格式化的数据
                        dates.push(currentDate);
                        formatDatas[currentDate] = {
                            totalMoney : data.ACCOUNT_SUM,   //当日的总金额
                            dateVal : [data]            //当日的缴费数据（数组）
                        };
                    } else {                            //存在当前日期则累加日期对应的金额和缴费数据
                        formatDatas[currentDate].totalMoney += data.ACCOUNT_SUM;
                        formatDatas[currentDate].dateVal.push(data);
                    }
                }
                dates.sort(function(a, b){     //日期按降序排序
                    return   (a < b) ? 1 : -1;
                });
                //return formatDatas;
                return {
                    dates : dates,
                    formatDatas : formatDatas
                };
            }
        };
        return def;
    })
    .build();
/*
 * 产品名称：quyiyuan
 * 创建人: 程铄闵
 * 创建日期:2015年4月29日15:49:00
 * 创建原因：住院费用服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.inpatientPayment.service")
    .type("service")
    .name("InpatientPaymentService")
    .action(function () {

        var def = {
            //获取医院参数--是否显示剩余金额
            getRestParam: function (getData, HttpServiceBus) {
                HttpServiceBus.connect({
                    url: "hospitalInform/action/HospitalinforActionC.jspx",
                    /*                    params : {
                     loc : "c",
                     op : "queryInHospitalPatInfo",
                     isLogin : "true",
                     USER_VS_ID:'126774',
                     opVersion : "1.2.10",
                     operateCurrent_UserId:'3862',
                     hospitalID : '1001'
                     },//正式云 */
                    params: {
                        op: "queryHospitalParam",
                        hospitalId: function () {
                            //获取 StorageCache 服务
                            var storageCache = KyeeAppHelper.getSimpleService("kyee.quyiyuan.service_bus.cache", "CacheServiceBus").getStorageCache();
                            var hospitalInfo = storageCache.get("hospitalInfo");
                            if (hospitalInfo != null) {
                                return hospitalInfo.id;
                            }
                            return null;
                        },
                        paramName: 'SHOW_YE'
                    },
                    cache:{
                        by : "TIME",
                        value : 60  //单位：秒
                    },
                    onSuccess: function (data) {
                        if (data != null) {
                            //数据获取成功
                            if (data.success) {
                                getData(data.data);
                            }
                            //数据获取失败
                            else {

                            }
                        }
                        else {

                        }
                    },
                    onError: function () {

                    }
                })
            },
            //加载数据
            loadData: function (getData, HttpServiceBus, $scope,KyeeUtilsService) {
                HttpServiceBus.connect({
                    url: "inHospitalPat/action/InHosPatientFeeActionC.jspx",
                    /*                    params : {
                     loc : "c",
                     op : "queryInHospitalPatInfo",
                     isLogin : "true",
                     USER_VS_ID:'126774',
                     opVersion : "1.2.10",
                     operateCurrent_UserId:'3862',
                     hospitalID : '1001'
                     },//正式云 */
                    params: {
                        op: "queryInHospitalPatInfo",
                        USER_VS_ID: '726'
                    },
                    cache:{
                        by : "TIME",
                        value : 60  //单位：秒
                    },
                    onSuccess: function (data) {
                        //data = {"success":true,"message":"查询成功","resultCode":"0000000","data":[{"PATIENT_ID":"Q150104009","VISIT_ID":"1","INP_NO":"1","PATIENT_NAME":"恋空","ID_NO":"420984199012023038","INHOSPITAL_DATE":"2014-09-30 17:25:08","DEPT_NAME":"创伤骨科四病区","TREAT_DOCTOR":"李士民","SETTLEMENT_DATE":"2014-10-17 23:00:00","FEEITEMINFO":"[{\"PATIENT_ID\":\"Q150104009\",\"VISIT_ID\":1,\"INP_NO\":\"1\",\"ITEM_NO\":\"6\",\"ITEM_NAME\":\"5%葡萄糖注射液\",\"ITEM_CLASS\":\"A\",\"TOTAL_COSTS\":26378.478,\"SHOULD_PAY_FEE\":5600.0,\"REAL_PAY_FEE\":5622.111,\"PREPAID_BALANCE\":27200.0,\"BILLING_DATE_TIME\":\"2014-09-25 01:10:09\",\"PREPAY_MONEY\":0.0,\"ITEM_SPEC\":\"5000ml\",\"AMOUNT\":2.2,\"UNITS\":\"支\"},{\"PATIENT_ID\":\"Q150104009\",\"VISIT_ID\":1,\"INP_NO\":\"1\",\"ITEM_NO\":\"7\",\"ITEM_NAME\":\"桂哌齐特注射液\",\"ITEM_CLASS\":\"A\",\"TOTAL_COSTS\":26378.478,\"SHOULD_PAY_FEE\":5600.0,\"REAL_PAY_FEE\":5622.226,\"PREPAID_BALANCE\":27200.0,\"BILLING_DATE_TIME\":\"2014-09-26 01:10:09\",\"PREPAY_MONEY\":0.0,\"ITEM_SPEC\":\"5000ml\",\"AMOUNT\":2.2,\"UNITS\":\"支\"},{\"PATIENT_ID\":\"Q150104009\",\"VISIT_ID\":1,\"INP_NO\":\"1\",\"ITEM_NO\":\"8\",\"ITEM_NAME\":\"0.9%氯化钠注射液\",\"ITEM_CLASS\":\"A\",\"TOTAL_COSTS\":26378.478,\"SHOULD_PAY_FEE\":5600.0,\"REAL_PAY_FEE\":5622.3,\"PREPAID_BALANCE\":27200.0,\"BILLING_DATE_TIME\":\"2014-09-24 01:10:09\",\"PREPAY_MONEY\":0.0,\"ITEM_SPEC\":\"5000ml\",\"AMOUNT\":2.2,\"UNITS\":\"支\"},{\"PATIENT_ID\":\"Q150104009\",\"VISIT_ID\":1,\"INP_NO\":\"1\",\"ITEM_NO\":\"9\",\"ITEM_NAME\":\"0.9%氯化钠注射液\",\"ITEM_CLASS\":\"A\",\"TOTAL_COSTS\":26378.478,\"SHOULD_PAY_FEE\":5600.0,\"REAL_PAY_FEE\":5622.3,\"PREPAID_BALANCE\":27200.0,\"BILLING_DATE_TIME\":\"2014-09-26 01:10:09\",\"PREPAY_MONEY\":0.0,\"ITEM_SPEC\":\"5000ml\",\"AMOUNT\":2.2,\"UNITS\":\"支\"}]","BILL_DATE_DATA":"[{\"PATIENT_ID\":\"Q150104009\",\"VISIT_ID\":1,\"INP_NO\":\"1\",\"TOTAL_COSTS\":52756.956,\"SHOULD_PAY_FEE\":11200.0,\"REAL_PAY_FEE\":11244.526,\"PREPAID_BALANCE\":54400.0,\"BILLING_DATE_TIME\":\"2014-09-26 00:00:00\",\"PREPAY_MONEY\":65644.52600000001,\"DATE_DATA\":\"[{\\\"PATIENT_ID\\\":\\\"Q150104009\\\",\\\"VISIT_ID\\\":1,\\\"INP_NO\\\":\\\"1\\\",\\\"ITEM_NO\\\":\\\"7\\\",\\\"ITEM_NAME\\\":\\\"桂哌齐特注射液\\\",\\\"ITEM_CLASS\\\":\\\"A\\\",\\\"TOTAL_COSTS\\\":26378.478,\\\"SHOULD_PAY_FEE\\\":5600.0,\\\"REAL_PAY_FEE\\\":5622.226,\\\"PREPAID_BALANCE\\\":27200.0,\\\"BILLING_DATE_TIME\\\":\\\"2014-09-26 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"ITEM_SPEC\\\":\\\"5000ml\\\",\\\"AMOUNT\\\":2.2,\\\"UNITS\\\":\\\"支\\\"},{\\\"PATIENT_ID\\\":\\\"Q150104009\\\",\\\"VISIT_ID\\\":1,\\\"INP_NO\\\":\\\"1\\\",\\\"ITEM_NO\\\":\\\"9\\\",\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"ITEM_CLASS\\\":\\\"A\\\",\\\"TOTAL_COSTS\\\":26378.478,\\\"SHOULD_PAY_FEE\\\":5600.0,\\\"REAL_PAY_FEE\\\":5622.3,\\\"PREPAID_BALANCE\\\":27200.0,\\\"BILLING_DATE_TIME\\\":\\\"2014-09-26 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"ITEM_SPEC\\\":\\\"5000ml\\\",\\\"AMOUNT\\\":2.2,\\\"UNITS\\\":\\\"支\\\"}]\",\"AMOUNT\":0.0},{\"PATIENT_ID\":\"Q150104009\",\"VISIT_ID\":1,\"INP_NO\":\"1\",\"TOTAL_COSTS\":26378.478,\"SHOULD_PAY_FEE\":5600.0,\"REAL_PAY_FEE\":5622.111,\"PREPAID_BALANCE\":27200.0,\"BILLING_DATE_TIME\":\"2014-09-25 00:00:00\",\"PREPAY_MONEY\":32822.111,\"DATE_DATA\":\"[{\\\"PATIENT_ID\\\":\\\"Q150104009\\\",\\\"VISIT_ID\\\":1,\\\"INP_NO\\\":\\\"1\\\",\\\"ITEM_NO\\\":\\\"6\\\",\\\"ITEM_NAME\\\":\\\"5%葡萄糖注射液\\\",\\\"ITEM_CLASS\\\":\\\"A\\\",\\\"TOTAL_COSTS\\\":26378.478,\\\"SHOULD_PAY_FEE\\\":5600.0,\\\"REAL_PAY_FEE\\\":5622.111,\\\"PREPAID_BALANCE\\\":27200.0,\\\"BILLING_DATE_TIME\\\":\\\"2014-09-25 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"ITEM_SPEC\\\":\\\"5000ml\\\",\\\"AMOUNT\\\":2.2,\\\"UNITS\\\":\\\"支\\\"}]\",\"AMOUNT\":0.0},{\"PATIENT_ID\":\"Q150104009\",\"VISIT_ID\":1,\"INP_NO\":\"1\",\"TOTAL_COSTS\":26378.478,\"SHOULD_PAY_FEE\":5600.0,\"REAL_PAY_FEE\":5622.3,\"PREPAID_BALANCE\":27200.0,\"BILLING_DATE_TIME\":\"2014-09-24 00:00:00\",\"PREPAY_MONEY\":32822.3,\"DATE_DATA\":\"[{\\\"PATIENT_ID\\\":\\\"Q150104009\\\",\\\"VISIT_ID\\\":1,\\\"INP_NO\\\":\\\"1\\\",\\\"ITEM_NO\\\":\\\"8\\\",\\\"ITEM_NAME\\\":\\\"0.9%氯化钠注射液\\\",\\\"ITEM_CLASS\\\":\\\"A\\\",\\\"TOTAL_COSTS\\\":26378.478,\\\"SHOULD_PAY_FEE\\\":5600.0,\\\"REAL_PAY_FEE\\\":5622.3,\\\"PREPAID_BALANCE\\\":27200.0,\\\"BILLING_DATE_TIME\\\":\\\"2014-09-24 01:10:09\\\",\\\"PREPAY_MONEY\\\":0.0,\\\"ITEM_SPEC\\\":\\\"5000ml\\\",\\\"AMOUNT\\\":2.2,\\\"UNITS\\\":\\\"支\\\"}]\",\"AMOUNT\":0.0}]","PREPAYMENTS":"20.0","EXPENSE_FEE":"22488.94","REST":"0.00"}]}
                        if (data != null) {
                            //数据获取成功
                            if (data.success) {
                                var inPayment = data.data[0];//第一层数据
                                inPayment.EXPENSE_FEE = '¥ ' + inPayment.EXPENSE_FEE;//当前金额
                                inPayment.PREPAYMENTS = '¥ ' + inPayment.PREPAYMENTS;//预付金额
                                inPayment.REST = '¥ ' + inPayment.REST;//剩余金额
                                var time = inPayment.INHOSPITAL_DATE;//入院日期
                                inPayment.INHOSPITAL_DATE = ' ( ' + KyeeUtilsService.DateUtils.formatFromDate(time,'YYYY/MM/DD') + ' )';
                                $scope.inPaymentData = inPayment; //第一层数据
                                $scope.billDateData = eval($scope.inPaymentData.BILL_DATE_DATA);//第二层数据
                                for (var i = 0; i < $scope.billDateData.length; i++) {
                                    var detailData = new Object();//第三层数据
                                    detailData = eval($scope.billDateData[i].DATE_DATA);
                                    for (var j = 0; j < detailData.length; j++) {
                                        if (detailData[j].ITEM_NAME == undefined) {
                                            detailData[j].ITEM_NAME = '';
                                        }
                                        if (detailData[j].REAL_PAY_FEE == undefined) {
                                            detailData[j].REAL_PAY_FEE = '';
                                        }
                                        else {
                                            detailData[j].REAL_PAY_FEE = '¥ ' + detailData[j].REAL_PAY_FEE;
                                        }
                                        if (detailData[j].ITEM_SPEC == undefined) {
                                            detailData[j].ITEM_SPEC = '';
                                        }
                                        if (detailData[j].AMOUNT == undefined) {
                                            detailData[j].AMOUNT = '';
                                        }
                                        if (detailData[j].UNITS == undefined) {
                                            detailData[j].UNITS = '';
                                        }
                                    }
                                    $scope.billDateData[i].DATE_DATA = new Object();
                                    $scope.billDateData[i].DATE_DATA = detailData;
                                }
                            }
                            //数据获取失败
                            else {
                                KyeeMessageService.broadcast('网络异常，请稍后重试！');
                            }
                        }
                        else {

                        }
                    },
                    onError: function () {

                    }
                })
            }
        };
        return def;
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��6��15:23:23
 * ����ԭ�����ҵ��˵�������
 * �޸��ߣ�
 * �޸�ԭ����
 */
new KyeeModule()
    .group("kyee.quyiyuan.paymentMain.service")
    .type("service")
    .name("PaymentMainService")
    .action(function(){

        var def = {
        };

        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:23:36
 * 创建原因：待缴费用服务
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.service")
    .type("service")
    .name("PaymentService")
    .params([
        "HttpServiceBus",
        "CacheServiceBus"
    ])
    .action(function (HttpServiceBus, CacheServiceBus) {

        var def = {
            cache: CacheServiceBus.getStorageCache(),

            //获取医院参数
            getParam: function (getData) {
                HttpServiceBus.connect({
                    url: "hospitalInform/action/HospitalinforActionC.jspx",
                    params: {
                        hospitalId: this.cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                        paramName: 'chooseMore,MedicalPay',
                        op: "queryHospitalParam"
                    },
                    onSuccess: function (data) {
                        getData(data.data);
                    },
                    onError: function () {
                    }
                })
            },
            //发送请求
            loadData: function (getData) {
                HttpServiceBus.connect({
                    url: "payment/action/PaymentActionC.jspx",
                    params: {
                        hospitalID: this.cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                        USER_VS_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        op: "queryPaymentRecs"
                    },
                    onSuccess: function (data) {
                        getData(data.rows);
                    },
                    onError: function () {
                    }
                })
            },
            //处理数据
            dealData: function (paymentData) {
                var data = paymentData;
                //分组
                var groups = [];
                var groupStrs = [];
                for (var i = 0; i < data.length; i++) {
                    var groupStr = '';
                    groupStr = data[i].VISIT_DATE + '|' + data[i].SERIAL_NO + '|' + data[i].PRESC_ATTR;
                    if (groupStrs.indexOf(groupStr) < 0) {
                        var groupArray = groupStr.split('|');
                        var group = new Object();
                        group.VISIT_DATE = data[i].VISIT_DATE;
                        group.SERIAL_NO = data[i].SERIAL_NO;
                        group.PRESC_ATTR = data[i].PRESC_ATTR;
                        group.ITEM_CLASS = data[i].ITEM_CLASS;
                        group.MS_STATUS = data[i].MS_STATUS;
                        group.STATUS = data[i].STATUS;
                        group.ETL_READ = data[i].ETL_READ;
                        var amount = 0;
                        //计算每组总额
                        for (var j = 0; j < data.length; j++) {
                            if (groupStr == data[j].VISIT_DATE + '|' + data[j].SERIAL_NO + '|' + data[j].PRESC_ATTR) {
                                amount = amount + data[j].COSTS;
                            }
                        }
                        group.AMOUNT = amount.toFixed(2);
                        groupStrs.push(groupStr);
                        groups.push(group);
                    }
                }
                var paymentData = [];
                paymentData.group = groups;
                paymentData.data = data;
                return paymentData;
            },
            //切换为医保支付
            Md_pay: function (getData) {
                HttpServiceBus.connect({
                    url: "medicalSecurity/action/MedicalSecurityActionC.jspx",
                    params: {
                        ID_NO: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).ID_NO,
                        USER_VS_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        IS_MS_SHOW: '1',
                        op: 'switchPayShow',
                        hospitalID: this.cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {
                    }
                })
            },
            //切换为个人支付
            Ps_pay: function (getData) {
                HttpServiceBus.connect({
                    url: "medicalSecurity/action/MedicalSecurityActionC.jspx",
                    params: {
                        ID_NO: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).ID_NO,
                        USER_VS_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        IS_MS_SHOW: '0',
                        op: 'switchPayShow',
                        hospitalID: this.cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {
                    }
                })
            },
            //查询医保支付状态
            loadPreSettlement: function (getData, serialNo, p_attr, v_date) {
                HttpServiceBus.connect({
                    url: "medicalSecurity/action/MedicalSecurityActionC.jspx",
                    params: {
                        SERIAL_NO: serialNo,
                        VISIT_DATE: v_date,
                        PRESC_ATTR: p_attr,
                        HOSPITAL_ID: this.cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                        PATIENT_ID:this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO).PATIENT_ID,
                        ID_NO: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).ID_NO,
                        USER_VS_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        op: 'queryPreSettlementAndSettlementStatus'
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {
                    }
                })
            },
            //缴费/结算失败，还原为预结算完成状态
            backToPre:function(getData,tradeNo){
                HttpServiceBus.connect({
                    url: "medicalSecurity/action/MedicalSecurityActionC.jspx",
                    params: {
                        TRADE_NO:tradeNo,
                        op: 'backToPre'
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {
                    }
                })
            },
            //获取订单
            PaymentGetOrder:function(getData,chooseMore,checkBoxChecked,paymentData,radioChecked,payOrderService){
                var masterTable = {
                    PATIENT_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO).PATIENT_ID,
                    HOSPITAL_ID: this.cache.get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id,
                    USER_VS_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                    USER_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_ID,
                    USER_NAME: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO).PATIENT_NAME,
                    ACCOUNT_FLAG: '0',
                    PAY_FLAG: '0',
                    PAYTYPE_FLAG: '',
                    //    ACCOUNT_SUM: '',
                    ORDER_NO: '',
                    REMARK: ''
                };
                var seriesNos = [];
                var visitDate = [];
                var prescAttr = [];
                //每组明细
                var data = [];
                //分组信息
                var checkedItems = [];

                if(chooseMore=='1' || chooseMore=='2'){
                    for(var i=0; i<checkBoxChecked.length;i++){
                        //选中的
                        if(checkBoxChecked[i]){
                            checkedItems.push(paymentData.group[i]);
                        }
                    }
                }else{
                    checkedItems.push(paymentData.group[radioChecked]);
                }
                for (var i = 0; i < checkedItems.length; i++) {
                    seriesNos.push(checkedItems[i].SERIAL_NO);
                    visitDate.push(checkedItems[i].VISIT_DATE.substr(0,10));
                    prescAttr.push(checkedItems[i].PRESC_ATTR);
                    //每组明细
                    var checkdata=[];
                    var k=0;
                    //为同一组，则将明细写入
                    for(var j=0;j<paymentData.data.length;j++){
                        if(paymentData.data[j].SERIAL_NO==seriesNos[i]
                            && paymentData.data[j].VISIT_DATE.substr(0,10)==visitDate[i]
                            && paymentData.data[j].PRESC_ATTR==prescAttr[i]){
                            checkdata[k] = paymentData.data[j];
                            k++;
                        }
                    }
                    data[i] = checkdata;
                }
                var details = [];
                for (var i = 0; i < data.length; i++) {
                    details.push(
                        {
                            VISIT_DATE: data[i][0].VISIT_DATE,
                            SERIAL_NO: data[i][0].SERIAL_NO,
                            ITEM_CLASS: data[i][0].ITEM_CLASS,
                            PRESC_ATTR: data[i][0].PRESC_ATTR
                        }
                    )
                }
                var mark_detail="";
                var presc_attr="";
                var itemClass ="";
                if(details.length>0){
                    for(var i=0;i<details.length;i++){
                        mark_detail+=details[i].ITEM_NAME+'：'+details[i].ITEM_COSTS+'元，';
                    }
                    presc_attr = details[0].PRESC_ATTR;
                    itemClass=details[0].ITEM_CLASS;
                    mark_detail=mark_detail.substring(0,mark_detail.lastIndexOf('，'));
                }
                HttpServiceBus.connect({
                    url: "payment/action/PaymentActionC.jspx",
                    type: "POST",
                    params: {
                        op: 'getOrderNoForFee',
                        master: JSON.stringify(masterTable),
                        details: JSON.stringify(details),
                        MARK_DESC: masterTable.USER_NAME + '-缴费单',
                        MARK_DETAIL: mark_detail,
                        AMOUNT: masterTable.ACCOUNT_SUM,
                        USER_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_ID,
                        USER_NAME: masterTable.USER_NAME,
                        // begin 医保支付需要参数
                        USER_VS_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        ID_NO: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).ID_NO,
                        PRESC_ATTR: presc_attr,
                        SERIAL_NO: seriesNos[0],
                        VISIT_DATE: visitDate,
                        PATIENT_ID: this.cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CARD_INFO).PATIENT_ID
                        // end  医保支付需要参数
                    },
                    onSuccess: function (data) {
                        //订单编号
                        var tradeNo = data.OUT_TRADE_NO;
                        var total_fee=data.TOTAL_FEE;
                        var desc=data.DESC;
                        //医保支付金额
                        var pPayAmount='';
                        var msAccountPayAmout='';
                        var msPayAmout='';
                        if(data.PATIENT_PAY_AMOUNT!=''&&data.PATIENT_PAY_AMOUNT!=undefined){
                            pPayAmount = parseFloat(data.PATIENT_PAY_AMOUNT);
                        }
                        if(data.MEDICAL_SECURITY_ACCOUNT_PAY_AMOUNT!=''&&data.MEDICAL_SECURITY_ACCOUNT_PAY_AMOUNT!=undefined){
                            msAccountPayAmout = parseFloat(data.MEDICAL_SECURITY_ACCOUNT_PAY_AMOUNT);
                        }
                        if(data.MEDICAL_SECURITY_PAY_AMOUNT!=''&&data.MEDICAL_SECURITY_PAY_AMOUNT!=undefined){
                            msPayAmout = parseFloat(data.MEDICAL_SECURITY_PAY_AMOUNT);
                        }
                        localStorage.TRADE_NO = tradeNo;
                        localStorage.AMOUNT=total_fee;
                        localStorage.MARK_DETAIL=desc;
                        var data = {'MARK_DESC':masterTable.USER_NAME + '-缴费单',
                            'MARK_DETAIL':desc,
                            'AMOUNT':total_fee,
                            'AMOUNT-TEXT':"¥"+total_fee,
                            'PRESC_ATTR':presc_attr,
                            'ITEM_CLASS':itemClass,
                            // begin  医保支付需要参数
                            'SERIAL_NO':seriesNos[0],
                            'VISIT_DATE':visitDate,
                            'TRADE_NO':tradeNo,
                            'PATIENT_PAY_AMOUNT':"¥"+pPayAmount,
                            'MEDICAL_SECURITY_ACCOUNT_PAY_AMOUNT':"¥"+msAccountPayAmout,
                            'MEDICAL_SECURITY_PAY_AMOUNT':"¥"+msPayAmout,
                            'MASTERTABLE': masterTable,
                            'DETAILS': details,
                            'IS_PAID':data.IS_PAID
                            // end  医保支付需要参数
                        };
                        payOrderService.payData = data;
                        getData(data);
                    },
                    onError: function () {
                    }
                })
            }
        };

        return def;
    })
    .build();
new KyeeModule()
    .group("kyee.quyiyuan.payment.prepayedgo.service")
    .require([
        "kyee.framework.service.message",
        "kyee.quyiyuan.payment.prepayed.service"
    ])
    .type("service")
    .name("PrePayedGoService")
    .params([
        "HttpServiceBus",
        "KyeeMessageService",
        "CacheServiceBus",
        "PrePayedService"
    ])
    .action(function(HttpServiceBus, KyeeMessageService, CacheServiceBus, PrePayedService){
        var def = {
            //提示
            remind : PrePayedService.remind
        };
        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/5/4
 * 创建原因：住院预交信息service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.prepayedinfo.service")
    .require([
        "kyee.framework.service.message",
        "kyee.quyiyuan.payment.prepayed.service"
    ])
    .type("service")
    .name("PrePayedInfoService")
    .params([
        "HttpServiceBus",
        "KyeeMessageService",
        "CacheServiceBus",
        "PrePayedService"
    ])
    .action(function(HttpServiceBus, KyeeMessageService, CacheServiceBus, PrePayedService){
        var def = {
            //记录从哪个页面跳转到pre_payed_info.html（“1”：住院业务）
            frontPage : "-1",
            //提示
            remind : PrePayedService.remind,
            //预交金额
            prePayedMoney : "",
            //支付
            paySubmit : function(prePayedMoney, afterPaySubmit){
                if((/^(([1-9]\d*)|\d)(\.\d{1,2})?$/).test(prePayedMoney) && prePayedMoney != "0"){
                    //跳转到去支付
                    afterPaySubmit();
                    //记录预交金额
                    this.prePayedMoney = prePayedMoney;
                }else{
                    this.remind("提示信息", "请输入正确的金额！", "知道了");
                }
            }
        };
        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：田新
 * 创建时间： 2015/5/4
 * 创建原因：住院预交service
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.payment.prepayed.service")
    .require([
        "kyee.framework.service.message"
    ])
    .type("service")
    .name("PrePayedService")
    .params([
        "HttpServiceBus",
        "KyeeMessageService",
        "CacheServiceBus"
    ])
    .action(function(HttpServiceBus, KyeeMessageService, CacheServiceBus){
        var def = {
            //记录从哪个页面跳转到pre_payed.html  （“1”:住院业务）
            frontPage : "-1",
            //支付信息
            payInfo : {},
            //用户信息
            userInfo : {
                hospitalCode : "",
                patientName : ""
            },
            //提示信息
            remind : function(title, content, okText){
                KyeeMessageService.message({
                    title : title,
                    content : content,
                    okText : okText
                });
            },
            //提交
            submit : function(hospitalCode, patientName, afterSubmit){
                if(!this.isEmpty(hospitalCode)){
                    this.remind("提示信息", "住院号不能为空！", "知道了");
                    return;
                }
                if(!this.isEmpty(patientName)){
                    this.remind("提示信息", "姓名不能为空！", "知道了");
                    return;
                }
                var cache = CacheServiceBus.getMemoryCache();
                HttpServiceBus.connect({
                    url : '/PreCharge/action/PreChargeActionC.jspx',
                    params : {
                        op : 'queryHospitalFeeNew',
                        INPATIENT_NO : hospitalCode,
                        PATIENT_NAME : patientName,
                        USER_VS_ID : cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        USER_ID : cache.get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_ID
                    },
                    onSuccess : function(retVal){
                        var success = retVal.success;
                        var message = retVal.message;
                        if(success){
                            var data = retVal.data.rows;
                            if (data && data.length > 0) {
                                //跳转到pre_payed_info.html页面
                                afterSubmit();
                                //将支付信息存储起来，以便带入下个页面
                                def.payInfo = data[0];
                            }else{
                                console.info("请输入111 张三");
                                def.remind("提示信息", "获取信息失败，请重试！", "知道了");
                            }
                        }else{
                            def.remind("提示信息", message, "知道了");
                        }
                    },
                    onError : function(retVal){
                    }
                });
            },
            //非用判断
            isEmpty : function(info){
                if(!info){
                    return false;
                }
                return true;
            }
        };
        return def;
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��10��14:41:28
 * ����ԭ����֧����������
 * �޸��ߣ�
 * �޸�ԭ����
 */
new KyeeModule()
    .group("kyee.quyiyuan.payOrder.service")
    .type("service")
    .name("PayOrderService")
    .params([
        "HttpServiceBus",
        "CacheServiceBus"
    ])
    .action(function (HttpServiceBus, CacheServiceBus) {
        var def = {
            cache: CacheServiceBus.getStorageCache(),
            IS_OPEN_BALANCE: '',
            REMAIN_SECONDS:'',
            payData : undefined,
            bindPayType: function(getData){
                HttpServiceBus.connect({
                url: "payment/action/PaymentActionC.jspx",
                params: {
                    publicServiceType:global.currentUserPublicServerType,
                    userSource:global.currentUserSource,
                    BUSINESSPAYTYPE:0,
                    op: "getPaymentMethod"
                },
                onSuccess: function (data) {
                    if (data.length > 0) {
                        var paytype = [];
                        if(data.data.payStyle != ''){
                            paytype = JSON.parse(data.data.payStyle);
                        }
                        var isRebate = data.data.isRebate;
                        //�Ƿ���Ȥҽ֧����ʽ
                        var quyiPay = false;
                        var quyiPayName = '';
                        if (paytype != null) {
                            if(localStorage.isShow=='1'){
//                                    paytype=paytype+',���Һŷ�';
                                paytype.push({ITEM_VALUE:'6',ITEM_NAME:'���Һŷ�'});
                            }
                            //begin  ����֧����ʽ�б���  By  �½���  KYEEAPPC-1362
                            var payTypeItems='';
                            for (var i = 0; i < paytype.length; i++){
                                //��ȡ֧����ʽͼƬ
                                var payImg = this.payImage(paytype[i].ITEM_VALUE);
                                //�汾���͵����޴�֧����ʽ
                                if(payImg == '0'){
                                    continue;
                                }
                                //ΪȤҽ֧��
                                if(paytype[i].ITEM_VALUE == '8'){
                                    quyiPay = true;
                                    quyiPayName = paytype[i].ITEM_NAME;
                                }
                                //�����п���֧����ʽƴװ����
                                payTypeItems += '<div class="payTypeBar" paytype="'+paytype[i].ITEM_NAME+'" payTypeNo="'+paytype[i].ITEM_VALUE+'" style="min-height: 2.5em;margin-left: 1.5em;border-top: 1px solid #e5e5e5;">'+
                                    payImg+'<img class="checkBox" style="height: 1.2em;right: 10px;position: absolute;margin-top: .6em;" src="resources/images/wxz_14.png"></div>';
                            }
                            this.getPayTypeList().setHtml(payTypeItems);
                            //end  ����֧����ʽ�б���  By  �½���  KYEEAPPC-1362
                            var payTypeBars =  this.getPayTypeList().innerElement.dom.querySelectorAll('.payTypeBar');
                            if(localStorage.isShow=='1'){
                                //begin  ѡ�����Һŷ�  By  �½���  KYEEAPPC-1362
                                for(var i=0;i<payTypeBars.length; i++){
                                    if(payTypeBars[i].getAttribute('payTypeNo') == '6'){
                                        payTypeBars[i].querySelector('.checkBox').setAttribute('src','resources/images/xz_11.png');
                                    }
                                }
                                //end  ѡ�����Һŷ�  By  �½���  KYEEAPPC-1362
                                this.getPayTypeSelect().setValue('���Һŷ�');
                                this.getPayTypeSelect().setId('6');
                            }else{
                                if(paytype.length == 1){    //ֻ��һ��֧����ʽ��Ĭ��ѡ����֧����ʽ
                                    //ѡ��֧����ʽ
                                    for(var i=0;i<payTypeBars.length; i++){
                                        if(payTypeBars[i].getAttribute('payTypeNo') == paytype[0].ITEM_VALUE){
                                            payTypeBars[i].querySelector('.checkBox').setAttribute('src','resources/images/xz_11.png');
                                        }
                                    }
                                    this.getPayTypeSelect().setValue(paytype[0].ITEM_NAME);
                                    this.getPayTypeSelect().setId(paytype[0].ITEM_VALUE);
                                }else if(quyiPay){  //��Ȥҽ֧����Ĭ��ѡ��Ȥҽ֧��
                                    //ѡ��Ȥҽ֧��
                                    for(var i=0;i<payTypeBars.length; i++){
                                        if(payTypeBars[i].getAttribute('payTypeNo') == '8'){
                                            payTypeBars[i].querySelector('.checkBox').setAttribute('src','resources/images/xz_11.png');
                                        }
                                    }
                                    this.getPayTypeSelect().setValue(quyiPayName);
                                    this.getPayTypeSelect().setId('8');
                                }else{      //������ѡ��֧����ʽ
                                    this.getPayTypeSelect().setValue('��ѡ��֧����ʽ');
                                    this.getPayTypeSelect().setId('-1');
                                    this.getPayTypeSelect().addCls('chooseNoPayTypeCls');
                                }
                            }
                        }
                    }
                },
                onError: function () {
                }
            })
            }
        };

        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/26
 * 创建原因：用户排队记录
 * 修改者：
 * 修改原因：
 *
 */

new KyeeModule()
    .group("kyee.quyiyuan.queue.clinic.controller")
    .require([ "kyee.framework.service.view","kyee.quyiyuan.queue.clinic.service"])
    .type("controller")
    .name("QueueClinicController")
    .params(["$scope","$state", "KyeeViewService","QueueClinicService"])
    .action(function($scope ,$state,KyeeViewService,QueueClinicService){//一定要与params中的参数匹配
       //获取数据
        var data=QueueClinicService.myQueueInfo(function(resultData){
            $scope.recorder=resultData;

        });
       /* /!*刷新页面函数*!/
        $scope.doRefresh = function(){

            setTimeout(function(){

                $scope.listData.push({name : "Lucy"});
                $scope.$broadcast('scroll.refreshComplete');
            }, 3000);
        };*/

    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/27
 * 创建原因：
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.queue.dept.info.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.queue.select.dept.service","kyee.quyiyuan.queue.dept.info.service"])
    .type("controller")
    .name("QueueDeptInfoController")
    .params(["$scope","SelectDeptService","QueueDeptInfoService"])
    .action(function($scope,SelectDeptService,QueueDeptInfoService){
        //console.info(SelectDeptService.deptName);

       /*将科室名字传给科室排队信息页面，用于标题栏动态获取所点击的科室名*/
        $scope.deptName=SelectDeptService.deptName;//SelectDeptService也具有传值功能
       // $scope.isShow = false;//默认不显示信息
        var data=QueueDeptInfoService.getDeptInfoData( $scope.deptName,function(resultData){
            $scope.resultDataList= resultData;
        });
        /*刷新页面函数*/
        $scope.doRefresh = function(){

            setTimeout(function(){

                $scope.listData.push({name : "Lucy"});
                $scope.$broadcast('scroll.refreshComplete');
            }, 3000);
        };


    })
    .build();



/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/26
 * 创建原因：
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.queue.select.dept.controller")
    .require([ "kyee.framework.service.view","kyee.quyiyuan.queue.select.dept.service","kyee.quyiyuan.queue.dept.info.controller","kyee.quyiyuan.queue.clinic.controller"])
    .type("controller")
    .name("SelectDeptController")
    .params(["$scope","$state", "KyeeViewService","SelectDeptService"])
    .action(function($scope ,$state,KyeeViewService,SelectDeptService){//一定要与params中的参数匹配
        /*从service获取数据*/
        var data= SelectDeptService.getDeptName("1002",function(resultData){
            $scope.LETTERS=resultData.letters;
            $scope.DEPT_DATA=resultData.resultMap;

            });
       /*通过导航寻找科室叫号信息*/
        $scope.showQueueInfo=function(deptData){
            console.log(deptData);
            SelectDeptService.deptName=deptData.DEPT_NAME;//SelectDeptService进行传值
            $state.go("queue_dept_info->MAIN_TAB");//x

        };
        /*通过导航寻找已预约门诊*/
        $scope.showQueueClinic=function(){
            $state.go("queue_clinic");

        };
        $scope.close = function(){

            KyeeViewService.hideModal({
                scope : $scope
            });
        };
        /*刷新页面函数*/
        $scope.doRefresh = function(){

            setTimeout(function(){

                $scope.listData.push({name : "Lucy"});
                $scope.$broadcast('scroll.refreshComplete');
            }, 3000);
        };
        /*清楚数据函数*/

        $scope.clear = function(){

            $scope.listData = [];
        };
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/28
 * 创建原因：用户排队记录
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.queue.clinic.service")
    .require([])
    .type("service")
    .name("QueueClinicService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){

        var def = {
            /*获取数据的函数*/
           /* myQueueInfo : function(){

                return queue_dept_data;
            }*/
            myQueueInfo:function(onSuccess){
                HttpServiceBus.connect(
                    {
                        url : "/sortquery/action/SortQueryActionC.jspx",
                        params : {
                            loc : "c",
                            op : "getUserQueueList",
                            isLogin : "false",
                            opVersion : "1.2.10",
                            hospitalID:"1001",
                            operateUserSource : "0"
                        },
                        onSuccess:function(data){//回调函数

                            if(data !=null && data !=undefined){
                                console.log(data);
                                var deptTables=data.rows;//后台数据结构是data.rows
                                // console.log(deptTables);
                                var resultData=def.dealDeptData(deptTables);
                                onSuccess(resultData);
                            }else{
                                return "网络异常";
                            }
                        },
                        onError:function(){
                            return "网络异常";
                        }
                    }
                );

            },
            //处理后台返回的科室数据
            dealDeptData:function(deptTables){
                if(deptTables !=null && deptTables !=undefined){
                    var  letters=[];//获取字母数组
                    var resultMap={};//获取字母对应的科室
                    var result={};//返回处理后的数据
                    for(var i=0; i<deptTables.length ;i++){
                        if(resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] == undefined){
                            var list = [];
                            list.push(deptTables[i]);
                            resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] = list;
                            letters.push(deptTables[i].FULL_UPPER_SPELL.substr(0,1));
                        }else{
                            resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)].push(deptTables[i]);
                        }
                    }
                    result["letters"]=letters;
                    result["resultMap"]=resultMap;
                    return result;
                }else{

                    var result={"letters":null,"resultMap":null};
                    //console.log(result);
                    return result;
                }

            }
        };

        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/28
 * 创建原因：
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.queue.dept.info.service")
    .require([])
    .type("service")
    .name("QueueDeptInfoService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){


        var queueDeptInfo = {
                // return queue_dept_info_data.rows;
                //获取门诊排队信息
            getDeptInfoData:function(depName,onSuccess){
                    HttpServiceBus.connect(
                        {
                            url : "/sortquery/action/SortQueryActionC.jspx",
                            params : {

                               /* hospitalId:"1002",*///济宁附院
                                deptCode:depName,
                                op:"getQueueDeptList",
                                loc:"c",
                                isLogin:"false",
                                hospitalID:"1002",
                                opVersion:"1.2.10",
                                operateUserSource:"0"

                            },
                            onSuccess:function(data){//回调函数

                                if(data !=null && data !=undefined){
                                    var deptTables=data.rows;//后台数据结构是data.rows
                                    var resultData=queueDeptInfo.dealDeptData(deptTables);
                                    onSuccess(resultData);
                                }else{
                                    return "网络异常";
                                }
                            },
                            onError:function(){
                                return "网络异常";
                            }
                        }
                    );

                },
                //处理后台返回的科室数据
                dealDeptData:function(deptTables){
                    if(deptTables !=null && deptTables !=undefined){
                       /* var  letters=[];//获取字母数组
                        var resultMap={};//获取字母对应的科室
                        var result={};//返回处理后的数据


                        for(var i=0;i<deptTables.length;i++){


                        }*/

                        return deptTables;

                        //history=eval("(" + deptTables.HIS_LIST + ")");




                    }else{

                        var result={"letters":null,"resultMap":null};
                        //console.log(result);
                        return result;
                    }

                }

        };

        return queueDeptInfo;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：WANGWAN
 * 创建时间：2015/4/26
 * 创建原因：
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.queue.select.dept.service")
    .require([])
    .type("service")
    .name("SelectDeptService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){

        var deptData = {
            //获取排队科室列表
            getDeptName:function(paras,onSuccess){
                HttpServiceBus.connect(
                    {
                        url : "/sortquery/action/SortQueryActionC.jspx",
                        params : {
                            loc : "c",
                            op : "getSortDeptList",
                            isLogin : "false",
                            opVersion : "1.2.10",
                            hospitalID:paras,
                            operateUserSource : "0"
                        },
                        onSuccess:function(data){//回调函数

                            if(data !=null && data !=undefined){
                                console.log(data);
                                var deptTables=data.rows;//后台数据结构是data.rows
                               // console.log(deptTables);
                                var resultData=deptData.dealDeptData(deptTables);
                                onSuccess(resultData);
                            }else{
                                return "网络异常";
                            }
                        },
                        onError:function(){
                            return "网络异常";
                        }
                    }
                );

            },
            //处理后台返回的科室数据
            dealDeptData:function(deptTables){
                if(deptTables !=null && deptTables !=undefined){
                    var  letters=[];//获取字母数组
                    var resultMap={};//获取字母对应的科室
                    var result={};//返回处理后的数据
                    for(var i=0; i<deptTables.length ;i++){
                        if(resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] == undefined){
                            var list = [];
                            list.push(deptTables[i]);
                            resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] = list;
                            letters.push(deptTables[i].FULL_UPPER_SPELL.substr(0,1));
                            letters=letters.sort();
                        }else{
                            resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)].push(deptTables[i]);
                        }
                    }
                    result["letters"]=letters;
                    result["resultMap"]=resultMap;
                    return result;
                }else{

                   var result={"letters":null,"resultMap":null};
                    //console.log(result);
                   return result;
                }

            }
        };

        return deptData;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.editBankCardMsg.controller")
    .require([
        "kyee.quyiyuan.rebate.editBankCardMsg.service",
        "kyee.quyiyuan.rebate.rebateBankBranch.controller",
        "kyee.framework.directive.picker.list_picker"
    ])
    .type("controller")
    .name("EditBankCardMsgController")
    .params(["$scope", "EditBankCardMsgService","$ionicPopover"])
    .action(function($scope, EditBankCardMsgService,$ionicPopover){

        $scope.formMsgs = {
            CARD_NAME:"",
            CARD_NO:"",
            CARD_NO_Q:"",
            BANK_CODE:"",
            BANK_NAME:'',
            BANK_CITY_CODE:"",
            BANK_CITY_NAME:'',
            BANK_PROVINCE_CODE:"",
            BANK_PROVINCE_NAME:'',
            BANK_BRANCH:""
        };
        $scope.selectorType = '';
//绑定事件
        $scope.bind = function(params){
            $scope.show = params.show;
        };

        $scope.selectItem=function(record){
            var type = $scope.selectorType;
            if(type == 'bank'){
                $scope.formMsgs.BANK_CODE = record.item.value;
                $scope.formMsgs.BANK_NAME = record.item.text;
            }else if(type == 'province'){
                $scope.formMsgs.BANK_PROVINCE_CODE = record.item.value;
                $scope.formMsgs.BANK_PROVINCE_NAME = record.item.text;
                EditBankCardMsgService.loadCityStore($scope);
            }else if(type == 'city'){
                $scope.formMsgs.BANK_CITY_CODE = record.item.value;
                $scope.formMsgs.BANK_CITY_NAME = record.item.text;
            }
        };
//调用
        $scope.onSelectorTap=function(type){
            $scope.selectorType = type;
            EditBankCardMsgService.setSelectItems($scope);
        };

        EditBankCardMsgService.initView($scope);

        //$scope.onProvinceChange=function(){
        //    EditBankCardMsgService.loadCityStore($scope);
        //};

        $scope.onBankBranchTap=function(){
            EditBankCardMsgService.onBankBranchTap($scope);
        };

        $scope.onSubmitBtn=function(){
            EditBankCardMsgService.onSubmitBtn($scope);
        };

        $scope.onInputCardNo = function(){
            EditBankCardMsgService.onInputCardNo($scope);
        };
        $scope.onInputCardNoQ = function(){
            EditBankCardMsgService.onInputCardNoQ($scope);
        };
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：我的抵用卷页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.rebate.myCoupons.controller")
    .require(["kyee.quyiyuan.rebate.myCoupons.service"])
    .type("controller")
    .name("MyCouponsController")
    .params(["$scope", "MyCouponsService", "KyeeMessageService"])
    .action(function($scope, MyCouponsService, KyeeMessageService){

        /**
         * 查询抵用券兑换记录
         */
        MyCouponsService.queryCouponsExchangeRecord(function (data) {
            $scope.COUPONS_DESC = data.COUPONS_DESC;
            if($scope.COUPONS_DESC){
                $scope.showRule = true;
            } else {
                $scope.showRule = false;
            }
            $scope.items = data.RECORD_DATA;
        });

        /**
         * 抵用券兑换点击按钮函数
         * @param coupons
         */
        $scope.exchangeCoupons = function (coupons) {
            // 判空操作
            if(coupons == undefined || coupons.trim() == ""){
                KyeeMessageService.message({
                    content: "请先输入抵用券号！"
                });
                return;
            }

            // 兑换抵用券操作
            MyCouponsService.exchangeCoupons(coupons, function (data) {
                if(data.success){
                    KyeeMessageService.message({
                        title: "温馨提示",
                        content: data.message,
                        okText: "我知道了"
                    });
                } else {
                    if(data !=null && data.resultCode=='0045102'){
                        KyeeMessageService.message({
                            title: "提示",
                            content: data.message
                        });
                    } else {
                        KyeeMessageService.message({
                            title: "提示",
                            content: "网络异常，请稍后重试！"
                        });
                    }

                }
            });
        };
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateBankAdd.controller")
    .require([
        "kyee.quyiyuan.rebate.editBankCardMsg.controller",
        "kyee.quyiyuan.rebate.rebateBankAdd.service"
    ])
    .type("controller")
    .name("RebateBankAddController")
    .params(["$scope","RebateBankAddService","$state"])
    .action(function($scope,RebateBankAddService,$state){

        RebateBankAddService.initView($scope);

        $scope.doShowEditBankCardMsg = function(){
            $state.go('editBankCardMsg');
        };
        $scope.onBankCardListTap = function(record){
            RebateBankAddService.onBankCardListTap(record);
        };
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateBankBranch.controller")
    .require([
        "kyee.quyiyuan.rebate.rebateBankBranch.service",
        "kyee.quyiyuan.rebate.editBankCardMsg.service"
    ])
    .type("controller")
    .name("RebateBankBranchController")
    .params(["$scope","RebateBankBranchService","EditBankCardMsgService"])
    .action(function($scope,RebateBankBranchService,EditBankCardMsgService){
        var pageData = EditBankCardMsgService.getPagedata();
        RebateBankBranchService.initView(pageData,function(result){
            $scope.result = result;
        });

        $scope.inputData={
            bankSearch:''
        };

        $scope.onBranchListTap = function(record){
            RebateBankBranchService.onBranchListTap(record);
        }
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateBank.controller")
    .require([
        "kyee.quyiyuan.rebate.rebateBank.service",
        "kyee.quyiyuan.rebate.rebateBankAdd.controller"
    ])
    .type("controller")
    .name("RebateBankController")
    .params(["$scope","RebateBankService"])
    .action(function($scope,RebateBankService){
        $scope.inputVal = {
            AMOUNT:""
        };
        $scope.BankCardInfo = {
            //isShowBankInfo:false,
            bankName:'',
            cardId:'',
            bankNo:''
        };
        RebateBankService.initView($scope);
        //确定按钮
        $scope.onSubmitBtn = function(){
            RebateBankService.onSubmitBtn($scope.inputVal.inputMoney);
        };
        $scope.doShowRebateBankAdd = function(){
            RebateBankService.doShowRebateBankAdd();
        };
        $scope.onInputAmount = function(amount){
            $scope.inputVal.AMOUNT = RebateBankService.onInputAmount(amount,$scope);
        };
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.controller")
    .require([
        "kyee.quyiyuan.rebateDetail.controller",
        "kyee.quyiyuan.rebate.myCoupons.controller",
        "kyee.quyiyuan.rebate.service",
        "kyee.quyiyuan.rebate.rebateBank.controller",
        "kyee.quyiyuan.rebateDetailIn.controller",
        "kyee.quyiyuan.rebateDetailOut.controller"
    ])
    .type("controller")
    .name("RebateController")
    .params(["$scope","RebateService"])
    .action(function($scope,RebateService){

        //页面初始化
        RebateService.initView($scope);

        //提交按钮点击
        $scope.onSubmitReturnBtn=function(){
            RebateService.onSubmitReturnBtn($scope.RebateData.PERSONALAMOUNTGET);
        };
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebateDetail.controller")
    .type("controller")
    .name("RebateDetailController")
    .params(["$scope","$state","$rootScope"])
    .action(function($scope,$state,$rootScope){
        $scope.activeButtonIndex=0;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebateDetailIn.controller")
    .require([
        "kyee.quyiyuan.rebate.rebateDetailIn.service"
    ])
    .type("controller")
    .name("RebateDetailInController")
    .params(["$scope","RebateDetailInService"])
    .action(function($scope,RebateDetailInService){
        RebateDetailInService.initView(function(result){
            $scope.result = result;
        });
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebateDetailOut.controller")
    .require([
        "kyee.quyiyuan.rebate.rebateDetailOut.service",
        "kyee.framework.service.message"
    ])
    .type("controller")
    .name("RebateDetailOutController")
    .params(["$scope","RebateDetailOutService"])
    .action(function($scope,RebateDetailOutService){
        RebateDetailOutService.initView(function(result){
            $scope.result = result;
        });
        $scope.onShowErrorMsg=function(i){
            $scope.result[i].IS_SHOW_ERR_MSG =  !$scope.result[i].IS_SHOW_ERR_MSG;//每次点击，显示、隐藏交替显示
        };
        $scope.onShowCommentMsg=function(i){
            RebateDetailOutService.onShowCommentMsg(i,$scope);
        };
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.editBankCardMsg.service")
    .require([
        "kyee.quyiyuan.service_bus.http",
        "kyee.framework.service.message",
        "kyee.quyiyuan.rebate.rebateBank.service"
    ])
    .type("service")
    .name("EditBankCardMsgService")
    .params(["HttpServiceBus","KyeeMessageService","$state",'RebateBankService','$ionicHistory'])
    .action(function(HttpServiceBus,KyeeMessageService,$state,RebateBankService,$ionicHistory){

        var def = {
            //bankCode:undefined,//选择银行编号
            //cityCode:undefined,//选择城市编号
            //provinceCode:undefined,//选择省份编号
            //writeCityFlag:undefined,//城市填写标记
            pagedata:{},
            getPagedata:function(){
                return this.pagedata;
            },
            scope:null,
            initView:function($scope){
            //    bankCode = undefined;
            //    cityCode = undefined;
            //    provinceCode = undefined;
            //    var lastClassName = '';
            //    if(lastClassName == 'KYMH.view.center.RebateBankBranch'){//zwhtemp
            //    //if(global.lastClassName == 'KYMH.view.center.RebateBankBranch'){
            //    //    var data = me.config.pagedata;
            //        var data = undefined;//zwhtemp
            //        if(data != undefined){
            //            this.getBranchSd().setValue(data.BANK_BRANCH_NAME);
            //            this.getCardtype().setValue(data.CARD_TYPE);
            //            this.getCitySd().setValue(data.CITY);
            //            this.getProvinceSd().setValue(data.PROVINCE);
            //            this.getCardname().setValue(data.CARD_NAME);
            //            this.getCardno().setValue(data.CARD_NO);
            //            this.getCardnoQ().setValue(data.CARD_NO_Q);
            //            this.bankCode = data.BANK_CODE;
            //            var store = Ext.getStore('rebateBankCity');
            //            var records = store.getData().all;
            //            if(records.length > 0){
            //                var rec = Ext.Array.pluck(records,'data');
            //                this.getCitySd().setOptions(rec);
            //            }
            //        }
            //    }
            //    else{
            //        this.loadData();
            //    }
                this.scope = $scope;
                this.loadCardStore($scope);
                this.loadProvinceStore($scope);
            },
            revertView:function(pagedata){
                this.pagedata=pagedata;
                this.scope.formMsgs.BANK_BRANCH = this.pagedata.BANK_BRANCH_NAME;
            },
            loadCardStore:function($scope){
                //if(store.isLoaded()){
                //    var data = Ext.getStore('rebateBankList').getData().all;
                //    var rec = Ext.Array.pluck(data,'data');
                //    this.getCardtype().setOptions(rec);
                //    return;
                //}
                HttpServiceBus.connect({
                    url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op:'getBankTypeInfo',
                        loc:'c'
                    },
                    onSuccess: function (records) {
                        if(records.length > 0){
                            $scope.bankType = records;
                        }
                        //else {
                        //    Ext.Msg.alert('系统提示','当前网络不给力，请稍后重试！',function(buttonId){
                        //        this.onGoBackBtnTap();
                        //    },this);
                        //}
                    }
                });
            },
            loadProvinceStore:function($scope){
                //if(store.isLoaded()){
                //    var data = Ext.getStore('rebateBankProvince').getData().all;
                //    var rec = Ext.Array.pluck(data,'data');
                //    this.getProvinceSd().setOptions(rec);
                //    return;
                //}
                HttpServiceBus.connect({
                    url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op:'getBankArea',
                        loc:'c'
                    },
                    onSuccess: function (records) {
                        if(records.length > 0){
                            $scope.bankArea = records;
                        }

                        //else {
                        //    Ext.Msg.alert('系统提示','当前网络不给力，请稍后重试！',function(buttonId){
                        //        this.onGoBackBtnTap();
                        //    },this);
                        //}
                    }
                });
            },
            setSelectItems:function($scope){
                var type = $scope.selectorType;
                if(type == 'bank'){
                    $scope.selectItems = [];
                    for(var i=0;i<$scope.bankType.length;i++){
                        var obj={
                            text:$scope.bankType[i].BANK_NAME,
                            value:$scope.bankType[i].BANK_CODE
                        };
                        $scope.selectItems.push(obj);
                    }
                }else if(type == 'province'){
                    $scope.selectItems = [];
                    for(var i=0;i<$scope.bankArea.length;i++){
                        var obj={
                            text:$scope.bankArea[i].BANK_PROVINCE_NAME,
                            value:$scope.bankArea[i].BANK_PROVINCE_CODE
                        };
                        $scope.selectItems.push(obj);
                    }
                }else if(type == 'city'){
                    if($scope.formMsgs.BANK_PROVINCE_NAME == '' ){
                        KyeeMessageService.message({
                            title:'温馨提示',
                            content:'请先选择省份！'
                        });
                        return ;
                    }
                    var writeFlag = 1;//填写省份信息
                    for(var i=0;i<$scope.bankArea.length;i++){
                        if($scope.bankArea[i].BANK_PROVINCE_NAME == $scope.formMsgs.BANK_PROVINCE_NAME){
                            writeFlag = 0;//选择省份信息
                        }
                    }
                    if(writeFlag == 1){
                        KyeeMessageService.message({
                            title:'温馨提示',
                            content:'请填写相应的城市信息！'
                        });
                        return;
                    }
                    $scope.selectItems = [];
                    for(var i=0;i<$scope.bankCity.length;i++){
                        var obj={
                            text:$scope.bankCity[i].BANK_CITY_NAME,
                            value:$scope.bankCity[i].BANK_CITY_CODE
                        };
                        $scope.selectItems.push(obj);
                    }
                }
                $scope.show();
            },
            //onProvinceChange:function($scope){
            //    this.loadCityStore($scope);
            //},

            loadCityStore:function($scope){
                HttpServiceBus.connect({
                    url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op:'getBankAreaCity',
                        loc:'c',
                        BANK_PROVINCE_CODE:$scope.formMsgs.BANK_PROVINCE_CODE
                    },
                    onSuccess: function (records) {
                        if(records.length > 0){
                            $scope.bankCity = records;
                        }
                        //else {
                        //    Ext.Msg.alert('系统提示','当前网络不给力，请稍后重试！',function(buttonId){
                        //        this.onGoBackBtnTap();
                        //    },this);
                        //}
                    }
                });
            },

            onBankBranchTap:function($scope){
                var bankCode = $scope.formMsgs.BANK_CODE;
                var cityCode = $scope.formMsgs.BANK_CITY_CODE;
                if(bankCode == undefined || bankCode == ''){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'请先选择银行卡！'
                    });
                    return;
                }
                if(cityCode == undefined || cityCode == ''){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'请先选择银行卡所属城市！'
                    });
                    return;
                }
                this.doShowBankBranchView($scope.formMsgs);
            },

            doShowBankBranchView:function(formMsgs){
                this.pagedata = formMsgs;
                $state.go('rebateBankBranch')
            },

            onSubmitBtn:function($scope){
                var reg=new RegExp(" ","g"); //创建正则RegExp对象
                var cardno=$scope.formMsgs.CARD_NO.trim().replace(reg,"");//银行卡号
                var cardYes =  this.luhmCheck($scope.formMsgs.CARD_NO.trim().replace(eval("/"+' '+"/gi"),''));
                var cardQno=$scope.formMsgs.CARD_NO_Q.trim().replace(reg,"");//确认银行卡号
                var cardQYes =  this.luhmCheck($scope.formMsgs.CARD_NO_Q.trim().replace(eval("/"+' '+"/gi"),''));
                if(!cardYes || !cardQYes){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'银行卡号不正确'
                    });
                    return;
                }
                if(cardno!=cardQno){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'两次输入的银行卡号不一致，请重新输入！'
                    });
                    return;
                }
                var cardname=$scope.formMsgs.CARD_NAME.trim();//用户姓名
                var cardtype=$scope.formMsgs.BANK_NAME.trim();//卡类型
                if(cardtype == '' || cardtype == undefined){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'请选择或输入银行卡类型！'
                    });
                    return;
                }
                if(cardno==''||cardno==null||cardname==''||cardname==null||cardtype==''||cardtype==null){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'信息不能为空！'
                    });
                    return;
                }
                var city = $scope.formMsgs.BANK_CITY_NAME;
                var prov = $scope.formMsgs.BANK_PROVINCE_NAME;
                if( city == null || prov== null ||city==''|| prov == ''){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'请选择或输入省份和城市！'
                    });
                    return;
                }
                if(prov==''||prov==undefined||prov==null){
                    KyeeMessageService.message({
                        title:'温馨提示',
                        content:'请选择银行卡开户所在地'
                    });
                    return;
                }
                var bankBelong;
                if(prov=='北京市'||prov=='上海市'||prov=='天津市'||prov=='重庆市'||prov=='香港'||prov=='澳门'){
                    bankBelong=prov;
                }else{
                    bankBelong=prov+city;
                }
                var bankBranche=$scope.formMsgs.BANK_BRANCH;
                if($scope.formMsgs.BANK_CODE != '500'){
                    if(bankBranche==''||bankBranche==null){
                        KyeeMessageService.message({
                            title:'温馨提示',
                            content:'所属分行不能为空'
                        });
                        return;
                    }
                }
                HttpServiceBus.connect({
                    url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op:'saveUserBankMsg',
                        loc:'c',
                        USER_ID:'794184',
                        BANK_OWNER:cardname,
                        BANK_CARD_TYPE:cardtype,
                        BANK_CARD_NO:cardno,
                        BANK_BELONG:bankBelong,
                        BANK_BRANCHE:bankBranche
                    },
                    onSuccess: function (records) {
                            var len = cardno.length;
                            var cardNum = "尾号"+cardno.substr(len-4, len);
                            var cardInfo = {BANK_NAME:cardtype,BANK_CARD_NO:cardno,BANK_CARD_TYPE_F:cardNum};
                            KyeeMessageService.message({
                                title:'温馨提示',
                                content:'银行卡绑定成功'
                            });
                            RebateBankService.setLastView('EditRebateBankMsg');
                            RebateBankService.setPagedata(cardInfo);
                            $ionicHistory.goBack(-2);
                            //this.createViewToViewportConfig('KYMH.view.center.RebateBank',cardInfo);
                        }
                    //else{
                    //        try {
                    //            var result = operation.getResponse().responseText;
                    //            var resultModel = Ext.JSON.decode(result);
                    //            if(resultModel.message!='绑定失败！'){
                    //                Ext.Msg.alert('提示', '系统异常！');
                    //            }else{
                    //                Ext.Msg.alert('提示', resultModel.data);
                    //            }
                    //        }
                    //        catch (e) {
                    //            Ext.Msg.alert('提示', '绑定失败！');
                    //        }
                    //    }
                    //}
                });
            },
            luhmCheck:function (bankno){
                if (bankno.length < 16 || bankno.length > 19) {
                    //$("#banknoInfo").html("银行卡号长度必须在16到19之间");
                    //        Ext.Msg.alert("温馨提示","银行卡号不规范");
                    return false;
                }
                var num = /^\d*$/;  //全数字
                if (!num.exec(bankno)) {
                    //$("#banknoInfo").html("银行卡号必须全为数字");
                    //          Ext.Msg.alert("温馨提示","银行卡号不规范");
                    return false;
                }
                //开头6位
                var strBin="10,18,30,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,65,68,69,84,87,88,94,95,98,99";
                if (strBin.indexOf(bankno.substring(0, 2))== -1) {
                    //$("#banknoInfo").html("银行卡号开头6位不符合规范");
                    return false;
                }
                var lastNum=bankno.substr(bankno.length-1,1);//取出最后一位（与luhm进行比较）

                var first15Num=bankno.substr(0,bankno.length-1);//前15或18位
                var newArr=new Array();
                for(var i=first15Num.length-1;i>-1;i--){    //前15或18位倒序存进数组
                    newArr.push(first15Num.substr(i,1));
                }
                var arrJiShu=new Array();  //奇数位*2的积 <9
                var arrJiShu2=new Array(); //奇数位*2的积 >9

                var arrOuShu=new Array();  //偶数位数组
                for(var j=0;j<newArr.length;j++){
                    if((j+1)%2==1){//奇数位
                        if(parseInt(newArr[j])*2<9)
                            arrJiShu.push(parseInt(newArr[j])*2);
                        else
                            arrJiShu2.push(parseInt(newArr[j])*2);
                    }
                    else //偶数位
                        arrOuShu.push(newArr[j]);
                }

                var jishu_child1=new Array();//奇数位*2 >9 的分割之后的数组个位数
                var jishu_child2=new Array();//奇数位*2 >9 的分割之后的数组十位数
                for(var h=0;h<arrJiShu2.length;h++){
                    jishu_child1.push(parseInt(arrJiShu2[h])%10);
                    jishu_child2.push(parseInt(arrJiShu2[h])/10);
                }

                var sumJiShu=0; //奇数位*2 < 9 的数组之和
                var sumOuShu=0; //偶数位数组之和
                var sumJiShuChild1=0; //奇数位*2 >9 的分割之后的数组个位数之和
                var sumJiShuChild2=0; //奇数位*2 >9 的分割之后的数组十位数之和
                var sumTotal=0;
                for(var m=0;m<arrJiShu.length;m++){
                    sumJiShu=sumJiShu+parseInt(arrJiShu[m]);
                }

                for(var n=0;n<arrOuShu.length;n++){
                    sumOuShu=sumOuShu+parseInt(arrOuShu[n]);
                }

                for(var p=0;p<jishu_child1.length;p++){
                    sumJiShuChild1=sumJiShuChild1+parseInt(jishu_child1[p]);
                    sumJiShuChild2=sumJiShuChild2+parseInt(jishu_child2[p]);
                }
                //计算总和
                sumTotal=parseInt(sumJiShu)+parseInt(sumOuShu)+parseInt(sumJiShuChild1)+parseInt(sumJiShuChild2);

                //计算Luhm值
                var k= parseInt(sumTotal)%10==0?10:parseInt(sumTotal)%10;
                var luhm= 10-k;

                if(lastNum==luhm){
                    return true;
                }else{
                    return false;
                }
            },
            onInputCardNo:function($scope){
                $scope.formMsgs.CARD_NO =$scope.formMsgs.CARD_NO.replace(/\s/g,'').replace(/(\d{4})(?=\d)/g,"$1 ");

                var reg=new RegExp(" ","g"); //创建正则RegExp对象
                var cardno=$scope.formMsgs.CARD_NO.trim().replace(reg,"");//银行卡号
                if(cardno.length==6)
                {
                    $scope.formMsgs.BANK_CODE= this.getNameOfBank(cardno, 0);//获取银行卡的信息
                }
                this.luhmCheck($scope.formMsgs.CARD_NO.trim().replace(eval("/"+' '+"/gi"),''));
            },
            onInputCardNoQ:function($scope){
                $scope.formMsgs.CARD_NO_Q =$scope.formMsgs.CARD_NO_Q.replace(/\s/g,'').replace(/(\d{4})(?=\d)/g,"$1 ");

                var reg=new RegExp(" ","g"); //创建正则RegExp对象
                var cardno=$scope.formMsgs.CARD_NO_Q.trim().replace(reg,"");//银行卡号
                if(cardno.length==6){
                    $scope.formMsgs.BANK_NAME = this.getNameOfBank(cardno, 0);//获取银行卡的信息;
                }
                this.luhmCheck($scope.formMsgs.CARD_NO_Q.trim().replace(eval("/"+' '+"/gi"),''));
            },
            bankBin : [
                102033,
                103000,
                185720,
                303781,
                356827,
                356828,
                356833,
                356835,
                356837,
                356838,
                356839,
                356840,
                356885,
                356886,
                356887,
                356888,
                356889,
                356890,
                370246,
                370247,
                370248,
                370249,
                400360,
                400937,
                400938,
                400939,
                400940,
                400941,
                400942,
                402658,
                402673,
                402791,
                403361,
                403391,
                404117,
                404157,
                404171,
                404172,
                404173,
                404174,
                404738,
                404739,
                405512,
                405512,
                406252,
                406254,
                406365,
                407405,
                409665,
                409666,
                409667,
                409668,
                409669,
                409670,
                409671,
                409672,
                410062,
                412962,
                412963,
                415599,
                421317,
                421349,
                421393,
                421437,
                421865,
                421869,
                421870,
                421871,
                422160,
                422161,
                424106,
                424107,
                424108,
                424109,
                424110,
                424111,
                424902,
                425862,
                427010,
                427018,
                427019,
                427020,
                427028,
                427029,
                427038,
                427039,
                427062,
                427064,
                427571,
                428911,
                431502,
                431502,
                433666,
                433670,
                433680,
                434061,
                434062,
                435744,
                435745,
                436718,
                436728,
                436738,
                436742,
                436745,
                436748,
                436768,
                438088,
                438125,
                438126,
                438588,
                438589,
                438600,
                439188,
                439225,
                439227,
                442729,
                442730,
                451289,
                451291,
                451804,
                451804,
                451810,
                451810,
                453242,
                456351,
                456418,
                458060,
                458060,
                458071,
                458071,
                458123,
                458124,
                468203,
                472067,
                472068,
                479228,
                479229,
                481699,
                486466,
                486493,
                486494,
                486497,
                487013,
                489592,
                489734,
                489735,
                489736,
                491020,
                491020,
                491031,
                491032,
                491040,
                493427,
                493878,
                498451,
                504923,
                510529,
                512315,
                512316,
                512411,
                512412,
                512425,
                512431,
                512466,
                512695,
                512732,
                514906,
                514957,
                514958,
                517636,
                518212,
                518364,
                518378,
                518379,
                518474,
                518475,
                518476,
                518710,
                518718,
                519412,
                519498,
                520082,
                520108,
                520131,
                520152,
                520169,
                520194,
                520382,
                521899,
                522153,
                523036,
                524011,
                524047,
                524070,
                524091,
                524094,
                524864,
                524865,
                525498,
                525745,
                525746,
                526410,
                526855,
                527414,
                528020,
                528931,
                528948,
                530970,
                530980,
                530980,
                530990,
                532420,
                532430,
                532450,
                532458,
                535910,
                535910,
                535918,
                537830,
                540297,
                540838,
                541068,
                541709,
                543159,
                544033,
                545619,
                545623,
                545947,
                547628,
                547648,
                547766,
                547766,
                548259,
                548844,
                552245,
                552288,
                552534,
                552587,
                552599,
                552742,
                552794,
                552801,
                552853,
                553131,
                553242,
                556610,
                556617,
                558360,
                558730,
                558808,
                558809,
                558868,
                558868,
                558894,
                558895,
                558916,
                566666,
                584016,
                601100,
                601101,
                601121,
                601122,
                601123,
                601124,
                601125,
                601126,
                601127,
                601128,
                601131,
                601136,
                601137,
                601138,
                601140,
                601142,
                601143,
                601144,
                601145,
                601146,
                601147,
                601148,
                601149,
                601174,
                601177,
                601178,
                601179,
                601186,
                601187,
                601188,
                601189,
                601382,
                601382,
                601428,
                601428,
                601428,
                601428,
                602907,
                602907,
                602969,
                602969,
                603128,
                603128,
                603367,
                603367,
                603445,
                603445,
                603506,
                603506,
                603601,
                603601,
                603601,
                603601,
                603601,
                603601,
                603602,
                603602,
                603694,
                603694,
                603708,
                603708,
                621021,
                621098,
                621201,
                621599,
                621785,
                621977,
                621977,
                622126,
                622126,
                622127,
                622127,
                622127,
                622127,
                622128,
                622128,
                622129,
                622129,
                622131,
                622131,
                622132,
                622132,
                622133,
                622133,
                622134,
                622134,
                622135,
                622135,
                622136,
                622136,
                622137,
                622137,
                622138,
                622138,
                622139,
                622139,
                622140,
                622140,
                622141,
                622141,
                622143,
                622143,
                622146,
                622146,
                622147,
                622147,
                622148,
                622148,
                622149,
                622149,
                622150,
                622150,
                622151,
                622151,
                622152,
                622152,
                622153,
                622153,
                622154,
                622154,
                622155,
                622155,
                622156,
                622156,
                622165,
                622165,
                622166,
                622166,
                622168,
                622168,
                622169,
                622169,
                622178,
                622178,
                622179,
                622179,
                622184,
                622184,
                622188,
                622188,
                622199,
                622199,
                622200,
                622200,
                622202,
                622202,
                622203,
                622203,
                622208,
                622208,
                622210,
                622210,
                622211,
                622211,
                622212,
                622212,
                622213,
                622213,
                622214,
                622214,
                622215,
                622215,
                622220,
                622220,
                622225,
                622225,
                622230,
                622230,
                622235,
                622235,
                622240,
                622240,
                622245,
                622245,
                622250,
                622250,
                622251,
                622251,
                622252,
                622252,
                622253,
                622253,
                622254,
                622254,
                622258,
                622258,
                622259,
                622259,
                622260,
                622260,
                622261,
                622261,
                622280,
                622280,
                622291,
                622291,
                622292,
                622292,
                622301,
                622301,
                622302,
                622302,
                622303,
                622303,
                622305,
                622305,
                622307,
                622307,
                622308,
                622308,
                622310,
                622310,
                622311,
                622311,
                622312,
                622312,
                622316,
                622316,
                622318,
                622318,
                622319,
                622319,
                622321,
                622321,
                622322,
                622322,
                622323,
                622323,
                622324,
                622324,
                622325,
                622325,
                622327,
                622327,
                622328,
                622328,
                622329,
                622329,
                622331,
                622331,
                622332,
                622332,
                622333,
                622333,
                622335,
                622335,
                622336,
                622336,
                622337,
                622337,
                622338,
                622338,
                622339,
                622339,
                622340,
                622340,
                622341,
                622341,
                622342,
                622342,
                622343,
                622343,
                622345,
                622345,
                622346,
                622346,
                622347,
                622347,
                622348,
                622348,
                622349,
                622349,
                622350,
                622350,
                622351,
                622351,
                622352,
                622352,
                622353,
                622353,
                622355,
                622355,
                622358,
                622358,
                622359,
                622359,
                622360,
                622360,
                622361,
                622361,
                622362,
                622362,
                622363,
                622363,
                622365,
                622365,
                622366,
                622366,
                622367,
                622367,
                622368,
                622368,
                622369,
                622369,
                622370,
                622370,
                622371,
                622371,
                622373,
                622373,
                622375,
                622375,
                622376,
                622376,
                622377,
                622377,
                622378,
                622378,
                622379,
                622379,
                622382,
                622382,
                622383,
                622383,
                622384,
                622384,
                622385,
                622385,
                622386,
                622386,
                622387,
                622387,
                622388,
                622388,
                622389,
                622389,
                622391,
                622391,
                622392,
                622392,
                622393,
                622393,
                622394,
                622394,
                622395,
                622395,
                622396,
                622396,
                622397,
                622397,
                622398,
                622399,
                622399,
                622400,
                622400,
                622406,
                622406,
                622407,
                622407,
                622411,
                622411,
                622412,
                622412,
                622413,
                622413,
                622415,
                622415,
                622418,
                622418,
                622420,
                622420,
                622421,
                622421,
                622422,
                622422,
                622423,
                622423,
                622425,
                622425,
                622426,
                622426,
                622427,
                622427,
                622428,
                622428,
                622429,
                622429,
                622432,
                622432,
                622434,
                622434,
                622435,
                622435,
                622436,
                622436,
                622439,
                622439,
                622440,
                622440,
                622441,
                622441,
                622442,
                622442,
                622443,
                622443,
                622447,
                622447,
                622448,
                622448,
                622449,
                622449,
                622450,
                622450,
                622451,
                622451,
                622452,
                622452,
                622453,
                622453,
                622456,
                622456,
                622459,
                622459,
                622462,
                622462,
                622463,
                622463,
                622466,
                622466,
                622467,
                622467,
                622468,
                622468,
                622470,
                622470,
                622471,
                622471,
                622472,
                622472,
                622476,
                622476,
                622477,
                622477,
                622478,
                622478,
                622481,
                622481,
                622485,
                622485,
                622486,
                622486,
                622487,
                622487,
                622487,
                622487,
                622488,
                622488,
                622489,
                622489,
                622490,
                622490,
                622490,
                622490,
                622491,
                622491,
                622491,
                622491,
                622492,
                622492,
                622492,
                622492,
                622493,
                622493,
                622495,
                622495,
                622496,
                622496,
                622498,
                622498,
                622499,
                622499,
                622500,
                622500,
                622506,
                622506,
                622509,
                622509,
                622510,
                622510,
                622516,
                622516,
                622517,
                622517,
                622518,
                622518,
                622519,
                622519,
                622521,
                622521,
                622522,
                622522,
                622523,
                622523,
                622525,
                622525,
                622526,
                622526,
                622538,
                622538,
                622546,
                622546,
                622547,
                622547,
                622548,
                622548,
                622549,
                622549,
                622550,
                622550,
                622561,
                622561,
                622562,
                622562,
                622563,
                622563,
                622575,
                622575,
                622576,
                622576,
                622577,
                622577,
                622578,
                622578,
                622579,
                622579,
                622580,
                622580,
                622581,
                622581,
                622582,
                622582,
                622588,
                622588,
                622598,
                622598,
                622600,
                622600,
                622601,
                622601,
                622602,
                622602,
                622603,
                622603,
                622615,
                622615,
                622617,
                622617,
                622619,
                622619,
                622622,
                622622,
                622630,
                622630,
                622631,
                622631,
                622632,
                622632,
                622633,
                622633,
                622650,
                622650,
                622655,
                622655,
                622658,
                622658,
                622660,
                622660,
                622678,
                622678,
                622679,
                622679,
                622680,
                622680,
                622681,
                622681,
                622682,
                622682,
                622684,
                622684,
                622688,
                622688,
                622689,
                622689,
                622690,
                622690,
                622691,
                622691,
                622692,
                622692,
                622696,
                622696,
                622698,
                622698,
                622700,
                622700,
                622725,
                622725,
                622728,
                622728,
                622750,
                622750,
                622751,
                622751,
                622752,
                622752,
                622753,
                622753,
                622754,
                622755,
                622755,
                622756,
                622756,
                622757,
                622757,
                622758,
                622758,
                622759,
                622759,
                622760,
                622760,
                622761,
                622761,
                622762,
                622762,
                622763,
                622763,
                622770,
                622770,
                622777,
                622777,
                622821,
                622821,
                622822,
                622822,
                622823,
                622823,
                622824,
                622824,
                622825,
                622825,
                622826,
                622826,
                622827,
                622836,
                622836,
                622837,
                622837,
                622840,
                622840,
                622841,
                622842,
                622843,
                622844,
                622844,
                622845,
                622845,
                622846,
                622846,
                622847,
                622847,
                622848,
                622848,
                622849,
                622855,
                622855,
                622856,
                622856,
                622857,
                622857,
                622858,
                622858,
                622859,
                622859,
                622860,
                622860,
                622861,
                622861,
                622864,
                622864,
                622865,
                622865,
                622866,
                622866,
                622867,
                622867,
                622869,
                622869,
                622870,
                622870,
                622871,
                622871,
                622877,
                622877,
                622878,
                622878,
                622879,
                622879,
                622880,
                622880,
                622881,
                622881,
                622882,
                622882,
                622884,
                622884,
                622885,
                622885,
                622886,
                622886,
                622891,
                622891,
                622892,
                622892,
                622893,
                622893,
                622895,
                622895,
                622897,
                622897,
                622898,
                622898,
                622900,
                622900,
                622901,
                622901,
                622908,
                622908,
                622909,
                622909,
                622940,
                622982,
                628218,
                628288,
                628366,
                628368,
                650600,
                650600,
                650700,
                650700,
                650800,
                650800,
                650900,
                650900,
                682900,
                682900,
                683970,
                683970,
                685800,
                685800,
                685800,
                685800,
                685800,
                685800,
                690755,
                690755,
                690755,
                690755,
                694301,
                694301,
                695800,
                695800,
                843010,
                843010,
                843360,
                843360,
                843420,
                843420,
                843610,
                843610,
                843730,
                843730,
                843800,
                843800,
                843850,
                843850,
                843900,
                843900,
                870000,
                870000,
                870100,
                870100,
                870300,
                870300,
                870400,
                870400,
                870500,
                870500,
                888000,
                888000,
                940056,
                955880,
                955881,
                955882,
                955888,
                984301,
                998800
            ],
            bankName:[
                "广东发展银行",
                "中国农业银行",
                "昆明农联社",
                "中国光大银行",
                "上海银行",
                "上海银行",
                "中国银行",
                "中国银行",
                "中国光大银行",
                "中国光大银行",
                "中国光大银行",
                "中国光大银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中信实业银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "招商银行",
                "上海银行",
                "中国工商银行",
                "中国农业银行",
                "中信实业银行",
                "中国农业银行",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "交通银行",
                "交通银行",
                "中国光大银行",
                "中国光大银行",
                "广东发展银行",
                "中国民生银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "招商银行",
                "深圳发展银行",
                "深圳发展银行",
                "中国民生银行",
                "北京银行",
                "中国建设银行",
                "中国民生银行",
                "中信实业银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "北京银行",
                "北京银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国光大银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国民生银行",
                "广东发展银行",
                "华夏.华夏卡",
                "华夏.华夏卡",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "中国建设银行",
                "中国建设银行",
                "深圳发展银行",
                "深圳发展银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "广东发展银行",
                "中国银行",
                "中国工商银行",
                "中国工商银行",
                "兴业银行",
                "兴业银行",
                "上海银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "中信实业银行",
                "中信实业银行",
                "兴业银行",
                "中国银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国建设银行",
                "中国银行",
                "上海浦东发展银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "交通银行",
                "交通银行",
                "招商银行",
                "中国民生银行",
                "中国民生银行",
                "招商银行",
                "招商银行",
                "中国光大银行",
                "上海银行",
                "兴业银行",
                "兴业银行",
                "中国光大银行",
                "广东发展银行",
                "中国建设银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行.",
                "中国农业银行",
                "中国农业银行",
                "中国建设银行",
                "广东发展银行",
                "交通银行",
                "广东发展银行",
                "中国银行",
                "上海浦东发展银行",
                "常州商业银行",
                "中国工商银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "招商银行",
                "宁波市商业银行",
                "中国民生银行",
                "中国银行",
                "中国银行",
                "中信实业银行",
                "中国银行",
                "中国银行",
                "中国民生银行",
                "中信实业银行",
                "广东发展银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "招商银行",
                "招商银行",
                "中国农业银行",
                "上海银行",
                "中国农业银行",
                "中信实业银行",
                "上海银行",
                "广东发展银行",
                "交通银行",
                "宁波市商业银行",
                "广东发展银行",
                "交通银行",
                "中国银行",
                "兴业银行",
                "招商银行",
                "中国工商银行",
                "兴业银行",
                "中国工商银行",
                "中国建设银行",
                "中国银行",
                "中国银行",
                "中国工商银行",
                "中国银行",
                "中国银行",
                "中国建设银行",
                "深圳市商业银行",
                "兴业银行",
                "深圳市商业银行",
                "广东发展银行",
                "中国民生银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "交通银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "广东发展银行",
                "中国光大银行",
                "中国建设银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国工商银行",
                "广东发展银行",
                "中国建设银行",
                "中国民生银行",
                "招商银行",
                "招商银行",
                "中国农业银行",
                "中国银行",
                "广东发展银行",
                "中国建设银行",
                "交通银行",
                "中国银行",
                "中国建设银行",
                "中国民生银行",
                "中信实业银行",
                "中国工商银行",
                "中国农业银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "广东发展银行",
                "中国建设银行",
                "中信实业银行",
                "沈阳市商业银行",
                "深圳农联社",
                "D.F.S.I(备注1).发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "D.F.S.I.发现卡",
                "中国银行",
                "中国银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "深圳商业银行",
                "深圳商业银行",
                "北京银行",
                "北京银行",
                "南京市商业银行",
                "南京市商业银行",
                "杭州商业银行",
                "杭州商业银行",
                "广州市商业银行",
                "广州市商业银行",
                "苏州市商业银行",
                "苏州市商业银行",
                "徽商银行合肥分行",
                "徽商银行合肥分行",
                "徽商银行合肥分行",
                "徽商银行合肥分行",
                "徽商银行合肥分行",
                "徽商银行合肥分行",
                "绍兴商业银行",
                "绍兴商业银行",
                "常熟农村商业银行",
                "常熟农村商业银行",
                "大连商业银行",
                "大连商业银行",
                "河北省农村信用社",
                "中国邮政储蓄银行",
                "韩亚银行",
                "中国邮政储蓄银行",
                "中国银行",
                "温州商业银行",
                "温州商业银行",
                "阜新市商业银行",
                "阜新市商业银行",
                "福建省农村信用社联合社",
                "厦门市农村信用合作社",
                "福建省农村信用社联合社",
                "厦门市农村信用合作社",
                "深圳农信社",
                "深圳农信社",
                "深圳市农村信用合作社联合社",
                "深圳市农村信用合作社联合社",
                "淮安市商业银行",
                "淮安市商业银行",
                "嘉兴市商业银行",
                "嘉兴市商业银行",
                "贵阳市商业银行",
                "贵阳市商业银行",
                "重庆市商业银行",
                "重庆市商业银行",
                "成都商业银行",
                "成都商业银行",
                "西安市商业银行",
                "西安市商业银行",
                "徽商银行芜湖分行",
                "徽商银行芜湖分行",
                "北京农联社",
                "北京农联社",
                "兰州市商业银行",
                "兰州市商业银行",
                "廊坊市商业银行",
                "廊坊市商业银行",
                "泰隆城市信用社",
                "泰隆城市信用社",
                "乌鲁木齐市商业银行",
                "乌鲁木齐市商业银行",
                "青岛商行",
                "青岛商行",
                "呼市商业银行",
                "呼市商业银行",
                "上海银行",
                "上海银行",
                "上海银行",
                "上海银行",
                "中国邮政储蓄银行",
                "中国邮政储蓄银行",
                "中国邮政储蓄银行",
                "中国邮政储蓄银行",
                "成都市商业银行",
                "成都市商业银行",
                "成都市商业银行",
                "成都市商业银行",
                "成都市商业银行",
                "成都市商业银行",
                "深圳市商业银行",
                "深圳市商业银行",
                "深圳市商业银行",
                "深圳市商业银行",
                "包头市商业银行",
                "包头市商业银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "湖南省农村信用社联合社",
                "湖南省农村信用社联合社",
                "吉林市商业银行",
                "吉林市商业银行",
                "吉林市商业银行",
                "吉林市商业银行",
                "福建省农村信用社联合社",
                "福建省农村信用社联合社",
                "中国邮政储蓄银行",
                "中国邮政储蓄银行",
                "中国邮政储蓄银行",
                "中国邮政储蓄银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行.",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "交通银行股份有限公司太平洋双币信用卡中心",
                "交行太平洋卡中心",
                "交通银行股份有限公司太平洋双币信用卡中心",
                "交行太平洋卡中心",
                "交通银行股份有限公司太平洋双币信用卡中心",
                "交行太平洋卡中心",
                "交通银行股份有限公司太平洋双币信用卡中心",
                "交行太平洋卡中心",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "交通银行",
                "中国建设银行",
                "中国建设银行",
                "柳州市商业银行",
                "柳州市商业银行",
                "柳州市商业银行",
                "柳州市商业银行",
                "湖州市商业银行",
                "湖州市商业银行",
                "佛山市禅城区农村信用联社",
                "佛山市禅城区农村信用联社",
                "南京市商业银行",
                "南京市商业银行",
                "南京市商业银行",
                "南京市商业银行",
                "九江市商业银行",
                "九江市商业银行",
                "昆明商业银行",
                "昆明商业银行",
                "西宁市商业银行",
                "西宁市商业银行",
                "淄博市商业银行",
                "淄博市商业银行",
                "徐州市郊农村信用合作联社",
                "徐州市郊农村信用合作联社",
                "宁波市商业银行",
                "宁波市商业银行",
                "宁波市商业银行",
                "宁波市商业银行",
                "山东农村信用联合社",
                "山东农村信用联合社",
                "台州市商业银行",
                "台州市商业银行",
                "顺德农信社.恒通卡",
                "顺德农信社.恒通卡",
                "常熟农村商业银行",
                "常熟农村商业银行",
                "江苏农信.圆鼎卡",
                "江苏农信.圆鼎卡",
                "武汉市商业银行",
                "武汉市商业银行",
                "徽商银行马鞍山分行",
                "徽商银行马鞍山分行",
                "东莞农村信用合作社",
                "东莞农村信用合作社",
                "天津市农村信用社",
                "天津市农村信用社",
                "天津市商业银行",
                "天津市商业银行",
                "张家港市农村商业银行",
                "张家港市农村商业银行",
                "东莞市商业银行",
                "东莞市商业银行",
                "南宁市商业银行",
                "南宁市商业银行",
                "包头市商业银行",
                "包头市商业银行",
                "连云港市商业银行",
                "连云港市商业银行",
                "焦作市商业银行",
                "焦作市商业银行",
                "鄞州农村合作银行",
                "鄞州农村合作银行",
                "徽商银行淮北分行",
                "徽商银行淮北分行",
                "江阴农村商业银行",
                "江阴农村商业银行",
                "攀枝花市商业银行",
                "攀枝花市商业银行",
                "佛山市三水区农村信用合作社",
                "佛山市三水区农村信用合作社",
                "成都农信社",
                "成都农信社",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "南洋商业银行",
                "南洋商业银行",
                "南洋商业银行",
                "南洋商业银行",
                "南洋商业银行",
                "南洋商业银行",
                "集友银行",
                "集友银行",
                "集友银行",
                "集友银行",
                "集友银行",
                "集友银行",
                "沧州农信社",
                "沧州农信社",
                "临沂市商业银行",
                "临沂市商业银行",
                "香港上海汇丰银行有限公司",
                "香港上海汇丰银行有限公司",
                "香港上海汇丰银行有限公司",
                "香港上海汇丰银行有限公司",
                "中山市农村信用合作社",
                "中山市农村信用合作社",
                "珠海市商业银行",
                "珠海市商业银行",
                "东亚银行有限公司",
                "东亚银行有限公司",
                "徽商银行安庆分行",
                "徽商银行安庆分行",
                "绵阳市商业银行",
                "绵阳市商业银行",
                "长沙市商业银行",
                "长沙市商业银行",
                "昆明市农村信用联社",
                "昆明市农村信用联社",
                "泉州市商业银行",
                "泉州市商业银行",
                "花旗银行有限公司",
                "花旗银行有限公司",
                "大新银行有限公司",
                "大新银行有限公司",
                "大新银行有限公司",
                "大新银行有限公司",
                "恒生银行有限公司",
                "恒生银行有限公司",
                "恒生银行有限公司",
                "恒生银行有限公司",
                "恒生银行有限公司",
                "恒生银行有限公司",
                "济南市商业银行",
                "济南市商业银行",
                "美国银行.人民币卡",
                "美国银行.人民币卡",
                "大连市商业银行",
                "大连市商业银行",
                "恒丰银行",
                "恒丰银行",
                "大连市商业银行",
                "大连市商业银行",
                "上海商业银行",
                "上海商业银行",
                "永隆银行有限公司",
                "永隆银行有限公司",
                "福州市商业银行",
                "福州市商业银行",
                "宁波鄞州农村合作银行",
                "宁波鄞州农村合作银行",
                "潍坊商业银行",
                "潍坊商业银行",
                "泸州市商业银行",
                "泸州市商业银行",
                "厦门市商业银行",
                "厦门市商业银行",
                "镇江市商业银行",
                "镇江市商业银行",
                "大同市商业银行",
                "大同市商业银行",
                "宜昌市商业银行",
                "宜昌市商业银行",
                "宜昌市商业银行",
                "宜昌市商业银行",
                "葫芦岛市商业银行",
                "辽阳市商业银行",
                "辽阳市商业银行",
                "营口市商业银行",
                "营口市商业银行",
                "香港上海汇丰银行有限公司.ATM Card",
                "香港上海汇丰银行有限公司.ATM Card",
                "香港上海汇丰银行有限公司.ATM Card",
                "香港上海汇丰银行有限公司.ATM Card",
                "威海市商业银行.通达卡",
                "威海市商业银行.通达卡",
                "湖北农信社.信通卡",
                "湖北农信社.信通卡",
                "鞍山市商业银行",
                "鞍山市商业银行",
                "丹东商行.银杏卡",
                "丹东商行.银杏卡",
                "南通市商业银行",
                "南通市商业银行",
                "洛阳市商业银行",
                "洛阳市商业银行",
                "郑州商业银行",
                "郑州商业银行",
                "扬州市商业银行",
                "扬州市商业银行",
                "永隆银行有限公司",
                "永隆银行有限公司",
                "哈尔滨市商业银行",
                "哈尔滨市商业银行",
                "天津市商业银行",
                "天津市商业银行",
                "台州市商业银行",
                "台州市商业银行",
                "银川市商业银行",
                "银川市商业银行",
                "银川市商业银行",
                "银川市商业银行",
                "大西洋银行股份有限公司",
                "大西洋银行股份有限公司",
                "澳门国际银行",
                "澳门国际银行",
                "澳门国际银行",
                "澳门国际银行",
                "澳门国际银行",
                "澳门国际银行",
                "广州农村信用合作社联合社",
                "广州农村信用合作社",
                "吉林市商业银行",
                "吉林市商业银行",
                "三门峡市城市信用社",
                "三门峡市城市信用社",
                "抚顺市商业银行",
                "抚顺市商业银行",
                "昆山农村信用合作社联合社",
                "昆山农村信用合作社联合社",
                "常州商业银行",
                "常州商业银行",
                "湛江市商业银行",
                "湛江市商业银行",
                "金华市商业银行",
                "金华市商业银行",
                "金华市商业银行",
                "金华市商业银行",
                "大新银行有限公司",
                "大新银行有限公司",
                "江苏农信社.圆鼎卡",
                "江苏农信社.圆鼎卡",
                "中信嘉华银行有限公司",
                "中信嘉华银行有限公司",
                "中信嘉华银行有限公司",
                "中信嘉华银行有限公司",
                "中信嘉华银行有限公司",
                "中信嘉华银行有限公司",
                "常熟市农村商业银行",
                "常熟市农村商业银行",
                "廖创兴银行有限公司",
                "廖创兴银行有限公司",
                "沈阳市商业银行",
                "沈阳市商业银行",
                "广州市商业银行",
                "广州市商业银行",
                "上海银行",
                "上海银行",
                "江门市新会农信社",
                "江门市新会农信社",
                "东亚银行有限公司",
                "东亚银行有限公司",
                "东亚银行有限公司",
                "东亚银行有限公司",
                "乌鲁木齐市商业银行",
                "乌鲁木齐市商业银行",
                "高要市农村信用联社",
                "高要市农村信用联社",
                "上海市农村信用合作社联合社",
                "上海市农村信用合作社联社",
                "江阴市农村商业银行",
                "江阴市农村商业银行",
                "无锡市商业银行",
                "无锡市商业银行",
                "绍兴市商业银行",
                "绍兴市商业银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "吴江农村商业银行",
                "吴江农村商业银行",
                "大新银行有限公司",
                "大新银行有限公司",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "星展银行",
                "AEON信贷财务.AEON JUSCO银联卡",
                "AEON信贷财务.AEON JUSCO银联卡",
                "Travelex.Travelex港币卡",
                "Travelex.Travelex港币卡",
                "Travelex.Travelex美元卡",
                "Travelex.Travelex美元卡",
                "石家庄市商业银行",
                "石家庄市商业银行",
                "石家庄市商业银行",
                "石家庄市商业银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "陕西省农村信用社联合社",
                "陕西省农村信用社联合社",
                "高要市农村信用合作社联合社",
                "高要市农村信用合作社联社",
                "高要市农村信用合作社联合社",
                "高要市农村信用合作社联社",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "上海浦东发展银行",
                "深圳发展银行",
                "深圳发展银行",
                "深圳发展银行",
                "深圳发展银行",
                "深圳发展银行",
                "深圳发展银行",
                "大丰银行有限公司",
                "大丰银行有限公司",
                "大丰银行有限公司",
                "大丰银行有限公司",
                "大丰银行有限公司",
                "大丰银行有限公司",
                "哈萨克斯坦国民储蓄银行.Halykbank Classic",
                "哈萨克斯坦国民储蓄银行.Halykbank Classic",
                "哈萨克斯坦国民储蓄银行.Halykbank Golden",
                "哈萨克斯坦国民储蓄银行.Halykbank Golden",
                "德阳市商业银行",
                "德阳市商业银行",
                "德阳市商业银行",
                "德阳市商业银行",
                "德阳市商业银行",
                "德阳市商业银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "中国民生银行",
                "华夏银行",
                "华夏银行",
                "华夏银行",
                "华夏银行",
                "华夏银行",
                "华夏银行",
                "华夏银行",
                "华夏银行",
                "中国光大银行",
                "中国光大银行",
                "中国光大银行",
                "中国光大银行",
                "中国光大银行",
                "中国光大银行",
                "光大银行",
                "光大银行",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "江西省农村信用社联合社",
                "江西省农村信用社联合社",
                "江西省农村信用社联合社",
                "江西省农村信用社联合社",
                "渤海银行",
                "渤海银行",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "中信实业银行信用卡中心",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "中信实业银行",
                "中信银行",
                "中信银行",
                "中信银行",
                "中信银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国建设银行",
                "中国银行澳门分行",
                "中国银行澳门分行",
                "中国银行澳门分行",
                "中国银行澳门分行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行",
                "中国银行澳门分行",
                "中国银行澳门分行",
                "曲靖市商业银行",
                "曲靖市商业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "中国农业银行",
                "江苏东吴农村商业银行",
                "江苏东吴农村商业银行",
                "桂林市商业银行",
                "桂林市商业银行",
                "日照市商业银行",
                "日照市商业银行",
                "浙江省农村信用社联合社",
                "浙江省农村信用社联社",
                "珠海农村信用合作社联社",
                "珠海农村信用合作联社",
                "大庆市商业银行",
                "大庆市商业银行",
                "澳门永亨银行股份有限公司",
                "澳门永亨银行股份有限公司",
                "莱芜市商业银行",
                "莱芜市商业银行",
                "长春市商业银行",
                "长春市商业银行",
                "徐州市商业银行",
                "徐州市商业银行",
                "重庆市农村信用社联合社",
                "重庆市农村信用社联合社",
                "太仓农村商业银行",
                "太仓农村商业银行",
                "靖江市长江城市信用社",
                "靖江市长江城市信用社",
                "永亨银行",
                "永亨银行",
                "徽商银行",
                "徽商银行",
                "杭州市商业银行",
                "杭州市商业银行",
                "徽商银行",
                "徽商银行",
                "柳州市商业银行",
                "柳州市商业银行",
                "柳州市商业银行",
                "柳州市商业银行",
                "尧都区农村信用合作社联社",
                "尧都区农村信用合作社联社",
                "渤海银行",
                "渤海银行",
                "重庆市农村信用社联合社",
                "重庆市农村信用社联合社",
                "烟台市商业银行",
                "烟台市商业银行",
                "武进农村商业银行",
                "武进农村商业银行",
                "上海银行",
                "上海银行",
                "贵州省农村信用社联合社",
                "贵州省农村信用社联合社",
                "江苏锡州农村商业银行",
                "江苏锡州农村商业银行",
                "中外合资.南充市商业银行",
                "中外合资.南充市商业银行",
                "长沙市商业银行",
                "长沙市商业银行",
                "长沙市商业银行",
                "长沙市商业银行",
                "兴业银行",
                "兴业银行",
                "兴业银行",
                "兴业银行",
                "兴业银行",
                "兴业银行",
                "石嘴山城市信用社",
                "张家口市商业银行",
                "交通银行",
                "中国工商银行",
                "中国建设银行",
                "大庆市商业银行",
                "Discover Financial Services，Inc.发现卡",
                ".发现卡",
                "Discover Financial Services，Inc.发现卡",
                ".发现卡",
                "Discover Financial Services，Inc.发现卡",
                ".发现卡",
                "Discover Financial Services，Inc.发现卡",
                ".发现卡",
                "上海银行",
                "上海银行",
                "泉州市商业银行",
                "泉州市商业银行",
                "广东发展银行",
                "广东发展银行",
                "广东发展银行",
                "广东发展银行",
                "广东发展银行",
                "广东发展银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "招商银行",
                "长沙市商业银行",
                "长沙市商业银行",
                "南通商业银行",
                "南通商业银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "浦东发展银行",
                "贵阳市商业银行",
                "贵阳市商业银行",
                "郑州市商业银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "中国工商银行",
                "上海浦东发展银行",
                "深圳发展银行"
            ],
            //   },
            binarySearch:function(srcArray,des){

                var low = 0;
                var high = srcArray.length-1;
                while(low <= high)
                {
                    var middle = parseInt((low + high)/2);
                    if(des == srcArray[middle])
                    {
                        return middle;
                    }
                    else if(des <srcArray[middle])
                    {
                        high = middle - 1;
                    }
                    else
                    {
                        low = middle + 1;
                    }
                }
                return -1;
            },
            getNameOfBank:function(charBin,offset){
                var longBin = 0;
                var test = 0;
                for(var i=0; i< 6; i++)
                {
                    longBin = (longBin*10) + (charBin[i+offset]-48);
                }
                test = charBin.substr(0,6);
                test = parseInt(test);
                var index = this.binarySearch(this.bankBin, test);
                if(index==-1)
                {
                    return "";
                }
                return this.bankName[index]+"\n";
            }
        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：我的抵用券页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.rebate.myCoupons.service")
    .require([])
    .type("service")
    .name("MyCouponsService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){

        var def = {

            /**
             * 查询抵用券兑换记录
             */
            queryCouponsExchangeRecord : function(onSuccess){
                HttpServiceBus.connect({
                    url : "/freeRgtPay/action/freeRgtPayActionC.jspx",
                    params : {
                        op: "queryCouponsExchangeRecord"
                    },
                    onSuccess : function (resp) {
                        if(!resp.data){
                            return;
                        }
                        onSuccess(resp.data);
                    }
                });
            },
            /**
             * 兑换抵用券
             */
            exchangeCoupons : function(couponsNo, onSuccess, onError){
                HttpServiceBus.connect({
                    url : "/freeRgtPay/action/freeRgtPayActionC.jspx",
                    params : {
                        op: "exchangeCoupons",
                        COUPONS_NO: couponsNo
                    },
                    onSuccess : function (resp) {
                        if(!resp){
                            return;
                        }
                        onSuccess(resp);
                    },
                    onError : function (resp) {
                        if(!resp){
                            return;
                        }
                        onError(resp);
                    }
                });
            }
        };

        return def;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateBankAdd.service")
    .require([
        "kyee.quyiyuan.service_bus.http",
        "kyee.quyiyuan.service_bus.cache",
        "kyee.quyiyuan.rebate.rebateBank.service"
    ])
    .type("service")
    .name("RebateBankAddService")
    .params(["HttpServiceBus","CacheServiceBus","$state","RebateBankService"])
    .action(function(HttpServiceBus,CacheServiceBus,$state,RebateBankService){

        var def = {

            initView:function($scope){
                var me = this;
                HttpServiceBus.connect({
                    url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params:{
                        op:'getUserBankMsg',
                        loc:'c',
                        USER_ID:'794184'//zwhtemp 69991
                    },
                    onSuccess:function(record){
                        $scope.bankCardInfoList = record.data.rows;
                    }
                })
            },
            onBankCardListTap:function(record){
                //CacheServiceBus.getStorageCache().set("BANK_CARD_TYPE_F",record.BANK_CARD_TYPE_F);
                CacheServiceBus.getStorageCache().set("BANK_NAME",record.BANK_CARD_TYPE);
                //CacheServiceBus.getStorageCache().set("BANK_CARD_ID",record.BANK_CARD_ID);
                RebateBankService.setPagedata(record);
                RebateBankService.setLastView('RebateBankAdd');
                $state.go('rebateBank');
            }
        };
        return def;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateBankBranch.service")
    .require([
        "kyee.quyiyuan.service_bus.http",
        "kyee.quyiyuan.rebate.editBankCardMsg.service"
    ])
    .type("service")
    .name("RebateBankBranchService")
    .params(["HttpServiceBus","$state","EditBankCardMsgService"])
    .action(function(HttpServiceBus,$state,EditBankCardMsgService){

        var def = {

            pagedata:{},

            initView:function(pagedata,initViewCallbackFunc){
               //var config = this.getBankBranch().config.pagedata;
               //var bankCode = config.BANK_CODE;
               //var cityCode = config.BANK_CITY_CODE;
                this.pagedata = pagedata;
                var bankCode =  this.pagedata.BANK_CODE;
                var cityCode =  this.pagedata.BANK_CITY_CODE;
                HttpServiceBus.connect({
                   url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                   params: {
                       BANK_CODE:bankCode,
                       BANK_CITY_CODE:cityCode,
                       op:'getBankBranchinfo',
                       loc:'c'
                   },
                   onSuccess: function (records) {
                       if (records.length == 0) {
                           //showPrompts.showNoDataPrompt('目前没有该支行信息');
                           alert('目前没有该支行信息');
                       }else{
                           initViewCallbackFunc(records);
                       }
                   }
               });
            },
            onBranchListTap:function(record){
                this.pagedata.BANK_UNION_CODE = record.BANK_UNION_CODE;
                this.pagedata.BANK_BRANCH_NAME = record.BANK_BRANCH_NAME;
                EditBankCardMsgService.revertView(this.pagedata);
                $state.go('editBankCardMsg');
            }
        };
        return def;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateBank.service")
    .require([
        "kyee.framework.service.message",
        "kyee.quyiyuan.service_bus.http",
        "kyee.quyiyuan.service_bus.cache"
    ])
    .type("service")
    .name("RebateBankService")
    .params(["KyeeMessageService","$state","CacheServiceBus","HttpServiceBus"])
    .action(function(KyeeMessageService,$state,CacheServiceBus,HttpServiceBus){

        var def = {

            //cardId:undefined,//银行卡编号
            flag:undefined,//页面标志
            cardInfo:undefined,//上个页面传入的银行卡信息
            pagedata:{},
            lastView:'',
            setLastView:function(lastView){
                this.lastView=lastView;
            },
            setPagedata:function(pagedata){
                this.pagedata = pagedata;
            },
            initView:function($scope){
                var data = this.pagedata;
                var lastView = this.lastView;
                if(lastView == "EditRebateBankMsg"){
                    this.cardInfo = data;
                    this.loadStore($scope);
                    return;
                }
                if(lastView == "RebateBankAdd"&& data != undefined){
                    var bankName = data.BANK_NAME;
                    var bankNo = data.BANK_CARD_TYPE_F;
                    $scope.BankCardInfo.cardId = data.BANK_CARD_ID;
                    $scope.BankCardInfo.bankName = bankName;
                    $scope.BankCardInfo.bankNo = bankNo;
                    return;
                }
                this.loadCardInfoFromLocalStorage($scope);
            },

            loadCardInfoFromLocalStorage:function($scope){
                var cardF = CacheServiceBus.getStorageCache().get("BANK_CARD_TYPE_F");
                var cardType = CacheServiceBus.getStorageCache().get("BANK_NAME");
                if(cardF == undefined || cardF == "" ||cardType == undefined || cardType == "" || cardId == undefined || cardId == ""){
                    this.loadStore($scope);
                }
                else{
                    $scope.BankCardInfo.bankName = cardType;
                    $scope.BankCardInfo.bankNo = cardF;
                }
            },

            loadStore:function($scope){
                var me=this;
                var lastView = this.lastView;
                HttpServiceBus.connect({
                        url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                        params: {
                            op:'getUserBankMsg',
                            loc:'c',
                            USER_ID:'794184'//zwhtemp
                        },
                        onSuccess: function (resultRecords) {
                            var records = resultRecords.data.rows;
                            if(records.length>0){
                                if(lastView == 'EditRebateBankMsg'){
                                    var cardNum = me.cardInfo.BANK_CARD_NO;
                                    var bankName = me.cardInfo.BANK_NAME;
                                    var bankNo = me.cardInfo.BANK_CARD_TYPE_F;
                                    for(var i=0;i<records.length;i++){
                                        if(records[i].BANK_CARD_NO == cardNum ){
                                            $scope.BankCardInfo.cardId = records[i].BANK_CARD_ID;
                                        }
                                    }
                                    $scope.BankCardInfo.bankName = bankName;
                                    $scope.BankCardInfo.bankNo = bankNo;
                                    CacheServiceBus.getStorageCache().set("BANK_CARD_TYPE_F",bankNo);
                                    CacheServiceBus.getStorageCache().set("BANK_NAME",bankName);
                                    CacheServiceBus.getStorageCache().set("BANK_CARD_ID",$scope.BankCardInfo.cardId);
                                }
                                else{
                                    var bankName = records[0].BANK_CARD_TYPE;
                                    $scope.BankCardInfo.cardId = records[0].BANK_CARD_ID;
                                    var bankNo = me.convertBankCardF(records[0].BANK_CARD_NO);
                                    $scope.BankCardInfo.bankName = bankName;
                                    $scope.BankCardInfo.bankNo = bankNo;
                                }
                            }else{
                                me.doClearLocalStorageCardInfo();
                                //deptStore.removeAll();
                            }
                        },
                        onError:function() {
                            me.doClearLocalStorageCardInfo();
                        }
                    }
                );
            },
            convertBankCardF: function (cardNo) {
                if(cardNo==null){
                    return "已删";
                }else if(cardNo == undefined){
                    return "已删";
                }else if(cardNo==""){
                    return "已删";
                }
                var result = cardNo.substr(cardNo.length-4, cardNo.length);
                return result;
            },
            doClearLocalStorageCardInfo:function(){
                CacheServiceBus.getStorageCache().set("BANK_CARD_TYPE_F",undefined);
                CacheServiceBus.getStorageCache().set("BANK_NAME",undefined);
                CacheServiceBus.getStorageCache().set("BANK_CARD_ID",undefined);
            },
            //显示银行卡列表
            doShowRebateBankAdd:function(){
                $state.go("rebateBankAdd");
            },
            //提交按钮点击
            onSubmitBtn:function(amount,$scope){
                if($scope.BankCardInfo.cardId == undefined || $scope.BankCardInfo.cardId == ''){
                    KyeeMessageService.message({
                        title:"温馨提示",
                        content:"请您先选择银行卡！"
                    });
                    return;
                }
                amount = amount.replace(/^(\-)*(\d+)\.(\d\d).*$/,'$1$2.$3');
                if(!this.checkIllegalChar(amount) ){
                    KyeeMessageService.message({
                        title:"温馨提示",
                        content:"输入金额有误"
                    });
                    return;
                }
                if(amount < 1){
                    KyeeMessageService.message({
                        title:"温馨提示",
                        content:"最少申请一元"
                    });
                    return;
                }
                if(amount < 0){
                    KyeeMessageService.message({
                        title:"温馨提示",
                        content:"输入金额有误"
                    });
                    return;
                }
                if(amount ==undefined){
                    KyeeMessageService.message({
                        title:"温馨提示",
                        content:"输入金额有误"
                    });
                    return;
                }
                if(amount ==null){
                    KyeeMessageService.message({
                        title:"温馨提示",
                        content:"输入金额不能为空"
                    });
                    return;
                }
                alert("test");
                //this.saveStore(cardId,amount);
            },
            onInputAmount:function(amount){
                amount = amount.replace(/^(\-)*(\d+)\.(\d\d).*$/,'$1$2.$3');
                return amount;
            },
            checkIllegalChar:function(amount)
            {
                var IllegalString=  "\`~!#$%^&*()+{}|\\:\"<>?-=/,\'`qwertyuiopasdfghjklzxcvbnm·";
                for (var j=0;j<amount.length;j++)
                {
                    if (IllegalString.indexOf(amount.charAt(j))>=0)
                    {
                        return false;
                    }
                }
                return true;
            }
        };
        return def;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateDetailIn.service")
    .require([
        "kyee.quyiyuan.service_bus.http"
    ])
    .type("service")
    .name("RebateDetailInService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){

        var def = {

            initView:function(initViewCallbackFunc){

                HttpServiceBus.connect({
                    url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op:'queryGetBackRecordIn',
                        loc:'c',
                        USER_ID:2164414//zwhtemp
                    },
                    onSuccess: function (records) {
                        initViewCallbackFunc(records.data.rows);
                    }
                });
            }

        };
        return def;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.rebateDetailOut.service")
    .require([
        "kyee.quyiyuan.service_bus.http",
        "kyee.framework.service.message"
    ])
    .type("service")
    .name("RebateDetailOutService")
    .params(["HttpServiceBus","$ionicPopup","KyeeMessageService","$state"])
    .action(function(HttpServiceBus,$ionicPopup,KyeeMessageService,$state){

        var def = {

            initView:function(initViewCallbackFunc){
                var me = this;
                HttpServiceBus.connect({
                    url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op:'queryGetBackRecordOut',
                        loc:'c',
                        USER_ID:2164414//zwhtemp
                    },
                    onSuccess: function (records) {
                        if(records.data.rows.length>0){
                            var resultData = records.data.rows;
                            for(var i=0;i<resultData.length;i++){
                                resultData[i].OPERATE_TIME = me.convertOperateTime(resultData[i].OPERATE_TIME);
                                resultData[i].AMOUNT = me.convertAmount(resultData[i].AMOUNT);
                                resultData[i].BANK_CARD_NO_F = me.convertBankCardNoF(resultData[i].BANK_CARD_NO);
                                resultData[i].FLAG = me.convertFlag(resultData[i].FLAG);
                                if(resultData[i].FLAG=='正在处理'){
                                    resultData[i].FLAG_COLOR = '#f18229';
                                }else if(resultData[i].FLAG=='申请成功'){
                                    resultData[i].FLAG_COLOR = '#42d56f';
                                }else{
                                    resultData[i].FLAG_COLOR = '#ef3737';
                                }
                                resultData[i].IS_SHOW_ERR_MSG = false;
                                resultData[i].IS_SHOW_COMMT_MSG = false;
                            }
                        }

                        initViewCallbackFunc(resultData);
                    }
                });
            },
            onShowCommentMsg:function(i,$scope){
                $scope.data={comment: ''};
                var commentMsg = $scope.result[i].USER_COMMENT;
                if(commentMsg!=null && commentMsg.length>0){
                    $scope.result[i].IS_SHOW_COMMT_MSG =  !$scope.result[i].IS_SHOW_COMMT_MSG;
                    return;
                }
                var popup = $ionicPopup.show({
                    title: '添加评论',
                    template:'<textarea placeholder="请输入评论内容" ng-model="data.comment" maxlength="180" rows="4" ></textarea>',
                    scope: $scope,
                    buttons: [
                        {
                            text: "取消",
                            onTap : function(){
                                return false;
                            }
                        },
                        {
                            text: "确定",
                            type: "kyee_framework_message_dialog_ok_button",
                            onTap: function() {
                                return true;
                            }
                        }
                    ]
                });
                popup.then(function(ref){
                    if(ref){
                        $scope.data.comment = $scope.data.comment.trim();
                        if($scope.data.comment==''||$scope.data.comment==null){
                            KyeeMessageService.message({
                                title:'温馨提示',
                                content:'您输入的评论为空'
                            });
                            return;
                        }
                        HttpServiceBus.connect({
                            url:'freeRgtPay/action/freeRgtPayActionC.jspx',
                            params: {
                                op:'addCommentForGetOutAccount',
                                loc:'c',
                                AMOUNT_OUT_ID:$scope.result[i].AMOUNT_OUT_ID,
                                COMMENT_MSG:$scope.data.comment.trim()
                            },
                            onSuccess: function (records) {
                                //if (success) {
                                    $state.go('rebate');
                                    $scope.result[i].USER_COMMENT = $scope.data.comment.trim();
                                    KyeeMessageService.message({
                                        title:'温馨提示',
                                        content:records.message
                                    });
                                //}else {
                                //    KyeeMessageService.message({
                                //        title:'温馨提示',
                                //        content:records[0].node.message
                                //    });
                                //}
                            }
                        });
                    }
                });
            },
            convertOperateTime:function (opDate) {
                //日期格式化
                Date.prototype.format = function(format){
                    var o = {
                        "M+" : this.getMonth()+1, //month
                        "d+" : this.getDate(), //day
                        "h+" : this.getHours(), //hour
                        "m+" : this.getMinutes(), //minute
                        "s+" : this.getSeconds(), //second
                        "q+" : Math.floor((this.getMonth()+3)/3), //quarter
                        "S" : this.getMilliseconds() //millisecond
                    };
                    if(/(y+)/.test(format)) {
                        format = format.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
                    }

                    for(var k in o) {
                        if(new RegExp("("+ k +")").test(format)) {
                            format = format.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
                        }
                    }
                    return format;
                };
                var dateStr=null;
                if(opDate==undefined){
                    return "";
                }
                if(opDate.indexOf('.')){
                    dateStr=opDate.substring(0,opDate.length-2);
                    dateStr=dateStr.replace('-','/').replace('-','/');
                }
                var date = Date.parse(dateStr);
                return  new Date(date).format('yyyy/MM/dd');
            },
            convertAmount: function (v) {
                if(v==undefined){
                    return "0";
                }
                v = parseFloat(v);
                return v.toFixed(2);
            },
            convertBankCardNoF: function (v) {
                if(v==null){
                    return "已删";
                }else if(v == undefined){
                    return "已删";
                }else if(v==""){
                    return "已删";
                }
                v = v.substr(v.length-4, v.length);
                return v;
            },
            convertFlag: function(value){
                if(value==0 || value==10){
                    return '正在处理';
                }else if(value==1){
                    return '申请成功';
                }else{
                    return '申请失败'
                }
            }
        };
        return def;
    })
    .build();

new KyeeModule()
    .group("kyee.quyiyuan.rebate.service")
    .require([
        "kyee.quyiyuan.service_bus.http",
        "kyee.framework.service.message",
        "kyee.quyiyuan.rebate.rebateBank.service"
    ])
    .type("service")
    .name("RebateService")
    .params(["HttpServiceBus","$state","KyeeMessageService","RebateBankService"])
    .action(function(HttpServiceBus,$state,KyeeMessageService,RebateBankService){

        var def = {
            //读取优惠数据
            initView:function($scope){
                this.loadParams($scope);
                this.loadStore($scope);
            },
            loadParams:function($scope){
                $scope.docData={
                    "isShowDoc":false,
                    "doc":""
                };
                HttpServiceBus.connect({
                    url: 'hospitalInform/action/HospitalinforActionC.jspx',
                    params: {
                        op: 'queryHospitalParam',
                        loc: 'c',
                        hospitalId: '1501',//zwhtemp
                        paramName: 'fundExplain'
                    },
                    onSuccess: function (records) {
                            var doc=records.data.fundExplain;
                            if(doc != null && doc != undefined && doc != ""){
                                doc = doc.replace(/\"/g, "");
                                $scope.docData={
                                    "isShowDoc":true,
                                    "doc":doc
                                };
                            }
                    }
                });
            },
            loadStore:function($scope) {
                var me = this;
                HttpServiceBus.connect({
                    url: 'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op: 'doQuYiFundProcess',
                        loc: 'c',
                        HOSPITAL_ID: '1501',//zwhtemp
                        USER_ID: 2164414//zwhtemp
                    },
                    onSuccess: function (records) {
                        $scope.RebateData = records;
                        me.loadPayStore($scope);
                    }
                })
            },
            //读取最新提现数据
            loadPayStore:function($scope){
                HttpServiceBus.connect({
                    url: 'freeRgtPay/action/freeRgtPayActionC.jspx',
                    params: {
                        op:'queryGetBackRecordOut',
                        loc:'c',
                        USER_ID:2164414,//zwhtemp
                        BUSINESS_TYPE:0,
                        LIMIT:1
                    },
                    onSuccess: function (records) {
                        var data = records.data.rows;
                        var result = "";
                        if(data>0){
                            var lastData = result[result.length-2];
                            var card1 = lastData['BANK_CARD_NO'].substring(0,3);
                            var card2 =lastData['BANK_CARD_NO'].substring((lastData['BANK_CARD_NO'].length-4),(lastData['BANK_CARD_NO'].length))
                            var card=card1+'********'+card2;

                            result = {
                                IS_SHOW:true,
                                NAME:lastData['OPERATE_NAME'],
                                CARD: card,
                                MONEY:lastData['AMOUNT'],
                                DATE:dateUtil.dateFormat(lastData['OPERATE_TIME'], 'Y-m-d'),
                                FLAG:lastData['FLAG']
                            };
                        }else{
                            result = {
                                IS_SHOW:false
                            }
                        }
                        $scope.payStore = result;
                    }

                })
            },
            //提交按钮点击
            onSubmitReturnBtn:function(PERSONALAMOUNTGET){
                var global = {"currentHospitalID":1001};//zwhtemp
                if(global.currentHospitalID == '1001')//当前医院为体验医院时
                {
                    RebateBankService.setLastView('RebateCenter');
                    $state.go('rebateBank');
                }
                if(global.currentHospitalID != '1001')//当前医院不为体验医院时
                {
                    if(PERSONALAMOUNTGET == '0.00'||PERSONALAMOUNTGET=='0'){
                        KyeeMessageService.message({
                            title:'温馨提示',
                            content:'您暂无可返金额，不能提现'
                        });
                    }
                    else{
                        RebateBankService.setLastView('RebateCenter');
                        $state.go('rebateBank');
                    }
                }
            }

        };
        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/4
 * 创建原因：确认挂号控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.regist.registConfirm.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.regist.regist_registConfirm.service","kyee.quyiyuan.regist.regist_doctorSchedule.service","kyee.quyiyuan.regist.service"])
    .type("controller")
    .name("RegistConfirmController")
    .params(["$scope","$state", "KyeeViewService","RegistConfirmService","RegistDoctorScheduleService","RegistDeptSelectService"])
    .action(function($scope,$state,KyeeViewService,RegistConfirmService,RegistDoctorScheduleService,RegistDeptSelectService){

        RegistConfirmService.queryClinicData("1001", function(clinicData){

        console.log(clinicData)
        });
        RegistConfirmService.queryClientinfo("1001", function(Clientinfo){
            $scope.Clientinfo=Clientinfo;
            console.log(Clientinfo)
        });
        //获取排班页面用户点击挂号的排班数据
        $scope.RegistconfrimSchedule=RegistDoctorScheduleService.SceduleListData;
        //获取排版页面用户点击挂号的医生信息
        $scope.Registconfrimdoctor=RegistDoctorScheduleService.doctor;
        //获取当前选择的科室
        $scope.deptData=RegistDeptSelectService.deptData;
        console.log( $scope.RegistconfrimSchedule);
        console.log($scope.Registconfrimdoctor);
        console.log($scope.deptData);
        //点击确认挂号
        $scope.registConfirm=function(){
         //   $state.go("regist_doctorSchedule");

        };

    })
    .build();



new KyeeModule()
    .group("kyee.quyiyuan.regist.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.regist.service","kyee.quyiyuan.regist.regist_doctorSchedule.controller"])
    .type("controller")
    .name("RegistDeptSelectController")
    .params(["$scope","$state", "KyeeViewService","RegistDeptSelectService"])
    .action(function($scope,$state,KyeeViewService,RegistDeptSelectService){

        RegistDeptSelectService.queryDept("1001", function(resultData){
            $scope.LETTERS=resultData.letters;
            $scope.DEPT_DATA=resultData.resultMap;
            console.log($scope.LETTERS);
            console.log($scope.DEPT_DATA);
        });
        //点击某一科室后跳转到排班界面
        $scope.showDoctorSchedule=function(deptData){
            RegistDeptSelectService.deptData=deptData;
            $state.go("regist_doctorSchedule");

        };
        //判断是否显示网络科室图标
        $scope.showNetDept=function(onLineDept){
            if(onLineDept!=null && onLineDept !=undefined){
                if(onLineDept==1){
                    return true;
                }else{
                    return false;
                }
            }else{
                return false;
            }
        }
    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/4/30
 * 创建原因：挂号医生排班控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.regist.regist_doctorSchedule.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.regist.service","kyee.quyiyuan.regist.regist_doctorSchedule.service","kyee.quyiyuan.regist.registConfirm.controller"])
    .type("controller")
    .name("RegistDoctorScheduleController")
    .params(["$scope","$state", "KyeeViewService","RegistDeptSelectService","RegistDoctorScheduleService"])
    .action(function($scope,$state,KyeeViewService,RegistDeptSelectService,RegistDoctorScheduleService){
        //初始化默认查询全部医生
        //0:全部，1：专家  2：普通（页面定义）
        $scope.doctorType=0;
        //获取科室页面传递的科室对象
        $scope.deptData=RegistDeptSelectService.deptData;
        //获取服务数据
        var params={"hospitalId":1001,"deptCode":$scope.deptData.DEPT_CODE};
        RegistDoctorScheduleService.queryRegistSchedule(params, function(arrisschudleTime,doctorScheduleTable){
           $scope.doctorSource=arrisschudleTime;
          $scope.doctorSchedule=doctorScheduleTable;
            //将后台返回的数据绑定到当前服务
            RegistDoctorScheduleService.doctorScheduleTable=doctorScheduleTable;
            console.log($scope.doctorSource);
            console.log($scope.doctorSchedule);
        });
        //单个医生上午是否有排班
        $scope.showAmIsTimeregist=function(scheduleList){
            if(scheduleList !=null && scheduleList !=undefined){
                    if((scheduleList[0].ISTIME==1 && scheduleList[0].CLINIC_DURATION=="上午")||(scheduleList[1].ISTIME==1 && scheduleList[1].CLINIC_DURATION=="上午")){
                        return true;
                    }
                    else{
                        return false;
                    }
            }
        };
        //单个医生上午是否有排班
        $scope.showPmIsTimeregist=function(scheduleList){
            if(scheduleList !=null && scheduleList !=undefined){
                if((scheduleList[0].ISTIME==1 && scheduleList[0].CLINIC_DURATION=="下午")||(scheduleList[1].ISTIME==1 && scheduleList[1].CLINIC_DURATION=="下午")){
                    return true;
                }
                else{
                    return false;
                }
            }
        };
        //医生类别过滤
        $scope.showdoctor=function(flag){
            $scope.doctorType=flag;
            var resultTypeSchedule=[];
            var doctorScheduleLis=RegistDoctorScheduleService.doctorScheduleTable;
            if(!doctorScheduleLis){
                //TODO 暂无数据
            }
            if(flag==1){
                for(var i=0;i<doctorScheduleLis.length;i++){
                    if(doctorScheduleLis[i].DOCTOR_CLINIC_TYPE=='1'){
                        resultTypeSchedule.push(doctorScheduleLis[i]);
                    }
                }
            }else if(flag==2){
                for(var i=0;i<doctorScheduleLis.length;i++){
                    if(doctorScheduleLis[i].DOCTOR_CLINIC_TYPE=='0'||doctorScheduleLis[i].DOCTOR_CLINIC_TYPE==''||doctorScheduleLis[i].DOCTOR_CLINIC_TYPE==undefined){
                        resultTypeSchedule.push(doctorScheduleLis[i]);
                    }
                }
            }else {
                resultTypeSchedule=doctorScheduleLis;
            }
            $scope.doctorSchedule=resultTypeSchedule;

        };
        //跳转到确认挂号页面
        $scope.showRegistConfirm=function(doctor,Clinicduration){
            RegistDoctorScheduleService.doctor=doctor;
            var doctorScheduleList=null;
            for(var i=0;i<doctor.DOCTOR_SCHEDULE_LIST.length;i++){
                if(doctor.DOCTOR_SCHEDULE_LIST[i].CLINIC_DURATION==Clinicduration){
                    doctorScheduleList=doctor.DOCTOR_SCHEDULE_LIST[i];
                }
            }
            RegistDoctorScheduleService.SceduleListData=doctorScheduleList;

                $state.go("regist_confirm");
        };
        //医生类别：专家，普通
        $scope.showDoctorType=function(clinicType){
            //clinicType：1：专家，0：普通
            if(clinicType==1){
                return "resource/images/appoint/doctortpye1.png";
            }else{
                return "resource/images/appoint/doctortpye2.png";
            }
        };
        //医生号源的判断
        $scope.showDoctorSource=function(doctorSource){
            if(doctorSource=="有"){
                return "resource/images/appoint/doctor_exist.png";
            }else{
                return"resource/images/appoint/doctor_notexist.png";
            }
        }

    })
    .build();


/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/4
 * 创建原因：确认挂号服务
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.regist.regist_registConfirm.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("RegistConfirmService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){
        var clinicData = {
            //获取号源数据
            queryClinicData : function(params, onSuccess){
                HttpServiceBus.connect({
                    url : "/register/action/RegisterActionC.jspx",
                    params : {
                        op : "getRegClinicDetailActionC",
                        hospitalID:params,
                        CLINIC_DATE:"2015/05/04",
                        HB_TIME:"下午",
                        DEPT_CODE:"产科",
                        DOCTOR_CODE:"1110",
                        PATIENT_ID:"45093603",
                        USER_VS_ID:34090
                    },
                    onSuccess : function(data){
                        if(data.success){
                            var clinicData=data.data.rows;
                            onSuccess(clinicData);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            },
            //获取就诊者信息
            queryClientinfo : function(params, onSuccess){
                HttpServiceBus.connect({
                    url : "/center/action/CustomPatientAction.jspx",
                    params : {
                        op : "queryCardInAppoint",
                        hospitalID:params,
                        USER_VS_IS:34090,
                        operateCurrent_UserId:24388,
                         USER_VS_ID:34090
                    },
                    onSuccess : function(data){
                        if(data !=null && data !=undefined){
                            var Clientinfo=data.data.rows;

                            onSuccess(Clientinfo);
                        }else{
                            return "网络异常";
                        }
                    },
                    onError:function(){
                        return "网络异常";
                    }
                });
            }

        };
        return clinicData;
    })
    .build();


/**
 * 创建者：刘健
 * 创建时间：2015年4月29日13:29:09
 * 说明：获取挂号科室服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.regist.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("RegistDeptSelectService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){
        var deptData = {
            //获取挂号科室列表
            queryDept : function(params, onSuccess){
                HttpServiceBus.connect({
                    url : "/register/action/RegisterActionC.jspx",
                    params : {
                        loc : "c",
                        op : "getRegistDeptDictActionC",
                        isLogin : "false",
                        opVersion : "1.2.10",
                        operateUserSource : "0",
                        hospitalID:params
                    },
                    onSuccess : function(data){
                        if(data.success){
                            var deptTables=data.data.rows;
                            var resultData=deptData.dealDeptData(deptTables);
                            onSuccess(resultData);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            },
            //处理后台返回的科室数据
            dealDeptData:function(deptTables){
                var  letters=[];//获取字母数组
                var resultMap={};//获取字母对应的科室
                var result={};//返回处理后的数据
                for(var i=0; i<deptTables.length ;i++){
                    if(resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] == undefined){
                        var list = [];
                        list.push(deptTables[i]);
                        resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] = list;
                        letters.push(deptTables[i].FULL_UPPER_SPELL.substr(0,1));
                        letters=letters.sort();
                    }else{
                        resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)].push(deptTables[i]);
                    }
                }
                result["letters"]=letters;
                result["resultMap"]=resultMap;
                return result;
            }
        };
        return deptData;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/4/30
 * 创建原因：挂号医生排班服务
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.regist.regist_doctorSchedule.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("RegistDoctorScheduleService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){
            var doctorScheduleData =
            {
                queryRegistSchedule : function(params, onSuccess){
                    HttpServiceBus.connect({
                        url : "/register/action/RegisterActionC.jspx",
                        params : {
                            loc : "c",
                            op : "getRegistLabelDictActionC",
                            isLogin : "true",
                            opVersion : "1.2.10",
                            operateUserSource : "0",
                            hospitalID:params.hospitalId,
                            DEPT_CODE:params.deptCode
                        },
                        onSuccess : function(data){
                            if(data.success){
                                var doctorScheduleTable=data.data.data.rows;
                                var arrisschudleTime=doctorScheduleData.dealScheduleData(doctorScheduleTable);
                                onSuccess(arrisschudleTime,doctorScheduleTable);
                            }else{
                                KyeeMessageService.broadcast({
                                    content:data.data.message,
                                    duration:3000
                                });
                            }
                        },
                        onError:function(){
                            KyeeMessageService.broadcast({
                                content:"网络异常",
                                duration:3000
                            });
                        }
                    });
                },
                //处理后台返回的排班数据
                dealScheduleData:function(doctorScheduleTable){
                    var arrisschudleTime=[];//多个医生的号源：是否有号
                    for(var i=0;i<doctorScheduleTable.length;i++){
                        //医生擅长简介长度修改
                        doctorScheduleTable[i].DOCTOR_DESC=doctorScheduleData.doctorinfo(doctorScheduleTable[i].DOCTOR_DESC);
                        var isschudleTime=[];//一个医生的上午或下午的排班
                        for(var j=0;j<doctorScheduleTable[i].DOCTOR_SCHEDULE_LIST.length;j++){
                            var isTime=doctorScheduleTable[i].DOCTOR_SCHEDULE_LIST[j].ISTIME;//一个医生的上午或下午的排班号源 1：有，0：无
                            //单个排班判断
                            isschudleTime.push(isTime);
                        }
                        if(isschudleTime.indexOf("1") !=-1){
                            arrisschudleTime.push("有");
                        }else{
                            arrisschudleTime.push("无");
                        }
                    };
                    console.log("多个医生的号源"+arrisschudleTime);
                    return arrisschudleTime;
                },
                //医生擅长
                 doctorinfo:function(doctorInfo){
                    if(doctorInfo==null && doctorInfo==undefined)
                    {
                        return "";
                    }else{
                        if (doctorInfo.length > 30) {
                            return doctorInfo.substring(0,30) + "......";
                        }
                        else{
                            return doctorInfo;
                        }
                    }
                }
            };
        return doctorScheduleData;


    })
    .build();

/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月7日13:46:40
 * 创建原因：KYEEAPPC-1958 报告单-检查单controller
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.report.check.controller")
    .require(["kyee.quyiyuan.check.service","kyee.quyiyuan.report.service",
        "kyee.quyiyuan.center.authentication.controller", "kyee.framework.service.utils"])
    .type("controller")
    .name("CheckController")
    .params(["$scope","CheckService","ReportService","HttpServiceBus","CacheServiceBus","KyeeUtilsService"])
    .action(function($scope,CheckService,ReportService,HttpServiceBus,CacheServiceBus,KyeeUtilsService){
        //初始化默认选中第一项(全部)
        $scope.isCheckTabActive='0';
        //单击项目
        $scope.clickItem= function(index){
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }
            else{
                $scope.isDisplay = index;
            }
        };
        //页签数据过滤器
        $scope.isDisplayAll = true;
        $scope.filterData = function(data){
            if($scope.isCheckTabActive=='1'){
                //本周数据
                var _day = 1000 * 60 * 60 * 24;
                var now = new Date();
                // 第一天日期
                var firstDay = new Date(now - (now.getDay() - 1) * _day);
                // 最后一天日期
                var lastDay = new Date((firstDay * 1) + 6 * _day);
                //格式化日期
                var formatFirstDay = ReportService.getNowFormatDate(firstDay);
                var formatLastDay = ReportService.getNowFormatDate(lastDay);
                //返回本周数据
                $scope.isDisplayAll = false;
                return (data.EXAM_DATE_TIME >= formatFirstDay &&
                    data.EXAM_DATE_TIME <= formatLastDay)|| data.EXAM_DATE_TIME == null;
            }else if($scope.isCheckTabActive=='2'){
                //本月数据
                var date = new Date();
                //计算当前和下个月日期
                var currentDate = date;
                currentDate.setDate(1);
                var currentMonth=date.getMonth();
                var nextMonth=++currentMonth;
                var nextMonthFirstDay=new Date(date.getFullYear(),nextMonth,1);
                var oneDay=1000*60*60*24;
                var nextDate = new Date(nextMonthFirstDay-oneDay);
                //格式化日期
                var formatCurrentDate = ReportService.getNowFormatDate(currentDate);
                var formatNextDate = ReportService.getNowFormatDate(nextDate);
                //返回本月数据
                $scope.isDisplayAll = false;
                return (data.EXAM_DATE_TIME >= formatCurrentDate &&
                    data.EXAM_DATE_TIME <= formatNextDate)|| data.EXAM_DATE_TIME == null;
            }else{
                //返回全部数据
                $scope.isDisplayAll = true;
                return data;
            }
        };

        //初始化分页加载信息
        var currentPage = 1; //当前是第一页
        var count = 8; //每页显示数据为2条
        var startNo = 0; //数据开始NO
        var rows = currentPage * count;
        //是否显示数据已加载完毕标识
        $scope.noLoad = true;
        //默认当前数据为空
        $scope.checkData=[];
        //加载更多
        $scope.loadMore = function(){
            var datas ="";
            CheckService.loadData(startNo,currentPage,rows,$scope,function(data){
                datas = data.data.rows;
                //校验数据是否加载完
                var currentNum =  $scope.checkData.length+datas.length;
                if(datas.length<count || currentNum== $scope.checkData.length){
                    $scope.noLoad = false;
                }
                //追加加载数据
                for(var i=0;i<datas.length;i++){
                    $scope.checkData.push(datas[i]);
                }
                currentPage = currentPage+1; //下一页
                $scope.$broadcast('scroll.infiniteScrollComplete');
            });
        };

        //用户信息
        //当前就诊者信息
        var userInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
        if(userInfo != null){
            //姓名
            $scope.USER_NAME = userInfo.OFTEN_NAME;
            //年龄
            var age = new Date().getFullYear()-new Date(userInfo.DATE_OF_BIRTH).getFullYear();
            $scope.AGE = age;
            //性别
            $scope.SEX = userInfo.SEX=='1'?'男':'女';
        }else{
            $scope.USER_NAME = "未知姓名";
            $scope.AGE = "0";
            $scope.SEX = "男";
        };
        //日期格式化
        $scope.getDate = function(param){
            if(param !=undefined && param !=null && param !=""){
                return KyeeUtilsService.DateUtils.formatFromDate(param,'YYYY/MM/DD');
            }
        };
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月7日13:46:40
 * 创建原因：KYEEAPPC-1959 报告单-体检单controller
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.report.medical.controller")
    .require(["kyee.quyiyuan.medical.service","kyee.quyiyuan.report.medicaldetail.controller",
        "kyee.framework.service.view","kyee.framework.service.utils"])
    .type("controller")
    .name("MedicalController")
    .params(["$scope","MedicalService","KyeeViewService","CacheServiceBus","$state","KyeeUtilsService"])
    .action(function($scope,MedicalService,KyeeViewService,CacheServiceBus,$state,KyeeUtilsService){
        //单击项目
        $scope.clickItem= function(index){
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }
            else{
                $scope.isDisplay = index;
            }
        };
        //打开详细信息界面
        $scope.openMedicalDetail= function(medicalDetailData){
            //存储到缓存
            MedicalService.medicalDetailData=medicalDetailData;
            $state.go('medicaldetail');
        };
        //初始化数据
        MedicalService.loadData(0,1,1,"",function(data){
            $scope.medicalData = data.data.rows;
        });
        //搜索功能
        $scope.doSearchMedical = function(){
            var examId =searchNo;
            currentPage=1;
            if(examId=="" || examId==undefined || examId==null){
                this.loadMore();
            }else{
                MedicalService.loadData(0,1,1,examId,function(data){
                    $scope.medicalData = data.data.rows;
                });
            }
        };
        //打开医学申明页面
        $scope.openMedicalStatement = function(MEDICAL_STATE){
            //存储到缓存
            MedicalService.MEDICAL_STATE=MEDICAL_STATE;
            KyeeViewService.openModalFromUrl({
                url : "modules/business/report/views/medicalStatement.html",
                scope : $scope
            });
        }
        //判断为空
        $scope.checkEmpty = function(value){
            if((value == '' ||  value == undefined || value == null)){
                return true;
            } else {
                return false;
            }
        };
        //日期格式化
        $scope.getDate = function(param){
            if(param !=undefined && param !=null && param !=""){
                return KyeeUtilsService.DateUtils.formatFromDate(param,'YYYY/MM/DD');
            }
        };
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月7日13:46:40
 * 创建原因：KYEEAPPC-1959 报告单-体检单详情controller
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.report.medicaldetail.controller")
    .require(["kyee.quyiyuan.medical.service","kyee.quyiyuan.report.controller",
        "kyee.quyiyuan.regist.service","kyee.quyiyuan.appoint.doctor_schedule.service",
        "kyee.framework.service.utils"
    ])
    .type("controller")
    .name("MedicalDetailController")
    .params(["$scope","MedicalService","RegistDeptSelectService","AppointDeptSelectService","$state","KyeeUtilsService"])
    .action(function($scope,MedicalService,RegistDeptSelectService,AppointDeptSelectService,$state,KyeeUtilsService){
        //初始化数据
        $scope.medicalDetailDatas = MedicalService.medicalDetailData;
        //页面跳转
        $scope.gotoRegistOrAppointPage = function(medicalDetailData){
            //测试数据
            //medicalDetailData.SKIP_TYPE='2';
            //medicalDetailData.SKIP_DEPT_CODE='产科';
            //medicalDetailData.SKIP_DEPT_NAME='产科';
            var params={DEPT_CODE:medicalDetailData.SKIP_DEPT_CODE,DEPT_NAME:medicalDetailData.SKIP_DEPT_NAME};
            if(medicalDetailData.SKIP_TYPE=='1'){
                //跳转到预约页面
                AppointDeptSelectService.deptData=params;
                $state.go('appoint_schedule');
            }else if(medicalDetailData.SKIP_TYPE=='2'){
                //跳转挂号页面
                RegistDeptSelectService.deptData= params;
                $state.go('regist_doctorSchedule');
            }
        };
        //日期格式化
        $scope.getDate = function(param){
            if(param !=undefined && param !=null && param !=""){
                return KyeeUtilsService.DateUtils.formatFromDate(param,'YYYY/MM/DD');
            }
        };
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月7日13:46:40
 * 创建原因：KYEEAPPC-1959 报告单-体检单医学申明controller
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.report.medicalStatement.controller")
    .require(["kyee.quyiyuan.medical.service","kyee.quyiyuan.report.controller",
        "kyee.framework.service.view"])
    .type("controller")
    .name("MedicalStatementController")
    .params(["$scope","MedicalService","KyeeViewService"])
    .action(function($scope,MedicalService,KyeeViewService){
        //返回按钮操作
        $scope.close = function(){
            KyeeViewService.hideModal({
                scope:$scope
            });
        };
        //初始化数据
        $scope.MEDICAL_STATE = MedicalService.MEDICAL_STATE;
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月6日09:05:22
 * 创建原因：KYEEAPPC-1957 报告单-主界面、检验单controller
 * 修改：
 */
new KyeeModule()
.group("kyee.quyiyuan.report.controller")
.require(["kyee.quyiyuan.report.service","kyee.framework.service.message",
    "kyee.quyiyuan.report.check.controller","kyee.quyiyuan.report.medical.controller",
    "kyee.quyiyuan.report.medicaldetail.controller",
        "kyee.quyiyuan.report.medicalStatement.controller",
        "kyee.framework.service.view","kyee.quyiyuan.report.inspectiondetail.controller",
        "kyee.quyiyuan.center.authentication.controller",
    "kyee.framework.service.utils"])
.type("controller")
.name("ReportController")
.params(["$scope","ReportService","KyeeMessageService","CacheServiceBus","KyeeViewService","KyeeUtilsService"])
.action(function($scope,ReportService,KyeeMessageService,CacheServiceBus,KyeeViewService,KyeeUtilsService){
        //初始化默认选中第一项(检验单)
        $scope.isTabActive='0';
        //初始化默认选中第一项(全部)
        $scope.isInspectionTabActive='0';
        //页签数据过滤器
        $scope.isDisplayAll = true; //日期过滤时是否显示“已全部加载”
        $scope.filterData = function(data){
            if($scope.isInspectionTabActive=='1'){
                //本周数据
                var _day = 1000 * 60 * 60 * 24;
                var now = new Date();
                // 第一天日期
                var firstDay = new Date(now - (now.getDay() - 1) * _day);
                // 最后一天日期
                var lastDay = new Date((firstDay * 1) + 6 * _day);
                //格式化日期
                var formatFirstDay = ReportService.getNowFormatDate(firstDay);
                var formatLastDay = ReportService.getNowFormatDate(lastDay);
                //返回本周数据
                $scope.isDisplayAll = false;
                return (data.REQUESTED_DATE_TIME >= formatFirstDay &&
                        data.REQUESTED_DATE_TIME <= formatLastDay)|| data.REQUESTED_DATE_TIME == null;
            }else if($scope.isInspectionTabActive=='2'){
                //本月数据
                var date = new Date();
                //计算当前和下个月日期
                var currentDate = date;
                currentDate.setDate(1);
                var currentMonth=date.getMonth();
                var nextMonth=++currentMonth;
                var nextMonthFirstDay=new Date(date.getFullYear(),nextMonth,1);
                var oneDay=1000*60*60*24;
                var nextDate = new Date(nextMonthFirstDay-oneDay);
                //格式化日期
                var formatCurrentDate = ReportService.getNowFormatDate(currentDate);
                var formatNextDate = ReportService.getNowFormatDate(nextDate);
                //返回本月数据
                $scope.isDisplayAll = false;
                return (data.REQUESTED_DATE_TIME >= formatCurrentDate &&
                    data.REQUESTED_DATE_TIME <= formatNextDate)|| data.REQUESTED_DATE_TIME == null;
            }else{
                //返回全部数据
                $scope.isDisplayAll = true;
                return data;
            }
        };

        //单击某一项目
        $scope.clickItem= function(index,inspectionDetailData){
            ReportService.INSPECTION_DETAIL = inspectionDetailData; //明细信息
            //如果明细信息不为空或者明细图片不为空，跳转至明细页面
            if(this.getLengths(inspectionDetailData.LABDETAIL)!=0 || !this.getUrl(inspectionDetailData.PHOTO_URL)){
                KyeeViewService.openModalFromUrl({
                    url : "modules/business/report/views/inspection_detail.html",
                    scope : $scope
                });
            }
        };
        //获得某数据的长度
        $scope.getLengths = function(data){
            if(data!=null&&data!=undefined){
                return data.length;
            }else{
                return 0;
            }
        };
        //校验某数据是否存在
        $scope.getUrl = function(PHOTO_URL){
            if(PHOTO_URL==null || PHOTO_URL==undefined || PHOTO_URL ==""){
                return true;
            }
        };

        //初始化分页加载信息
        var currentPage = 1; //当前是第一页
        var count = 8; //每页显示数据为2条
        var startNo = 0; //数据开始NO
        var rows = currentPage * count;
        //是否显示数据已加载完毕标识
        $scope.noLoad = true;
        //默认当前数据为空
        $scope.inspectionData=[];
        //加载更多
        $scope.loadMore = function(){
            var datas ="";
            ReportService.loadData(startNo,currentPage,rows,$scope,function(data){
                datas = data.data.rows;
                //校验数据是否加载完
                var currentNum =  $scope.inspectionData.length+datas.length;
                if(datas.length<count || currentNum== $scope.inspectionData.length){
                    $scope.noLoad = false;
                }
                //追加加载数据
                for(var i=0;i<datas.length;i++){
                    $scope.inspectionData.push(datas[i]);
                }
                currentPage = currentPage+1; //下一页
                $scope.$broadcast('scroll.infiniteScrollComplete');
            });

        };

        //控制是否显示搜索框
        $scope.QUERY_LAB_SHOW='0'; //'0'表示不显示搜索框，'1'表示显示搜索框
        ReportService.getIsDisplayQueryParam(function(data){
            $scope.QUERY_LAB_SHOW = data.data.QUERY_LAB_SHOW;
        });

        //检索报告单
        $scope.search = function(){
            var testNo = searchNo;
            currentPage=1;
            if(testNo=="" || testNo==undefined || testNo==null){
                this.loadMore();
            }else{
                ReportService.searchData(testNo,function(data){
                    $scope.inspectionData = data.data.rows;
                });
            }
        };

        //当前就诊者信息
        var userInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
        if(userInfo != null){
            //姓名
            $scope.USER_NAME = userInfo.OFTEN_NAME;
            //年龄
            var age = new Date().getFullYear()-new Date(userInfo.DATE_OF_BIRTH).getFullYear();
            $scope.AGE = age;
            //性别
            $scope.SEX = userInfo.SEX=='1'?'男':'女';
        }else{
            $scope.USER_NAME = "未知姓名";
            $scope.AGE = "0";
            $scope.SEX = "男";
        };
        //日期格式化
        $scope.getDate = function(param){
            if(param !=undefined && param !=null && param !=""){
                return KyeeUtilsService.DateUtils.formatFromDate(param,'YYYY/MM/DD');
            }
        };
    })
.build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月10日13:00:26
 * 创建原因：KYEEAPPC-1957 报告单-检验单明细controller
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.report.inspectiondetail.controller")
    .require(["kyee.quyiyuan.report.service","kyee.quyiyuan.report.controller",
        "kyee.framework.service.view","kyee.framework.service.utils"])
    .type("controller")
    .name("InspectionDetailController")
    .params(["$scope","ReportService","KyeeViewService","KyeeUtilsService"])
    .action(function($scope,ReportService,KyeeViewService,KyeeUtilsService){
        //返回按钮操作
        $scope.close = function(){
            KyeeViewService.hideModal({
                scope:$scope
            });
        };
        //初始化数据
        $scope.displayPic = false; //是否显示图片
        //ReportService.INSPECTION_DETAIL.PHOTO_URL= "http://c.hiphotos.baidu.com/zhidao/pic/item/71cf3bc79f3df8dc8baaddb1cc11728b4710287e.jpg";
        $scope.INSPECTION_DETAIL = ReportService.INSPECTION_DETAIL;
        var url = ReportService.INSPECTION_DETAIL.PHOTO_URL;
        if(url != null && url != undefined && url !=""){
            $scope.PHOTO_URL = ReportService.INSPECTION_DETAIL.PHOTO_URL;
            $scope.displayPic=true;
        }else{
            $scope.INSPECTION_DETAIL_RESULT = eval( ReportService.INSPECTION_DETAIL.LABDETAIL);
        }
        //单击项目
        $scope.clickItem = function (index) {
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }
            else{
                $scope.isDisplay = index;
            }
        };
        //校验值是否正常（高或者低）
        $scope.checkHighOrLow = function(reference_range){
            if(reference_range != null && reference_range != ''){
                if(reference_range=='H'){
                    return 1;  //阳
                }
                if(reference_range=='L'){
                    return -1; //阴
                }else{
                    return 0;
                }
            }else{
                return 0;
            }
        };
        //日期格式化
        $scope.getDate = function(param){
            if(param !=undefined && param !=null && param !=""){
                return KyeeUtilsService.DateUtils.formatFromDate(param,'YYYY/MM/DD');
            }
        };
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月6日09:05:22
 * 创建原因：KYEEAPPC-1957 报告单-主界面controller
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.reportmain.controller")
    .require(["kyee.quyiyuan.report.service",
        "kyee.quyiyuan.report.check.controller","kyee.quyiyuan.report.medical.controller",
        "kyee.quyiyuan.report.medicaldetail.controller",
        "kyee.quyiyuan.report.medicalStatement.controller"])
    .type("controller")
    .name("ReportMainController")
    .params(["$scope","ReportService"])
    .action(function($scope,ReportService){
        //初始化默认选中第几项
        if(ReportService.isOtherView){
            $scope.isTabActive = ReportService.tabIndex;
            ReportService.isOtherView = false;
        }else{
            $scope.isTabActive ='0';
        }
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月7日13:46:40
 * 创建原因：KYEEAPPC-1958 报告单-检查单service
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.check.service")
    .require(["kyee.framework.service.message","kyee.framework.service.view"])
    .type("service")
    .name("CheckService")
    .params(["HttpServiceBus","KyeeMessageService","$state","KyeeViewService","CacheServiceBus"])
    .action(function(HttpServiceBus,KyeeMessageService,$state,KyeeViewService,CacheServiceBus){
        var def = {
            //初始化加载检查单数据
            loadData:function(start,page,rows,$scope,onSuccess){
                HttpServiceBus.connect({
                    url : "report/action/ExamActionC.jspx",
                    params : {
                        //loc : "c",
                        op : "queryDetailExam",
                        //isLogin : "true",
                        //USER_VS_ID:'126774', //1135  126774
                        //USER_VS_ID:function () {
                        //    var userInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
                        //    return userInfo.USER_VS_ID;
                        //},
                        //opVersion : "1.2.10",
                        //operateCurrent_UserId:'3862', //2164591 3862
                        //hospitalID : '1001', //1501 1001
                        start:start,
                        page:page,
                        rows:rows
                    },
                    //cache:{
                    //    by:'TIME',
                    //    value:60 //秒
                    //},
                    onSuccess : function(data){
                        if(data !=null ){
                            //数据获取成功
                            if(data.success){
                                if(data.data.total==0){
                                    KyeeMessageService.message({
                                        title:'您目前还没有检查单记录'
                                    });
                                    return;
                                }
                                onSuccess(data);
                            }
                            //数据获取失败
                            else{
                                //测试模拟
                                //data.message="INFO|个人信息维护";
                                //data.message ="CARD|查询就诊卡";
                                //data.message = "0|功能未开放";
                                //data.message = "不存在记录";
                                //data.message = "HANGLEING|实名认证";
                                //data.message = "FAILURE|实名认证";
                                //data.message = "UNAUTHENTICATED|实名认证";
                                if(data.message != '' && data.message != null && data.message != undefined){
                                    var array = data.message.split('|');
                                    //功能未开放
                                    if((array[0] == 0||array[0] == '0')&&array[1]!=undefined){
                                        KyeeMessageService.message({
                                            title:array[1]
                                        });
                                        return;
                                    }
                                    else if(array[0] == '不存在记录'){
                                        //显示无数据提示
                                        KyeeMessageService.message({
                                            title:'您目前还没有检查单记录'
                                        });
                                        return;
                                    }
                                    //实名认证正在处理--HANGLEING 实名认证失败--FAILURE 实名认证未认证--UNAUTHENTICATED
                                    else if((array[0] == 'HANGLEING'|| array[0] == 'FAILURE' || array[0] == 'UNAUTHENTICATED')
                                        && array[1]!=undefined){
                                        KyeeMessageService.confirm({
                                            title:'温馨提示',
                                            content:array[1],
                                            onSelect:function(btnId){
                                                if(btnId){
                                                    //点击确定，页面跳转到“实名认证”页面
                                                    KyeeViewService.openModalFromUrl({
                                                        scope : $scope,
                                                        url :  'modules/business/center/views/authentication/authentication.html'
                                                    });
                                                }
                                            }
                                        });
                                        return;
                                    }
                                    //选择就诊卡
                                    else if((array[0] == 'CARD')&&array[1]!=undefined){
                                        KyeeMessageService.confirm({
                                            title:'温馨提示',
                                            content:array[1],
                                            onSelect:function(btnId){
                                                if(btnId){
                                                    //点击确定，页面跳转到“查询就诊卡”页面
                                                    KyeeViewService.openModalFromUrl({
                                                        scope : $scope,
                                                        url : 'modules/business/center/views/update_user/query_his_card.html'
                                                    });
                                                }
                                            }
                                        });
                                        return;
                                    }
                                    //完善个人信息
                                    else if((array[0] == 'INFO')&&array[1]!=undefined){
                                        KyeeMessageService.confirm({
                                            title:'温馨提示',
                                            content:array[1],
                                            onSelect:function(btnId){
                                                if(btnId){
                                                    //点击确定，页面跳转到“个人信息维护”页面
                                                    $state.go('update_user');
                                                }
                                            }
                                        });
                                        return;
                                    }
                                    else{
                                        KyeeMessageService.message({
                                            title:'当前网络不太给力'
                                        });
                                        return;
                                    }
                                }
                                else{
                                    KyeeMessageService.message({
                                        title:'当前网络不太给力'
                                    });
                                    return;
                                }
                            }
                        }
                    },
                    onError　: function(){

                    }
                })
            }

        };
        return def;
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月7日13:46:40
 * 创建原因：KYEEAPPC-1959 报告单-体检单service
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.medical.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("MedicalService")
    .params(["HttpServiceBus","KyeeMessageService","CacheServiceBus"])
    .action(function(HttpServiceBus,KyeeMessageService,CacheServiceBus){
        var medicalDetailData = null; //体检单明细信息
        var MEDICAL_STATE = null; //医学申明信息
        var def = {
            //获得初始数据
            loadData:function(startNo,currentPage,rows,examId,onSuccess){
                HttpServiceBus.connect({
                    url : "report/action/PhysicalExamActionC.jspx",
                    params : {
                        //loc : "c",
                        op : "queryPhysicalExamInfo",
                        //isLogin : "true",
                        //USER_ID: '3862', //3862 2164591
                        //USER_ID:function () {
                        //    var userInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
                        //    return userInfo.USER_ID;
                        //},
                        //USER_VS_ID:'126774', //126774 1135
                        //USER_VS_ID:function () {
                        //    var userInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
                        //    return userInfo.USER_VS_ID;
                        //},
                        EXAM_ID:examId,
                        //opVersion : "1.2.10",
                        //operateCurrent_UserId:'3862', //3862 2164591
                        //hospitalID : '1001', //1001 1501
                        start:startNo,
                        page:currentPage,
                        rows:rows

                    },
                    onSuccess : function(data){
                        if(data !=null ){
                            //数据获取成功
                            if(data.success){
                                if(data.data.total==0){
                                    KyeeMessageService.message({
                                        title:'您目前还没有体检报告记录'
                                    });
                                    return;
                                }
                                onSuccess(data);
                            }
                            //数据获取失败
                            else{
                                //功能未开放
                                if((array[0] == 0||array[0] == '0')&&array[1]!=undefined){
                                    KyeeMessageService.message({
                                        title:array[1]
                                    });
                                    return;
                                }else{
                                    KyeeMessageService.message({
                                        title:'当前网络不太给力'
                                    });
                                    return;
                                }
                            }
                        }

                    },
                    onError　: function(){

                    }
                })
            }
        };
        return def;
    })
    .build();
/**
 * 产品名称 quyiyuan.
 * 创建用户: WangYuFei
 * 日期: 2015年5月6日09:05:22
 * 创建原因：KYEEAPPC-1957 报告单-主界面、检验单service
 * 修改：
 */
new KyeeModule()
    .group("kyee.quyiyuan.report.service")
    .require(["kyee.framework.service.message","kyee.framework.service.view"])
    .type("service")
    .name("ReportService")
    .params(["HttpServiceBus","KyeeMessageService","$state","KyeeViewService","CacheServiceBus"])
    .action(function(HttpServiceBus,KyeeMessageService,$state,KyeeViewService,CacheServiceBus){
        var INSPECTION_DETAIL = null; //检验单明细
        var def = {
            tabIndex : null, //跳转页签id
            isOtherView :false, //是否是其他页面跳转
            //跳转至报告单某页面0 检验单 1 检查单 2 体检报告
            goToReport :function(id){
                $state.go('report');
                this.tabIndex = id;
                this.isOtherView=true;
            },
            //获得初始数据
            loadData:function(start,page,rows,$scope,onSuccess){
                HttpServiceBus.connect({
                    url : "report/action/LabActionC.jspx",
                    params : {
                        loc : "c",
                        op : "queryLabDetail",
                        //isLogin : "true",
                        //USER_VS_ID:'126774', //726 126774 //就诊者ID
                        //USER_VS_ID:function () {
                        //    var userInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
                        //    return userInfo.USER_VS_ID;
                        // },
                        //opVersion : "1.2.10",
                        //operateCurrent_UserId:'3862', //2164442  3862
                        //hospitalID : '1001', //1501  1001
                        start:start,
                        page:page,
                        rows:rows

                    },
                    //cache:{
                    //    by:'TIME',
                    //    value:60 //秒
                    //},
                    onSuccess : function(data){
                        if(data !=null ){
                            //数据获取成功
                            if(data.success){
                                if(data.data.total==0){
                                    KyeeMessageService.message({
                                        title:'您目前还没有检验单记录'
                                    });
                                    return;
                                }
                                onSuccess(data);
                            }
                            //数据获取失败
                            else{
                                //测试模拟
                                //data.message="HANGLEING|实名认证";
                                //data.message ="CARD|查询就诊卡";
                                //data.message = "0|功能未开放";
                                //data.message = "不存在记录";
                                //data.message = "HANGLEING|实名认证";
                                //data.message = "FAILURE|实名认证";
                                //data.message = "UNAUTHENTICATED|实名认证";
                                if(data.message != '' && data.message != null && data.message != undefined){
                                    var array = data.message.split('|');
                                    //功能未开放
                                    if((array[0] == 0||array[0] == '0')&&array[1]!=undefined){
                                        KyeeMessageService.message({
                                            title:array[1]
                                        });
                                        return;
                                    }
                                    else if(array[0] == '不存在记录'){
                                        //显示无数据提示
                                        KyeeMessageService.message({
                                            title:'您目前还没有检验单记录'
                                        });
                                        return;
                                    }
                                    //实名认证正在处理--HANGLEING 实名认证失败--FAILURE 实名认证未认证--UNAUTHENTICATED
                                    else if((array[0] == 'HANGLEING'|| array[0] == 'FAILURE' || array[0] == 'UNAUTHENTICATED')
                                        && array[1]!=undefined){
                                        KyeeMessageService.confirm({
                                            title:'温馨提示',
                                            content:array[1],
                                            onSelect:function(btnId){
                                                if(btnId){
                                                    //点击确定，页面跳转到“实名认证”页面
                                                    KyeeViewService.openModalFromUrl({
                                                        scope : $scope,
                                                        url :  'modules/business/center/views/authentication/authentication.html'
                                                    });

                                                }
                                            }
                                        });
                                        return;
                                    }
                                    //选择就诊卡
                                    else if((array[0] == 'CARD')&&array[1]!=undefined){
                                        KyeeMessageService.confirm({
                                            title:'温馨提示',
                                            content:array[1],
                                            onSelect:function(btnId){
                                                if(btnId){
                                                    //点击确定，页面跳转到“查询就诊卡”页面
                                                    KyeeViewService.openModalFromUrl({
                                                        scope : $scope,
                                                        url : 'modules/business/center/views/update_user/query_his_card.html'
                                                    });
                                                }
                                            }
                                        });
                                        return;
                                    }
                                    //完善个人信息
                                    else if((array[0] == 'INFO')&&array[1]!=undefined){
                                        KyeeMessageService.confirm({
                                            title:'温馨提示',
                                            content:array[1],
                                            onSelect:function(btnId){
                                                if(btnId){
                                                    //点击确定，页面跳转到“个人信息维护”页面
                                                    $state.go('update_user');
                                                }
                                            }
                                        });
                                        return;
                                    }
                                    else{
                                        KyeeMessageService.message({
                                            title:'当前网络不太给力'
                                        });
                                        return;
                                    }
                                }
                                else{
                                    KyeeMessageService.message({
                                        title:'当前网络不太给力'
                                    });
                                    return;
                                }
                            }
                        }

                    },
                    onError　: function(){
                    }
                })
            },
            //获得是否显示搜索框参数
            getIsDisplayQueryParam:function(onSuccess){
                HttpServiceBus.connect({
                    url : "hospitalInform/action/HospitalinforActionC.jspx",
                    params : {
                        //loc : "c",
                        op : "queryHospitalParam",
                        hospitalId : function () {
                            //获取 StorageCache 服务
                            var storageCache = KyeeAppHelper.getSimpleService("kyee.quyiyuan.service_bus.cache", "CacheServiceBus").getStorageCache();
                            var hospitalInfo = storageCache.get("hospitalInfo");
                            if (hospitalInfo != null) {
                                return hospitalInfo.id;
                            }
                            return null;
                        },
                        paramName:"QUERY_LAB_SHOW"
                        //page:1,
                        //start:0,
                        //limit:25
                    },
                    cache:{
                      by:'TIME',
                        value:60
                    },
                    onSuccess : function(data){
                        if(data !=null ){
                            //数据获取成功
                            if(data.success){
                                onSuccess(data);
                            }
                            //数据获取失败
                            else{

                            }
                        }

                    },
                    onError　: function(){

                    }
                })
            },
            //检索报告单好
            searchData:function(testNo,onSuccess){
                HttpServiceBus.connect({
                    url : "report/action/LabActionC.jspx",
                    params : {
                        //loc : "c",
                        op : "queryLabByTestNo",
                        //isLogin : "true",
                        //USER_VS_ID:'126774',
                        //USER_VS_ID:function () {
                        //    var userInfo = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT);
                        //    return userInfo.USER_VS_ID;
                        //},
                        //opVersion : "1.2.10",
                        //operateCurrent_UserId:'7237',
                        //hospitalID : '1001',
                        start:0,
                        page:1,
                        rows:8,
                        TEST_NO:testNo

                    },
                    onSuccess : function(data){
                        if(data !=null ){
                            //数据获取成功
                            if(data.success){
                                onSuccess(data);
                            }
                            //数据获取失败
                            else{

                            }
                        }

                    },
                    onError　: function(){

                    }
                })
            },
            //日期格式化为yyyy-mm-dd格式
            getNowFormatDate :function (dateString) {
                var day = dateString;
                var Year = 0;
                var Month = 0;
                var Day = 0;
                var CurrentDate = "";
                //初始化时间
                Year= day.getFullYear();//ie火狐下都可以
                Month= day.getMonth()+1;
                Day = day.getDate();
                CurrentDate += Year + "-";
                if (Month >= 10 )
                {
                    CurrentDate += Month + "-";
                }
                else
                {
                    CurrentDate += "0" + Month + "-";
                }
                if (Day >= 10 )
                {
                    CurrentDate += Day ;
                }
                else
                {
                    CurrentDate += "0" + Day ;
                }
                return CurrentDate;
            }
        };
        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：追加评价页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.appendSuggest.controller")
    .require([])
    .type("controller")
    .name("AppendSuggestController")
    .params(["$scope", "SatisfactionDoctorService", "KyeeViewService", "KyeeMessageService"])
    .action(function($scope, SatisfactionDoctorService, KyeeViewService, KyeeMessageService){

        /**
         * 返回按钮函数
         */
        $scope.close = function(){
            KyeeViewService.hideModal({
                scope : $scope
            });
        };

        /**
         * 提交追加评论函数
         * @param data
         */
        $scope.appendSubmmit = function (data) {
            if(data && data.trim()){
                $scope.data["SUGGEST_APPEND"] = data;
                SatisfactionDoctorService.saveSatisfactionData(
                    $scope.data,
                    function(data){
                        SatisfactionDoctorService.data.IS_SUGGEST = 2;
                        $scope.close();
                    });
            } else {
                KyeeMessageService.message({
                    content: "追加评论内容不能为空！"
                });
            }
        };
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医生评价页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionDoctor.controller")
    .require(["kyee.quyiyuan.satisfaction.appendSuggest.controller"])
    .type("controller")
    .name("SatisfactionDoctorController")
    .params(["$scope", "$state", "KyeeMessageService",
        "SatisfactionDoctorService", "KyeeViewService",
        "SatisfactionHospitalService", "CacheServiceBus"])
    .action(function($scope, $state, KyeeMessageService,
                     SatisfactionDoctorService, KyeeViewService, SatisfactionHospitalService,
                     CacheServiceBus){

        // 初始化页面数据
        $scope.data = SatisfactionDoctorService.data;

        /**
         * 星号点击事件
         * @param index
         * @param score
         */
        $scope.starClick = function (index, score) {
            if(SatisfactionDoctorService.data.IS_SUGGEST == 0){
                $scope.items[index].SCORE_VALUE = score;
                SatisfactionDoctorService.pageData.items = $scope.items;
            }
        };

        if(SatisfactionDoctorService.data.IS_SUGGEST == 0){
            // 如果未评价则获取待评价项目
            SatisfactionDoctorService.querySurveyData(
                SatisfactionDoctorService.data.HOSPITAL_ID,
                function(data){
                    $scope.items = data;
                    SatisfactionDoctorService.pageData = {};
                    SatisfactionDoctorService.pageData.items = $scope.items;
            })
        } else {
            // 如果已评价则获取已评价数据
            SatisfactionDoctorService.querySatisfactionData(
                SatisfactionDoctorService.data.HOSPITAL_ID,
                SatisfactionDoctorService.data.REG_ID,
                function(data){
                    $scope.items = data.ITEM_SCORES;
                    $scope.data.SUGGEST_TIME = data.SUGGEST_TIME;
                    $scope.suggest = data.SUGGEST_VALUE;
                    $scope.data.SUGGEST_APPEND = data.SUGGEST_APPEND;
            })
        };

        /**
         * 保存评价函数
         */
        $scope.saveSuggest = function () {
            var postdata = $scope.data;
            postdata.ITEM_SCORES = $scope.items;
            postdata.SUGGEST_VALUE = $scope.suggest;
            postdata.USER_ID = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
            SatisfactionDoctorService.saveSatisfactionData(
                postdata,
                function(data){
                    SatisfactionDoctorService.data.IS_SUGGEST = 1;
                    SatisfactionDoctorService.data.SUGGEST_TIME = new Date().Format("yyyy/MM/dd");
                    KyeeMessageService.message({
                        title: "温馨提示",
                        content: "评论提交成功"
                    });
                })
        };

        /**
         * 评价提交事件
         */
        $scope.submit = function () {
            // 判断是否有未选择项
            var hasUnSelect = false;
            for(var index = 0; index <$scope.items.length; index++){
                if(!$scope.items[index].SCORE_VALUE){
                    hasUnSelect = true;
                    break;
                }
            }

            // 如果有则提示默认值
            if(hasUnSelect){
                KyeeMessageService.confirm({
                    title: "温馨提示",
                    content: "您有未选择项，未选择项将默认为三颗星，确认是否提交？",
                    onSelect: function (res) {
                        if(res){
                            for(var index = 0; index <$scope.items.length; index++){
                                if(!$scope.items[index].SCORE_VALUE){
                                    $scope.items[index].SCORE_VALUE = 3;
                                }
                            }
                            $scope.saveSuggest();
                        }
                    }
                });
            } else {
                $scope.saveSuggest();
            }
        };

        /**
         * 评论内容监听事件
         * @param data
         */
        $scope.writeSuggest = function (data) {
            $scope.suggest = data;
            SatisfactionDoctorService.pageData.suggest = $scope.suggest;
        };

        /**
         * 评价状态判断函数
         * @param status
         * @returns {boolean}
         */
        $scope.suggestStatus = function (status) {
            if(SatisfactionDoctorService.data.IS_SUGGEST == status || (
                status == 2 && SatisfactionDoctorService.data.IS_SUGGEST == 1)){
                return true;
            } else {
                return false;
            }
        };

        /**
         * 跳转追加评论页面
         */
        $scope.appendSuggest = function () {
            KyeeViewService.openModalFromUrl({
                url : "modules/business/satisfaction/views/append_suggest.html",
                scope : $scope
            });
        };

        Date.prototype.Format = function(fmt)
        {
            var o = {
                "M+" : this.getMonth()+1,                 //月份
                "d+" : this.getDate(),                    //日
                "h+" : this.getHours(),                   //小时
                "m+" : this.getMinutes(),                 //分
                "s+" : this.getSeconds(),                 //秒
                "q+" : Math.floor((this.getMonth()+3)/3), //季度
                "S"  : this.getMilliseconds()             //毫秒
            };
            if(/(y+)/.test(fmt))
                fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            for(var k in o)
                if(new RegExp("("+ k +")").test(fmt))
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
            return fmt;
        };
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医院评价页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionHospital.controller")
    .require([])
    .type("controller")
    .name("SatisfactionHospitalController")
    .params(["$scope", "$state", "KyeeMessageService",
        "SatisfactionHospitalService", "SatisfactionDoctorService"])
    .action(function($scope, $state, KyeeMessageService,
                     SatisfactionHospitalService, SatisfactionDoctorService){

        // 初始化页面数据
        $scope.data = SatisfactionHospitalService.data;

        /**
         * 星号点击事件
         * @param index
         * @param score
         */
        $scope.starClick = function (index, score) {
            if(SatisfactionHospitalService.data.IS_SCORE == 0){
                $scope.items[index].SCORE_VALUE = score;
                SatisfactionHospitalService.pageData.items = $scope.items;
            }
        };

        if(SatisfactionHospitalService.data.IS_SCORE == 0){
            // 如果未评价则获取待评价项目
            SatisfactionHospitalService.querySurveyData(
                SatisfactionHospitalService.data.HOSPITAL_ID,
                function(data){
                    $scope.items = data;
                    SatisfactionHospitalService.pageData = {};
                    SatisfactionHospitalService.pageData.items = $scope.items;
            })
        } else {
            // 如果已评价则获取已评价数据
            SatisfactionHospitalService.querySatisfactionData(
                SatisfactionHospitalService.data.HOSPITAL_ID,
                SatisfactionHospitalService.data.REG_ID,
                function(data){
                    $scope.items = data.ITEM_SCORES;
                    $scope.data.SUGGEST_TIME = data.SUGGEST_TIME;
                    $scope.suggest = data.SUGGEST_VALUE;
            })
        }

        /**
         * 保存评价函数
         */
        $scope.saveSuggest = function () {
            var postdata = $scope.data;
            postdata.ITEM_SCORES = $scope.items;
            postdata.OTHER = $scope.suggest;
            SatisfactionHospitalService.saveSatisfactionData(
                postdata,
                function(data){
                    SatisfactionHospitalService.data.IS_SCORE = 1;
                    SatisfactionHospitalService.data.SUGGEST_TIME = new Date().Format("yyyy/MM/dd");
                    KyeeMessageService.message({
                        title: "温馨提示",
                        content: "评论提交成功"
                    });
                })
        };

        /**
         * 评价提交事件
         */
        $scope.submit = function () {
            // 判断是否有未选择项
            var hasUnSelect = false;
            for(var index = 0; index <$scope.items.length; index++){
                if(!$scope.items[index].SCORE_VALUE){
                    hasUnSelect = true;
                    break;
                }
            }

            // 如果有则提示默认值
            if(hasUnSelect){
                KyeeMessageService.confirm({
                    title: "温馨提示",
                    content: "您有未选择项，未选择项将默认为三颗星，确认是否提交？",
                    onSelect: function (res) {
                        if(res){
                            for(var index = 0; index <$scope.items.length; index++){
                                if(!$scope.items[index].SCORE_VALUE){
                                    $scope.items[index].SCORE_VALUE = 3;
                                }
                            }
                            $scope.saveSuggest();
                        }
                    }
                });
            } else {
                $scope.saveSuggest();
            }
        };

        /**
         * 评论内容监听事件
         * @param data
         */
        $scope.writeSuggest = function (data) {
            $scope.suggest = data;
            SatisfactionHospitalService.pageData.suggest = $scope.suggest;
        };

        /**
         * 评价状态判断函数
         * @param status
         * @returns {boolean}
         */
        $scope.suggestStatus = function (status) {
            if(SatisfactionHospitalService.data.IS_SCORE == status){
                return true;
            } else {
                return false;
            }
        };

        Date.prototype.Format = function(fmt)
        {
            var o = {
                "M+" : this.getMonth()+1,                 //月份
                "d+" : this.getDate(),                    //日
                "h+" : this.getHours(),                   //小时
                "m+" : this.getMinutes(),                 //分
                "s+" : this.getSeconds(),                 //秒
                "q+" : Math.floor((this.getMonth()+3)/3), //季度
                "S"  : this.getMilliseconds()             //毫秒
            };
            if(/(y+)/.test(fmt))
                fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            for(var k in o)
                if(new RegExp("("+ k +")").test(fmt))
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
            return fmt;
        };
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：满意度选择医生页面控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionMain.controller")
    .require([
        "kyee.quyiyuan.satisfaction.satisfactionMain.service"
        ,"kyee.quyiyuan.satisfaction.satisfactionHospital.service"
        ,"kyee.quyiyuan.satisfaction.satisfactionHospital.controller"
        ,"kyee.quyiyuan.satisfaction.satisfactionDoctor.service"
        ,"kyee.quyiyuan.satisfaction.satisfactionDoctor.controller"
        ,"kyee.quyiyuan.satisfaction.satisfactionMenu.controller"
        ,"kyee.quyiyuan.satisfaction.satisfactionMenu.service"
    ])
    .type("controller")
    .name("SatisfactionMainController")
    .params(["$scope", "$state", "SatisfactionMainService",
        "SatisfactionDoctorService", "SatisfactionMenuService", "KyeeMessageService",
        "SatisfactionHospitalService", "CacheServiceBus"])
    .action(function($scope, $state, SatisfactionMainService,
                     SatisfactionDoctorService, SatisfactionMenuService, KyeeMessageService,
                     SatisfactionHospitalService, CacheServiceBus){

        $scope.activityClass = 0;
        $scope.suggestStatus = "";
        $scope.page = 0;
        $scope.limit = 8;
        $scope.emptyText = "您目前还没有未评价记录";
        $scope.moreDataCanBeLoadedFlag = false;

        /**
         * 已读未读筛选函数
         * @param status
         */
        $scope.selectStatus = function (status) {
            $scope.activityClass = status;
            $scope.suggestStatus = status;
            $scope.page = "";
            $scope.limit = "";
            $scope.moreDataCanBeLoadedFlag = false;

            var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).id;
            SatisfactionMainService.queryItems("", hospitalId,
                $scope.suggestStatus, $scope.page, $scope.limit,
                function(data){
                    if(data && data.rows){
                        $scope.moreDataCanBeLoadedFlag = false;
                        $scope.items = data.rows;
                    }
                    if(status == 0){
                        $scope.changeEmptyText($scope.items, "您目前还没有未评价记录");
                    } else {
                        $scope.changeEmptyText($scope.items, "您目前还没有已评价记录");
                    }

                })
        };

        $scope.selectStatus(0);

        /**
         * 满意度记录点击事件
         * @param item
         */
        $scope.itemClick = function (item) {

            if (item.IS_SUGGEST=='0' || item.IS_SCORE == '0') {
                if (item.IS_SATISFIED_OPEN == 0) {
                    KyeeMessageService.message({
                        title: "温馨提示",
                        content: "该医院暂未开放满意度评价功能！"
                    });
                    return;
                }
                if (item.IS_NEED_VISIT == 0 && item.VISIT_STATUS != '2') {
                    KyeeMessageService.message({
                        title: "温馨提示",
                        content: "该医生需要就诊以后才能评价！"
                    });
                    return;
                }
            }
            if(item.IS_SUGGEST == '0'){
                SatisfactionMenuService.isTabActive = 1;
                SatisfactionDoctorService.data = item;
                $state.go("satisfaction_menu.satisfaction_doctor");
            } else if(item.IS_SCORE == '0'){
                SatisfactionMenuService.isTabActive = 2;
                SatisfactionHospitalService.data = item;
                $state.go("satisfaction_menu.satisfaction_hospital");
            } else {
                SatisfactionMenuService.isTabActive = 1;
                SatisfactionDoctorService.data = item;
                $state.go("satisfaction_menu.satisfaction_doctor");
            }
        };

        /**
         * 判断是否还有更多数据
         * @returns {boolean}
         */
        $scope.moreDataCanBeLoaded = function(){
            return $scope.moreDataCanBeLoadedFlag;
        };

        /**
         * 判空显示函数
         * @param data
         * @param text
         */
        $scope.changeEmptyText = function (data, text) {
            if(!data || data.length == 0){
                $scope.showEmpty = true;
                $scope.emptyText = text;
            } else {
                $scope.showEmpty = false;
            }
        };

    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：满意度评价选择菜单控制器
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionMenu.controller")
    .require([])
    .type("controller")
    .name("SatisfactionMenuController")
    .params(["$scope", "$state", "SatisfactionDoctorService",
        "SatisfactionHospitalService", "SatisfactionMenuService", "KyeeMessageService",
        "CacheServiceBus"])
    .action(function($scope, $state, SatisfactionDoctorService,
                     SatisfactionHospitalService, SatisfactionMenuService, KyeeMessageService,
                     CacheServiceBus){

        $scope.isTabActive = SatisfactionMenuService.isTabActive;

        /**
         * 切换医生评价函数
         */
        $scope.gotoDoctor = function () {
            if(SatisfactionHospitalService.data.IS_SCORE == 0){

                var items = SatisfactionHospitalService.pageData.items;
                var suggest = SatisfactionHospitalService.pageData.suggest;

                // 判断是否有选择项
                var hasSelect = false;
                for(var index = 0; index < items.length; index++){
                    if(items[index].SCORE_VALUE){
                        hasSelect = true;
                        break;
                    }
                }

                if(suggest){
                    hasSelect = true;
                }

                // 如果有则提示提交
                if(hasSelect){
                    KyeeMessageService.confirm({
                        title: "温馨提示",
                        content: "是否提交已填写的医生评价（未选择项将默认为三颗星）？",
                        onSelect: function (res) {
                            if(res){
                                for(var index = 0; index < items.length; index++){
                                    if(!items[index].SCORE_VALUE){
                                        items[index].SCORE_VALUE = 3;
                                    }
                                }
                                var postdata = SatisfactionHospitalService.data;
                                postdata.ITEM_SCORES = items;
                                postdata.OTHER = suggest;
                                SatisfactionHospitalService.saveSatisfactionData(postdata, function () {
                                    KyeeMessageService.message({
                                        title: "温馨提示",
                                        content: "评论提交成功"
                                    });
                                    SatisfactionDoctorService.data.IS_SCORE = 1;
                                    $scope.jumpDoctor();
                                });
                            }else {
                                $scope.jumpDoctor();
                            }
                        }
                    });
                } else {
                    $scope.jumpDoctor();
                }
            } else {
                $scope.jumpDoctor();
            }
        };

        /**
         * 切换医生评价函数
         */
        $scope.jumpDoctor = function () {
            $scope.isTabActive = 1;
            SatisfactionDoctorService.data = SatisfactionHospitalService.data;
            $state.go("satisfaction_menu.satisfaction_doctor");
        };

        /**
         * 切换医院评价函数
         */
        $scope.gotoHospital = function () {
            if(SatisfactionDoctorService.data.IS_SUGGEST == 0){

                var items = SatisfactionDoctorService.pageData.items;
                var suggest = SatisfactionDoctorService.pageData.suggest;

                // 判断是否有选择项
                var hasSelect = false;
                for(var index = 0; index < items.length; index++){
                    if(items[index].SCORE_VALUE){
                        hasSelect = true;
                        break;
                    }
                }

                if(suggest){
                    hasSelect = true;
                }

                // 如果有则提示提交
                if(hasSelect){
                    KyeeMessageService.confirm({
                        title: "温馨提示",
                        content: "是否提交已填写的医生评价（未选择项将默认为三颗星）？",
                        onSelect: function (res) {
                            if(res){
                                for(var index = 0; index < items.length; index++){
                                    if(!items[index].SCORE_VALUE){
                                        items[index].SCORE_VALUE = 3;
                                    }
                                }
                                var postdata = SatisfactionDoctorService.data;
                                postdata.ITEM_SCORES = items;
                                postdata.SUGGEST_VALUE = suggest;
                                postdata.USER_ID = CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID;
                                SatisfactionDoctorService.saveSatisfactionData(postdata, function () {
                                    KyeeMessageService.message({
                                        title: "温馨提示",
                                        content: "评论提交成功"
                                    });
                                    SatisfactionDoctorService.data.IS_SUGGEST = 1;
                                    $scope.jumpHospital();
                                });
                            } else {
                                $scope.jumpHospital();
                            }
                        }
                    });
                } else {
                    $scope.jumpHospital();
                }
            } else {
                $scope.jumpHospital();
            }
        };

        /**
         * 切换医院评价函数
         */
        $scope.jumpHospital = function () {
            $scope.isTabActive = 2;
            SatisfactionHospitalService.data = SatisfactionDoctorService.data;
            $state.go("satisfaction_menu.satisfaction_hospital");
        };
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医生评价页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionDoctor.service")
    .require([])
    .type("service")
    .name("SatisfactionDoctorService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){

        var def = {
            /**
             * 查询医生评分项目数据
             */
            querySurveyData : function(itemHospitalId, onSuccess){
                HttpServiceBus.connect({
                    url : "/satisfaction/action/HospitalSurveyActionC.jspx",
                    params : {
                        op: "getSurveyItem",
                        itemHospitalId: itemHospitalId,
                        itemType: 2
                    },
                    cache: {
                        by: "HIT",
                        value: 10
                    },
                    onSuccess : function (resp) {
                        if(!resp.rows){
                            return;
                        }
                        onSuccess(resp.rows);
                    }
                });
            },
            /**
             * 查询医生已评价数据
             */
            querySatisfactionData : function(itemHospitalId, regId, onSuccess){
                HttpServiceBus.connect({
                    url : "/satisfaction/action/DoctorSurveyActionC.jspx",
                    params : {
                        op: "getDoctorSuggestedData",
                        HOSPITAL_ID: itemHospitalId,
                        TRADE_ORDER_NO: regId
                    },
                    onSuccess : function (resp) {
                        if(!resp.data){
                            return;
                        }
                        onSuccess(resp.data);
                    }
                });
            },
            /**
             * 保存医生评价数据
             */
            saveSatisfactionData : function(postdata, onSuccess){
                HttpServiceBus.connect({
                    url : "/satisfaction/action/DoctorSurveyActionC.jspx",
                    type: "POST",
                    params : {
                        op: "saveDoctorSatisfiedData",
                        postdata: postdata
                    },
                    onSuccess : function (resp) {
                        if(!resp){
                            return;
                        }
                        onSuccess(resp);
                    }
                });
            }
        };

        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：医院评价页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionHospital.service")
    .require([])
    .type("service")
    .name("SatisfactionHospitalService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function(HttpServiceBus, CacheServiceBus){

        var def = {
            /**
             * 查询医院评分项目数据
             */
            querySurveyData : function(itemHospitalId, onSuccess){
                HttpServiceBus.connect({
                    url : "/satisfaction/action/HospitalSurveyActionC.jspx",
                    params : {
                        op: "getSurveyItem",
                        itemHospitalId: itemHospitalId,
                        itemType: 1
                    },
                    cache: {
                        by: "HIT",
                        value: 10
                    },
                    onSuccess : function (resp) {
                        if(!resp.rows){
                            return;
                        }
                        onSuccess(resp.rows);
                    }
                });
            },
            /**
             * 查询医院已评价数据
             */
            querySatisfactionData : function(itemHospitalId, regId, onSuccess){
                HttpServiceBus.connect({
                    url : "/satisfaction/action/HospitalSurveyActionC.jspx",
                    params : {
                        op: "getHospitalSuggestAndScore",
                        HOSPITAL_ID: itemHospitalId,
                        REG_ID: regId
                    },
                    onSuccess : function (resp) {
                        if(!resp.data){
                            return;
                        }
                        onSuccess(resp.data);
                    }
                });
            },
            /**
             * 保存医院评价内容
             */
            saveSatisfactionData : function(postdata, onSuccess){
                HttpServiceBus.connect({
                    url : "/satisfaction/action/HospitalSurveyActionC.jspx",
                    type: "POST",
                    params : {
                        op: "saveHospitalScore",
                        HOSPITAL_ID: postdata.HOSPITAL_ID,
                        USER_VS_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        OTHER: postdata.OTHER,
                        REG_ID: postdata.REG_ID,
                        postdata: postdata
                    },
                    onSuccess : function (resp) {
                        if(!resp){
                            return;
                        }
                        onSuccess(resp);
                    }
                });
            }
        };

        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：满意度选择医生页面服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionMain.service")
    .require([])
    .type("service")
    .name("SatisfactionMainService")
    .params(["HttpServiceBus", "CacheServiceBus"])
    .action(function(HttpServiceBus, CacheServiceBus){

        var def = {
            /**
             * 查询满意度评价记录
             */
            queryItems : function(doctorCode, hospitalId, suggestStatus, page, limit, onSuccess){
                HttpServiceBus.connect({
                    url : "/satisfaction/action/DoctorSurveyActionC.jspx",
                    params : {
                        op: "getRegistData",
                        USER_ID:  CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_USER_RECORD).USER_ID,
                        USER_VS_ID: CacheServiceBus.getMemoryCache().get(CACHE_CONSTANTS.MEMORY_CACHE.CURRENT_CUSTOM_PATIENT).USER_VS_ID,
                        HOSPITAL_ID: hospitalId,
                        DOCTOR_CODE: doctorCode,
                        PAGE: page,
                        LIMIT: limit,
                        SUGGEST_STATUS: suggestStatus
                    },
                    cache: {
                        by: "HIT",
                        value: 10
                    },
                    onSuccess : function (resp) {
                        onSuccess(resp.data);
                    }
                });
            }
        };

        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan.
 * 创建用户：姚斌
 * 日期：2015年5月5日11:06:54
 * 创建原因：满意度选择菜单服务
 */
new KyeeModule()
    .group("kyee.quyiyuan.satisfaction.satisfactionMenu.service")
    .require([])
    .type("service")
    .name("SatisfactionMenuService")
    .params([])
    .action(function(){

        var def = {

        };

        return def;
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/5
 * 创建原因：医生排班中科室选择控制器
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.schedule.controller")
    .require(["kyee.framework.service.view","kyee.quyiyuan.schedule.service"])
    .type("controller")
    .name("ScheduleDeptSelectController")
    .params(["$scope","$state", "KyeeViewService","ScheduleDeptSelectService"])
    .action(function($scope,$state,KyeeViewService,ScheduleDeptSelectService){
        var data=ScheduleDeptSelectService.queryDept("1001", function(resultData){
            $scope.LETTERS=resultData.letters;
            $scope.DEPT_DATA=resultData.resultMap;
            console.log($scope.LETTERS);
            console.log($scope.DEPT_DATA);
        });
        //点击某一科室后跳转到排班界面
        $scope.showDoctorSchedule=function(deptData){
            //将点击的某一科室对象放入科室服务中
            AppointDeptSelectService.deptData=deptData;
            $state.go("appoint_schedule");

        };
        //判断是否显示网络科室图标
        $scope.showNetDept=function(onLineDept){
            if(onLineDept!=null && onLineDept !=undefined){
                if(onLineDept==1){
                    return true;
                }else{
                    return false;
                }
            }else{
                return false;
            }
        }
    })
    .build();

/**
 * 产品名称：quyiyuan
 * 创建者：刘健
 * 创建时间： 2015/5/5
 * 创建原因：医生排班中科室选择服务
 * 修改者：
 * 修改原因：
 *
 */
new KyeeModule()
    .group("kyee.quyiyuan.schedule.service")
    .require(["kyee.framework.service.message"])
    .type("service")
    .name("ScheduleDeptSelectService")
    .params(["HttpServiceBus","KyeeMessageService"])
    .action(function(HttpServiceBus,KyeeMessageService){

        var deptData = {
            //获取预约科室列表
            queryDept : function(params, onSuccess){


                HttpServiceBus.connect({
                    url : "/register/action/DoctorScheduleAcionC.jspx",
                    params : {
                        loc : "c",
                        op : "getScheduleDeptDictActionC",
                        isLogin : "false",
                        opVersion : "1.2.10",
                        operateUserSource : "0",
                        hospitalId:params
                    },
                    onSuccess : function(data){
                        if(data.success){
                            var deptTables=data.data.rows;
                            var resultData=deptData.dealDeptData(deptTables);
                            onSuccess(resultData);
                        }else{
                            KyeeMessageService.broadcast({
                                content:data.data.message,
                                duration:3000
                            });
                        }
                    },
                    onError:function(){
                        KyeeMessageService.broadcast({
                            content:"网络异常",
                            duration:3000
                        });
                    }
                });
            },
            //处理后台返回的科室数据
            dealDeptData:function(deptTables){
                var  letters=[];//获取字母数组
                var resultMap={};//获取字母对应的科室
                var result={};//返回处理后的数据
                for(var i=0; i<deptTables.length ;i++){
                    if(resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] == undefined){
                        var list = [];
                        list.push(deptTables[i]);
                        resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)] = list;
                        letters.push(deptTables[i].FULL_UPPER_SPELL.substr(0,1));
                        letters=letters.sort();
                    }else{
                        resultMap[deptTables[i].FULL_UPPER_SPELL.substr(0,1)].push(deptTables[i]);
                    }
                }
                result["letters"]=letters;
                result["resultMap"]=resultMap;
                return result;
            }
        };
        return deptData ;
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��6��15:25:39
 * ����ԭ�������Ͻ���������
 * �޸��ߣ�
 * �޸�ԭ����
 */
new KyeeModule()
    .group("kyee.quyiyuan.DiagnosticResult.controller")
    .require(["kyee.quyiyuan.DiagnosticResult.service","kyee.quyiyuan.triageSelectDept.controller"])
    .type("controller")
    .name("DiagnosticResultController")
    .params(["$scope", "$state", "DiagnosticResultService","HttpServiceBus","TriageMainService","SymptomListService"])
    .action(function($scope, $state, DiagnosticResultService,HttpServiceBus,TriageMainService,SymptomListService){
        //Ĭ�ϲ�չ��
        $scope.isDisplay = -1;
        //���ع��ļ�����Ϣ
        $scope.DiseaseInfoLoaded = [];
        //���ع��ļ���Id
        $scope.DiseaseIdsLoaded = [];

        //��ʼ���������Ͻ���
        DiagnosticResultService.loadResultData(function(data){
            $scope.DiagnosticResult = data.rows;
        }, HttpServiceBus,SymptomListService,TriageMainService);

        //ѡ��������
        $scope.showBigDept = function(bigDeptId,bigDeptName){
            DiagnosticResultService.bigDeptId = bigDeptId;
            DiagnosticResultService.bigDeptName = bigDeptName;
            TriageMainService.path.push($state.current.name);
            $state.go('triageSelectDept');
        };

        //���ؼ�
        $scope.back = function(){
            $state.go(TriageMainService.path.pop());
        };

        //ѡ��
        $scope.choose = function(index,diseaseId){
            //���ع������ټ���
            if($scope.isDisplay != index && $scope.DiseaseIdsLoaded.indexOf(diseaseId) < 0){
                //���ؼ�������
                DiagnosticResultService.loadDiseaseInfo(function(data){
                    var DiseaseInfo = data.rows;
                    $scope.DiseaseInfoLoaded.push(DiseaseInfo);
                    $scope.DiseaseIdsLoaded.push(diseaseId);
                }, HttpServiceBus,diseaseId);
            }
            //��չ��������
            if($scope.isDisplay == index){
                $scope.isDisplay = -1;
            }else{
                $scope.isDisplay = index;
            }
        };
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:25:02
 * 创建原因：症状列表控制器
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.symptomList.controller")
    .require(["kyee.quyiyuan.symptomList.service","kyee.quyiyuan.DiagnosticResult.controller"])
    .type("controller")
    .name("SymptomListController")
    .params(["$scope", "$state", "SymptomListService", "TriageMainService", "HttpServiceBus","KyeeMessageService"])
    .action(function($scope, $state, SymptomListService, TriageMainService, HttpServiceBus,KyeeMessageService){
        //选中的部位名
        $scope.bodyName = TriageMainService.bodyName;
        //选中项
        $scope.isChecked = [];
        //次数
        var page = 0;
        //总行数
        var total = 0;

        //加载更多
        $scope.loadMore = function(){
            page++;
            SymptomListService.loadData(function(data){
                //累加数据
                $scope.SymptomListData = data.rows;
                total = data.total;
                //通知directive已加载完成
                $scope.$broadcast('scroll.infiniteScrollComplete');
            }, HttpServiceBus,TriageMainService,page);
        };

        //判断是否还有更多数据
        $scope.moreDataCanBeLoaded = function(){
            if($scope.SymptomListData == undefined || total > $scope.SymptomListData.length){
                return true;
            }else{
                return false;
            }
        };
        //选中症状ID列表
        var symptomIds = [];
        //点击选项
        $scope.check = function(index,symptomId){
            if($scope.isChecked[index] == undefined){
                $scope.isChecked[index] = true;
                symptomIds.push(symptomId);
            }else{
                $scope.isChecked[index] = !$scope.isChecked[index];
                var array = [];
                for(var i=0;i<symptomIds.length;i++){
                    if(symptomIds[i]!=index){
                        array.push(symptomIds[i]);
                    }
                }
                symptomIds = array;
            }
        };
        //点击下一步
        $scope.nextStep = function(){
            if(symptomIds.length == 0){
                KyeeMessageService.broadcast({
                    content:"请至少选择一项！"
                });
            }else{
                SymptomListService.symptomIds = symptomIds;
                //记住路径
                TriageMainService.path.push($state.current.name);
                $state.go('DiagnosticResult');
            }
        };
        //点击返回
        $scope.back = function(){
            $state.go(TriageMainService.path.pop());
        }
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��6��15:24:39
 * ����ԭ�����б���������
 * �޸��ߣ�
 * �޸�ԭ����
 */
new KyeeModule()
    .group("kyee.quyiyuan.triageList.controller")
    .require(["kyee.quyiyuan.triageList.service"])
    .type("controller")
    .name("TriageListController")
    .params(["$scope", "$state", "TriageListService", "TriageMainService", "HttpServiceBus"])
    .action(function($scope, $state, TriageListService, TriageMainService, HttpServiceBus){
        TriageListService.loadData(function(data){
            $scope.TriageListData = data.rows;
        }, HttpServiceBus,TriageMainService);
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:24:39
 * 创建原因：自我诊断主控制器
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.triageMain.controller")
    .require([
        "kyee.quyiyuan.triageMain.service",
        "kyee.quyiyuan.triagePic.controller",
        "kyee.quyiyuan.triageList.controller",
        "kyee.quyiyuan.symptomList.controller"])
    .type("controller")
    .name("TriageMainController")
    .params(["$scope", "$state", "TriageMainService","KyeeViewService"])
    .action(function($scope, $state, TriageMainService,KyeeViewService){
        if($state.current.name == 'triage.triageMain'){
            //选中图片导诊
            $scope.isActive = '0';
        }else if($state.current.name == 'triage.triageList'){
            //选中图片导诊
            $scope.isActive = '1';
        }

        //跳转到症状列表页面
        $scope.showSymptomList = function(bodyCode,bodyName){
            TriageMainService.bodyCode = bodyCode;
            TriageMainService.bodyName = bodyName;
            //记住路径
            TriageMainService.path.push($state.current.name);
            $state.go("symptomList");
        };
        //返回键
        $scope.back = function(){
            $state.go("home");
        }
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:24:13
 * 创建原因：图片导诊控制器
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.triagePic.controller")
    .require(["kyee.quyiyuan.triagePic.service"])
    .type("controller")
    .name("TriagePicController")
    .params(["$scope", "$state", "TriagePicService", "TriageMainService","HttpServiceBus"])
    .action(function($scope, $state, TriagePicService, TriageMainService, HttpServiceBus){
        //数据集
        var TriageData = new Object();
        //页面数据
        TriagePicService.loadData(function(data){
            TriageData = TriagePicService.dealData(data.rows);
            //设置坐标
            $scope.coordsSwitch();
            //设置图片
            $scope.switchPic();
        }, HttpServiceBus);
        //切换性别
        $scope.sexSwitch = function(){
            if(TriageMainService.currentSex == 1){
                //男则切换为女
                TriageMainService.currentSex = 2;
            }else if(TriageMainService.currentSex == 2) {
                //女则切换为男
                TriageMainService.currentSex = 1;
            }
            //更新身体图片
            this.switchPic();
        };
        //切换面向
        $scope.directionSwitch = function(){
            if(TriageMainService.currentDirection == '00'){
                //背面则切换为正面
                TriageMainService.currentDirection = '01';
            }else if(TriageMainService.currentDirection == '01'){
                //正面则切换为背面
                TriageMainService.currentDirection = '00';
            }
            //更新身体图片
            this.switchPic();
        };
        //更新身体图片
        $scope.switchPic = function(){
            if(TriageMainService.currentSex == 1 && TriageMainService.currentDirection == '01'){
                //主体图
                $scope.bodyPicSrc = "resource/images/triage/nanz_03.png";
                //性别选择按钮
                $scope.sexBtnSrc = "resource/images/triage/nanbut_03.png";
                //面向选择按钮
                $scope.directionBtnSrc = "resource/images/triage/zheng_03.png";
            }else if(TriageMainService.currentSex == 1 && TriageMainService.currentDirection == '00'){
                //主体图
                $scope.bodyPicSrc = "resource/images/triage/nanb_03.png";
                //性别选择按钮
                $scope.sexBtnSrc = "resource/images/triage/nanbut_03.png";
                //面向选择按钮
                $scope.directionBtnSrc = "resource/images/triage/bei_03.png";
            }else if(TriageMainService.currentSex == 2 && TriageMainService.currentDirection == '01'){
                //主体图
                $scope.bodyPicSrc = "resource/images/triage/nvz_03.png";
                //性别选择按钮
                $scope.sexBtnSrc = "resource/images/triage/nvbut_03.png";
                //面向选择按钮
                $scope.directionBtnSrc = "resource/images/triage/zheng_03.png";
            }else if(TriageMainService.currentSex == 2 && TriageMainService.currentDirection == '00'){
                //主体图
                $scope.bodyPicSrc = "resource/images/triage/nvb_03.png";
                //性别选择按钮
                $scope.sexBtnSrc = "resource/images/triage/nvbut_03.png";
                //面向选择按钮
                $scope.directionBtnSrc = "resource/images/triage/bei_03.png";
            }
            TriagePicService.saveData(TriageMainService.currentSex,TriageMainService.currentDirection);
            this.coordsSwitch();
        };
        //切换坐标
        $scope.coordsSwitch = function(){
            if(TriageMainService.currentDirection == '01'){
                //正面
                $scope.TriageMainData = TriageData[0];
            }else if(TriageMainService.currentDirection == '00'){
                //背面
                $scope.TriageMainData = TriageData[1];
            }
            console.log('坐标数:'+$scope.TriageMainData.length);
        };
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��6��15:25:25
 * ����ԭ����ѡ�����ҿ�����
 * �޸��ߣ�
 * �޸�ԭ����
 */
new KyeeModule()
    .group("kyee.quyiyuan.triageSelectDept.controller")
    .require(["kyee.quyiyuan.triageSelectDept.service"])
    .type("controller")
    .name("TriageSelectDeptController")
    .params(["$scope", "$state", "TriageSelectDeptService", "TriageMainService", "HttpServiceBus","DiagnosticResultService"])
    .action(function($scope, $state, TriageSelectDeptService, TriageMainService, HttpServiceBus,DiagnosticResultService){
        var toSchedule = '';
        //��ʼ�����ؿ����б�
        TriageSelectDeptService.loadData(function(data){
            $scope.deptList = data.data.rows;
            toSchedule = data.message;
        }, HttpServiceBus,DiagnosticResultService.bigDeptId);
        $scope.bigDeptName = DiagnosticResultService.bigDeptName;
        //���ؼ�
        $scope.back = function(){
            $state.go(TriageMainService.path.pop());
        };
        //ѡ������
        $scope.chooseDept = function(){
            //1��ԤԼ��2���Һţ�3���Ű�
            if(toSchedule == '1'){
                $state.go('');
            }else if(toSchedule == '2'){
                $state.go('');
            }else{
                $state.go('');
            }
        }
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��6��15:25:50
 * ����ԭ�������Ͻ�������
 * �޸��ߣ�
 * �޸�ԭ����
 */
new KyeeModule()
    .group("kyee.quyiyuan.DiagnosticResult.service")
    .type("service")
    .name("DiagnosticResultService")
    .action(function () {

        var def = {
            //��������
            loadResultData: function (getData, HttpServiceBus,SymptomListService,TriageMainService) {
                var symptomIds = "";
                //ƴװ֢״����
                for(var i=0; i<SymptomListService.symptomIds.length;i++){
                    if(i==SymptomListService.symptomIds.length-1){
                        symptomIds = symptomIds + SymptomListService.symptomIds[i];
                    }else{
                        symptomIds = symptomIds + SymptomListService.symptomIds[i]+',';
                    }
                }
                HttpServiceBus.connect({
                    url: "triage/action/DiseaseActionC.jspx",
                    params: {
                        sex:TriageMainService.currentSex,
                        symptomId:symptomIds,
                        op: "queryDiseaseBySymptom"
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {

                    }
                })
            },
            //��������
            loadDiseaseInfo: function (getData, HttpServiceBus,diseaseId) {
                HttpServiceBus.connect({
                    url: "triage/action/DiseaseActionC.jspx",
                    params: {
                        diseaseId:diseaseId,
                        op: "queryDiseaseByCode"
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {

                    }
                })
            },
            //ѡ�д�����Id
            bigDeptId : '',
            //ѡ�д�������
            bigDeptName : ''
        };

        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:26:37
 * 创建原因：症状列表服务
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.symptomList.service")
    .type("service")
    .name("SymptomListService")
    .action(function () {

        var def = {
            //发送请求
            loadData: function (getData, HttpServiceBus,TriageMainService,page) {
                //每次加载行数
                var rows = 20;
                HttpServiceBus.connect({
                    url: "triage/action/SymptomActionC.jspx",
                    params: {
                        sex:TriageMainService.currentSex,
                        direction:TriageMainService.currentDirection,
                        bodyCode:TriageMainService.bodyCode,
                        page: 1,
                        rows: rows*page,
                        op: "querySymptomByBody",
                        isLogin: "false",
                        opVersion: "1.2.10",
                        operateUserSource: "0"
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {

                    }
                })
            },
            //选中症状
            symptomIds : []
        };

        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:26:57
 * 创建原因：列表导诊服务
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.triageList.service")
    .type("service")
    .name("TriageListService")
    .action(function () {

        var def = {
            //发送请求
            loadData: function (getData, HttpServiceBus,TriageMainService) {
                HttpServiceBus.connect({
                    url: "triage/action/BodyPositionActionC.jspx",
                    params: {
                        sex:TriageMainService.currentSex,
                        direction:TriageMainService.currentDirection,
                        op: "queryBodyFromApp",
                        isLogin: "false",
                        opVersion: "1.2.10",
                        operateUserSource: "0"
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {

                    }
                })
            }
        };

        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:27:19
 * 创建原因：自我诊断主服务
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.triageMain.service")
    .type("service")
    .name("TriageMainService")
    .action(function () {

        var def = {
            //默认性别 1：男 2：女
            currentSex : 1,
            //默认面向 01：正 00：反
            currentDirection : '01',
            //操作路径
            path : []
        };

        return def;
    })
    .build();
/**
 * 产品名称：quyiyuan
 * 创建者：章剑飞
 * 创建时间：2015年5月6日15:27:27
 * 创建原因：图形导诊服务
 * 修改者：
 * 修改原因：
 */
new KyeeModule()
    .group("kyee.quyiyuan.triagePic.service")
    .type("service")
    .name("TriagePicService")
    .action(function () {
        var def = {
            //发送请求
            loadData:function(getData,HttpServiceBus){
                HttpServiceBus.connect({
                    url : "triage/action/BodyPositionActionC.jspx",
                    params : {
                        op : "initBodyPosition",
                        isLogin : "false",
                        opVersion : "1.2.10",
                        operateUserSource : "0"
                    },
                    onSuccess : function(data){
                        getData(data);
                    },
                    onError　: function(){

                    }
                })
            },
            //处理数据
            dealData: function (TriageTestData) {
                //总数据集
                var TriageData = [];
                //正面数据集
                var TriageDataFront = [];
                //背面数据集
                var TriageDataBack = [];
                for (var i = 0; i < TriageTestData.length; i++) {
                    //当前设备的高度
                    var phone_height = window.innerHeight;
                    //图片缩放坐标比例倍数
                    var scale = (phone_height - 88) / 741;
                    //坐标数组
                    var coords = TriageTestData[i].FIX.split(',');
                    //转换后的坐标字符串
                    var coords_str = "";
                    //按比例缩放坐标
                    for (var j = 0; j < coords.length; j++) {
                        if (j != (coords.length - 1)) {
                            coords_str += parseInt(coords[j] * scale) + ",";
                        }
                        else {
                            coords_str += parseInt(coords[j] * scale);
                        }
                    }
                    //坐标集
                    TriageTestData[i].FIX = coords_str;
                    //code=16,18分别是背部，臀部
                    if(TriageTestData[i].BODY_CODE=='16' || TriageTestData[i].BODY_CODE=='18'){
                        TriageDataBack.push(TriageTestData[i]);
                    }else{
                        TriageDataFront.push(TriageTestData[i]);
                    }
                }
                TriageData.push(TriageDataFront);
                TriageData.push(TriageDataBack);
                return TriageData;
            },
            sex:undefined,
            direction:undefined,
            saveData:function(sex,direction){

            }
        };

        return def;
    })
    .build();
/**
 * ��Ʒ���ƣ�quyiyuan
 * �����ߣ��½���
 * ����ʱ�䣺2015��5��6��15:26:27
 * ����ԭ����ѡ�����ҷ���
 * �޸��ߣ�
 * �޸�ԭ����
 */
new KyeeModule()
    .group("kyee.quyiyuan.triageSelectDept.service")
    .type("service")
    .name("TriageSelectDeptService")
    .action(function () {

        var def = {
            //��������
            loadData: function (getData, HttpServiceBus,bigDeptId) {
                HttpServiceBus.connect({
                    url: "triage/action/HospitalNavigationActionC.jspx",
                    params: {
                        dksId:bigDeptId,
                        hospitalID:'1001',
                        op: "queryDeptByClassific"
                    },
                    onSuccess: function (data) {
                        getData(data);
                    },
                    onError: function () {

                    }
                })
            }
        };

        return def;
    })
    .build();
new KyeeApp()
	.name("kyee.framework.bootstrap")
	.home("/home")
	.rounter("RouterConfigProvider")
	.require(["kyee.quyiyuan.config", "kyee.quyiyuan.main.controller"])
	.hasSplashscreen(true)
	.onFinash(function(){

		//设置日志级别
		KyeeLogger.setLevel(AppConfig.LOG_LEVEL);

		//IOS 添加到主屏幕插件，仅在内部测试时使用
		//为了测试方便，不在 DEV 模式下显示
		//if(AppConfig.MODE != "DEV"){

			addToHomescreen({
				skipFirstVisit: false,
				startDelay: 2,
				lifespan: 0,
				displayPace: 0,
				privateModeOverride: true,
				maxDisplayCount: 0
			});
		//}
	})
	.build();
var HOME_DATA = {

    notification: "这是测试通知。",

    //默认广告，第一次使用时或者医院没有广告时将会自动显示此广告
    defaultSlideboxData : [
        {
            url : "resource/images/ads/ad_0.png"
        }
    ],

    //首页九宫格元数据
    homeSudokuMetaData : {

        //颜色序列
        colors : ["#00B44E", "#6BCB97", "#91D6AB", "#009943", "#00BD70", "#24CE7B", "#007A4A", "#008655", "#01956D", "#2494D8", "#34B3E8", "#79CBEF", "#5BA7E6", "#7BBEEC", "#A6D5EE"],

        //图标序列
        data : {
            "APPOINT" : {
                name: "预约挂号",
                image_url: "resource/images/icons/yuyueguahao.png",
                href: "appoint"
            },
            "REGIST" : {
                name: "当日挂号",
                image_url: "resource/images/icons/jinriguahao.png",
                href: "regist"
            },
            "TRIAGE" : {
                name: "智能导诊",
                image_url: "resource/images/icons/zhinengdaozhen.png",
                href: "triage.triageMain"
            },
            "EXAM" : {
                name: "我的报告单",
                image_url: "resource/images/icons/baogaodan.png",
                href: "report"
            },
            "QUEUING" : {
                name: "叫号查询",
                image_url: "resource/images/icons/jiaohaochaxun.png",
                href: "queue"
            },
            "PAYMENT" : {
                name: "我的账单",
                image_url: "resource/images/icons/wodezhangdan.png",
                href: "payment.payment"
            },
            "NAVIGATION" : {
                name: "医院导航",
                image_url: "resource/images/icons/yiyuandaohang.png",
                index: 6,
                href: "navigation_out"
            },
            "MGH" : {
                name: "免挂号费",
                image_url: "resource/images/icons/mianguahaofei.png",
                href: "rebate"
            },
            "MORE" : {
                id: "more",
                name: "更多",
                image_url: "resource/images/icons/gengduo.png",
                href: "more->MAIN_TAB"
            },
            "REFUND" : {
                name: "我的退费",
                image_url: "resource/images/icons/wodetuifei.png"
            },
            "MYD" : {
                name: "满意度",
                image_url: "resource/images/icons/manyidu.png",
                href: "satisfaction"
            },
            "SCHEDULE" : {
                name: "医生排班",
                image_url: "resource/images/icons/yishengpaiban.png",
                href: "schedule"
            },
            "INTERACTION" : {
                name: "医患互动",
                image_url: "resource/images/icons/yihuanhudong.png",
                href: "interaction"
            },
            "VERSION" : {
                name: "关于趣医",
                image_url: "resource/images/icons/wodequyi.png",
                href: "aboutquyi"
            },
            "BLANK1" : {
                placeholder : true,
                index: 4
            },
            "BLANK2" : {
                placeholder : true,
                index: 5
            }
        }
    }
};
new KyeeModule()
	.group("kyee.quyiyuan.main.hospital_detail.controller")
	.require(["kyee.framework.filter.common"])
	.type("controller")
	.name("HospitalDetailController")
	.params(["$scope", "CacheServiceBus", "HospitalDetailService", "MainService"])
	.action(function($scope, CacheServiceBus, HospitalDetailService, MainService){

		setTimeout(function(){

			var hospitalId = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);

			var advId = MainService.clickedAdvId;

			HospitalDetailService.loadHospitalDetail("", advId, function(data){

				$scope.hospitalDetailData = data;
			});
		}, 500);
	})
	.build();
new KyeeModule()
    .group("kyee.quyiyuan.main.hospital_selector.controller")
    .require(["kyee.framework.service.messager", "kyee.quyiyuan.main.hospital_selector.service", "kyee.framework.service.message", "ionic"])
    .type("controller")
    .name("HospitalSelectorController")
    .params(["$scope", "$state", "KyeeMessagerService", "HttpServiceBus", "CacheServiceBus", "HospitalSelectorService", "KyeeMessageService","$ionicActionSheet", "MainService", "$ionicScrollDelegate"])
    .action(function($scope, $state, KyeeMessagerService, HttpServiceBus, CacheServiceBus, HospitalSelectorService, KyeeMessageService, $ionicActionSheet, MainService, $ionicScrollDelegate){

        //存储当前所选省份的索引
        $scope.provinceIdx = 0;

        //记录用户的选择地区选择路径，默认第一个地点为全国
        $scope.selectPath = ["全国"];

        //记录返回历史
        var backHistoryStack = ["home"];

        /**
         * 获取所有省
         */
        HospitalSelectorService.getProvinceListData(function(data){
            $scope.provinces = data;
        });

        /**
         * 获取所有市
         */
        HospitalSelectorService.getCityListData("0", "0000000",function(data){
            $scope.citys = data;
        });

        /**
         * 开始搜索医院
         */
        $scope.beginSearch = function(){

            //记录当前视图到返回历史中，以便返回按钮按路径返回
            backHistoryStack.push($state.current.name);

            $state.go("hospital_search_result");
        };

        /**
         * 搜索
         */
        $scope.hospitalSearchResult = [];
        $scope.search = function(){

            var keywords = top.hospitalKeywords;
            var result = [];

            if((keywords + "").length > 0){

                for(var i in allHospitalList){

                    var record = allHospitalList[i];
                    var name = record.HOSPITAL_NAME;

                    if(name.indexOf(keywords) != -1){
                        result.push(record);
                    }
                }
            }

            $scope.hospitalSearchResult = result;
        };

        var allHospitalList = [];
        $scope.searchInit = function(){

            HospitalSelectorService.getHospitalListData(null, "0000000", function(data){
                allHospitalList = data.data.rows;
            });
        };

        /**
         * 加载省下的所有城市
         *
         * @param provinceIdx
         * @param provinceId
         * @param provinceCode
         * @param provinceName
         */
        $scope.loadCitys = function(provinceIdx, provinceId, provinceCode, provinceName){

            //记录当前的选择路径
            $scope.selectPath = [provinceName];

            //城市列表自动滚动到顶部
            $ionicScrollDelegate.$getByHandle('cityListScrollContainer').scrollTop();

            $scope.provinceIdx = provinceIdx;
            HospitalSelectorService.currProvinceCode = provinceCode;
            HospitalSelectorService.getCityListData(provinceId, provinceCode,function(data){
                $scope.citys = data;
            });
        };

        /**
         * 加载市下的所有医院
         *
         * @param provinceCode
         * @param cityCode
         * @param cityName
         */
        $scope.loadHospitals = function(provinceCode, cityCode, cityName){

            //记录当前的选择路径
            $scope.selectPath.push(cityName);

            //记录当前视图到返回历史中，以便返回按钮按路径返回
            backHistoryStack.push($state.current.name);

            $state.go("hospital_list");
            HospitalSelectorService.getHospitalListData(HospitalSelectorService.currProvinceCode, cityCode, function(data){
                $scope.hospitals = data.data.rows;
            });
        };

        /**
         * 返回
         */
        $scope.back = function(){

            //选择路径返回到上一级
            $scope.selectPath.pop();
            $state.go(backHistoryStack.pop());
        };

        /**
         * 选择医院
         *
         * @param hospitalId
         */
        $scope.selectHospital = function(hospitalId, hospitalName, hospitalAddress, provinceCode, provinceName, cityCode, cityName){

            HospitalSelectorService.selectHospital(hospitalId, hospitalName, hospitalAddress, provinceCode, provinceName, cityCode, cityName, "正在加载医院信息...", function(){

                //返回到指定的页面
                $state.go(HospitalSelectorService.returnView);
            });
        };
    })
    .build();
new KyeeModule()
	.group("kyee.quyiyuan.main.controller")
	.require([
		"kyee.framework.service.view",
		"kyee.framework.directive.compile",
		"kyee.framework.directive.slidebox",
		"kyee.framework.directive.sudoku",
		"kyee.framework.directive.picker.list_picker",
		"kyee.framework.directive.calendar",
		"kyee.framework.directive.view.overlay",
		"kyee.framework.service.message",
		"kyee.framework.directive.notification",
		"kyee.framework.service.messager",
		"kyee.quyiyuan.service_bus.http",
		"kyee.quyiyuan.service_bus.cache",
		"kyee.quyiyuan.appoint.controller",
		"kyee.quyiyuan.regist.controller",
		"kyee.quyiyuan.queue.select.dept.controller",
		//"kyee.quyiyuan.report.controller",
		"kyee.quyiyuan.reportmain.controller",
		//"kyee.framework.service.message",
		"kyee.framework.service.utils",
		"kyee.framework.service.view",
		"kyee.quyiyuan.myquyi.controller",
		"kyee.quyiyuan.login.tabs.controller",
		"kyee.quyiyuan.center.controller",
		"kyee.quyiyuan.messagecenter.messageCenter.controller",
		//门诊费用
		"kyee.quyiyuan.paymentMain.controller",
		"kyee.quyiyuan.satisfaction.satisfactionMain.controller",
		"kyee.quyiyuan.interaction.doctorSelect.controller",
		//HOME BEGIN
		"kyee.quyiyuan.main.hospital_selector.controller",
		"kyee.quyiyuan.main.service",
		"kyee.quyiyuan.main.hospital_detail.controller",
		"kyee.quyiyuan.main.hospital_detail.service",
		//HOME END
		"kyee.quyiyuan.rebate.controller",
		//自我诊断
		"kyee.quyiyuan.triageMain.controller",
		//关于趣医
		"kyee.quyiyuan.aboutquyi.controller",
		//医生排班
		"kyee.quyiyuan.schedule.controller",
		//医院导航
		"kyee.quyiyuan.navigationOut.controller"
	])
	.type("controller")
	.name("MainController")
	.params(["$state", "$scope", "KyeeViewService", "MainService", "KyeeMessageService", "KyeeMessagerService", "CacheServiceBus", "HttpServiceBus", "$ionicPopover", "HospitalSelectorService"])
	.action(function($state, $scope, KyeeViewService, MainService, KyeeMessageService, KyeeMessagerService, CacheServiceBus, HttpServiceBus, $ionicPopover, HospitalSelectorService){

		setInterval(function(){

			if(MainService.isSelectedNewHospital){

				//更新广告
				$scope.slideboxData = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO).advs;
				$scope.call({
					name : "kyeeSlidebox.load"
				});

				//更新九宫格权限
				var sudokuData = MainService.updateSudokuData();
				CacheServiceBus.getStorageCache().apply(CACHE_CONSTANTS.STORAGE_CACHE.HOME_DATA, "sudokuData", sudokuData);
				$scope.sudokuData = sudokuData;

				$scope.$digest();

				MainService.isSelectedNewHospital = false;
			}
		}, 1000);

		//加载广告图片
		$scope.slideboxData = MainService.loadAdvData();

		//加载九宫格初始数据
		$scope.sudokuData = MainService.loadSudokuData();

		/**
		 * 初始化数据
		 */
		MainService.init();

		$scope.bind = function(params){
			$scope.show = params.show;
		};

		/**
		 * 查看医院详情
		 */
		$scope.viewHospitalDetail = function(params){

			//$scope.show();

			var hospitalInfo = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);

			//选择医院后才能查看医院信息
			if(hospitalInfo == null || hospitalInfo.id == null || hospitalInfo.id == ""){

				KyeeMessageService.broadcast({
					content : "选择医院后才能查看医院信息"
				});
				return;
			}

			//记录此广告的 id
			MainService.clickedAdvId = params.id;
			$state.go("hospital_detail");
		},

		/**
		 * 打开主菜单
		 */
		$scope.openModule = function(params){

			//如果该按钮已被禁用，则提示消息并终止操作
			if(params.enable == 0){
				KyeeMessageService.message({
					content : params.disableInfo,
					okText : "我知道了"
				});
			}else{
				if(params.href != undefined){
					$state.go(params.href);
				}
			}
		};

		/**
		 * 获取已经选择的医院信息
		 *
		 * @returns {{HOSPITAL_ID: (*|$value|s), HOSPITAL_NAME: *}}
		 */
		$scope.getHospitalInfo = function(){

			var hospitalInfo = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);

			return {
				name : hospitalInfo != null && hospitalInfo.name != ""  ? hospitalInfo.name : "请选择医院",
				address : hospitalInfo != null && hospitalInfo.address != "" ? hospitalInfo.address : "点击这里选择一家您要使用的医院"
			};
		};

		/**
		 * 选择医院
		 */
		$scope.selectHospital = function(){

			////设置医院选择后的返回视图
			HospitalSelectorService.setReturnView("home");
			$state.go("hospital_selector");
		};
	})
	.build();
new KyeeModule()
    .group("kyee.quyiyuan.main.hospital_detail.service")
    .type("service")
    .name("HospitalDetailService")
    .params(["HttpServiceBus"])
    .action(function(HttpServiceBus){

        var def = {

            /**
             * 加载医院详情
             *
             * @param hospitalId
             * @param advId
             * @param onSuccess
             */
            loadHospitalDetail : function(hospitalId, advId, onSuccess){

                HttpServiceBus.connect({
                    url : "/advertisement/action/AdvappActionC.jspx",
                    params : {
                        hospitalId : hospitalId,
                        ADV_ID : advId,
                        op : "queryAdvInfo"
                    },
                    cache : {
                        by : "TIME",
                        value : 60
                    },
                    onSuccess : function(data){

                        onSuccess(data.data[0].ADV_HOSPITAL_INTRO);
                    }
                });
            }
        };

        return def;
    })
    .build();
new KyeeModule()
    .group("kyee.quyiyuan.main.hospital_selector.service")
    .type("service")
    .name("HospitalSelectorService")
    .params(["KyeeMessagerService", "HttpServiceBus", "CacheServiceBus", "MainService", "$state", "KyeeMessageService"])
    .action(function(KyeeMessagerService, HttpServiceBus, CacheServiceBus, MainService, $state, KyeeMessageService){

        var def = {

            //存储当前选择的省份编码
            currProvinceCode : null,

            returnView : null,

            /**
             * 设置医院选择后的返回视图
             *
             * @param view
             */
            setReturnView : function(view){

                var me = this;

                me.returnView = view;
            },

            /**
             * 为第三方开放的医院选择器接口
             *
             * @param routerState 选择成功后返回的路由地址
             */
            enter : function(routerState){

                var me = this;

                me.setReturnView(routerState);
                $state.go("hospital_selector");
            },

            /**
             * 加载省份列表
             *
             * @param onSuccess
             */
            getProvinceListData : function(onSuccess){

                HttpServiceBus.connect({
                    url : "/area/action/AreaHospitalActionImplC.jspx",
                    params : {
                        op : "queryProvince",
                        isLogin : "false",
                        operateUserSource : "0"
                    },
                    onSuccess : function(data){

                        onSuccess(data);
                    }
                });
            },

            /**
             * 加载城市列表数据
             *
             * @param provinceId
             * @param provinceCode
             * @param onSuccess
             */
            getCityListData : function(provinceId, provinceCode, onSuccess){

                HttpServiceBus.connect({
                    url : "/area/action/AreaHospitalActionImplC.jspx",
                    params : {
                        op : "queryCity",
                        PROVINCE_ID : provinceId,
                        PROVINCE_CODE : provinceCode
                    },
                    cache : {
                        by : "TIME",
                        value : 5 * 60
                    },
                    onSuccess : function(data){

                        onSuccess(data);
                    }
                });
            },

            /**
             * 加载医院数据列表
             *
             * @param provinceCode
             * @param cityCode
             * @param onSuccess
             */
            getHospitalListData : function(provinceCode, cityCode, onSuccess){

                HttpServiceBus.connect({
                    url : "/area/action/AreaHospitalActionImplC.jspx",
                    params : {
                        PROVINCE_CODE : provinceCode,
                        CITY_CODE : cityCode,
                        op : "queryHospitalName"
                    },
                    cache : {
                        by : "TIME",
                        value : 5 * 60
                    },
                    onSuccess : function(data){

                        onSuccess(data);
                    }
                });
            },

            /**
             * 选择医院
             * <br/>
             * 注意：
             * 该方法为公开方法，请勿修改方法签名
             *
             * @param hospitalId
             * @param hospitalName
             * @param hospitalAddress
             * @param onFinash
             */
            selectHospital : function(hospitalId, hospitalName, hospitalAddress, provinceCode, provinceName, cityCode, cityName, loadingText, onFinash){

                var me = this;

                //存储到缓存
                CacheServiceBus.getStorageCache().set(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO, {
                    id : hospitalId,
                    name : hospitalName,
                    address : hospitalAddress == "" ? "该医院暂无地址信息" : hospitalAddress,
                    provinceCode : provinceCode,
                    provinceName : provinceName,
                    cityCode : cityCode,
                    cityName : cityName
                });

                //加载医院广告
                HttpServiceBus.connect({
                    url : "/advertisement/action/AdvappActionC.jspx",
                    params : {
                        hospitalId : hospitalId,
                        op : "queryadv"
                    },
                    cache : {
                        by : "TIME",
                        value : 5 * 60
                    },
                    loadingText : loadingText,
                    onSuccess : function(data){

                        //处理广告数据
                        var imgs = [];
                        for(var i in data.data){
                            imgs.push({
                                id : data.data[i].ADV_ID,
                                url : data.data[i].ADV_URL
                            });
                        }

                        //如果该医院没有绑定广告，则显示默认广告
                        if(imgs.length == 0){
                            imgs = HOME_DATA.defaultSlideboxData;
                        }

                        CacheServiceBus.getStorageCache().apply(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO, "advs", imgs);

                        //加载九宫格权限数据
                        HttpServiceBus.connect({
                            url: "/AppModuleManage/action/AppModuleManageActionC.jspx",
                            params: {
                                USER_ROLE: "0",
                                op: "getModuleTOAPP",
                                hospitalID : hospitalId
                            },
                            cache : {
                                by : "TIME",
                                value : 5 * 60
                            },
                            loadingText : loadingText,
                            onSuccess: function (_data) {

                                CacheServiceBus.getStorageCache().set(CACHE_CONSTANTS.STORAGE_CACHE.HOME_DATA, {
                                    rights : _data.data
                                });

                                //更新标志，以便首页及时更新相关数据
                                MainService.isSelectedNewHospital = true;

                                if(onFinash != undefined){

                                    onFinash();
                                }
                            }
                        });
                    }
                });
            }
        };

        return def;
    })
    .build();
new KyeeModule()
	.group("kyee.quyiyuan.main.service")
	.type("service")
	.name("MainService")
	.params(["HttpServiceBus", "CacheServiceBus"])
	.action(function(HttpServiceBus, CacheServiceBus){
		
		var def = {

			//记录是否选择了新的医院，如果是，则需要更新首页数据（广告、九宫格数据）
			isSelectedNewHospital : false,

			//单击广告图片的 ID
			clickedAdvId : "",

			/**
			 * 初始化
			 */
			init : function(){

				//初始化缓存中的医院信息，此操作仅会在首次使用时执行
				var hospitalInfo = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
				if(hospitalInfo == null){

					CacheServiceBus.getStorageCache().set(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO, {
						id : "",
						name : "",
						address : "",
						provinceCode : "",
						provinceName : "",
						cityCode : "",
						cityName : ""
					});

					KyeeLogger.debug("已经初始化 HOSPITAL_INFO 的默认值于 StorageCache 中");
				}
			},

			/**
			 * 加载九宫格数据
			 *
			 * @param cfg
			 */
			getCurrMenus : function(cfg){

				cfg.onFinish(HOME_DATA);
			},

			/**
			 * 加载广告数据
			 */
			loadAdvData : function(){

				//自动加载上一次医院的广告，如果为空，则加载默认广告
				var hospitalInfo = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOSPITAL_INFO);
				return hospitalInfo != null && hospitalInfo.advs != undefined ? hospitalInfo.advs : HOME_DATA.defaultSlideboxData;
			},

			/**
			 * 获取九宫格数据
			 */
			loadSudokuData : function(){

				//如果上次已经选择医院，则返回该医院的九宫格数据
				var sudokuData = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOME_DATA);
				if(sudokuData != null && sudokuData.sudokuData != null){

					return sudokuData.sudokuData;
				}

				//如果上次没有选择医院，则构建初始化九宫格数据
				var data = HOME_DATA.homeSudokuMetaData.data;
				var colors = HOME_DATA.homeSudokuMetaData.colors;

				var homeData = [];
				var moreData = [];

				var row = [];
				var index = 0;
				for(var code in data){

					var item = data[code];
					item.backgroundcolor = colors[index];

					//整行时将改行添加到数据集中
					if(index != 0 && index % 3 == 0){

						//前 3 行为首页九宫格数据，其余的为更多页面的九宫格数据
						if(homeData.length < 3){
							homeData.push(row);
						}else{
							moreData.push(row);
						}

						row = [item];
					}else{
						row.push(item);
					}

					index ++;
				}
				moreData.push(row);

				return {
					home : homeData,
					more : moreData
				};
			},

			/**
			 * 更新首页九宫格数据
			 *
			 * @returns {{home: Array, more: Array}}
			 */
			updateSudokuData : function(){

				//获取元素的权限描述
				var rights = CacheServiceBus.getStorageCache().get(CACHE_CONSTANTS.STORAGE_CACHE.HOME_DATA).rights;
				console.log(rights);
				var data = HOME_DATA.homeSudokuMetaData.data;
				var colors = HOME_DATA.homeSudokuMetaData.colors;

				//抽取按钮对象
				var buttons = [];
				var index = 0;
				for(var right in rights){

					var code = rights[right].MODULE_CODE;
					var visible = rights[right].IS_VISIBLE;
					var enable = rights[right].IS_ENABLE;
					var disableInfo = rights[right].DISABLEINFO;

					//如果设置该按钮不可见，则不添加此按钮
					if(visible == 0){
						continue;
					}

					//首页最后一行自动插入更多按钮
					if(index == 8){
						var moreButton = data["MORE"];
						moreButton.backgroundcolor = colors[index ++];  //主页，索引需要 +1
						buttons.push(moreButton);
					}

					var button = data[code];
					if(button != undefined){
						button.backgroundcolor = colors[index ++];

						//动态添加是否启用属性
						button.enable = enable;
						//仅当启用状态为 0 时，消息提示才有意义
						if(enable == 0){
							button.disableInfo = disableInfo;
						}
						buttons.push(button);
					}else{
						KyeeLogger.warn("没有找到 CODE=" + code + " 的主页按钮！");
					}
				}

				//如果按钮数量不够，则补充按钮
				if(buttons.length < 15){

					for(var i = buttons.length; i < 15; i ++){

						buttons.push({
							placeholder : true,
							backgroundcolor : colors[i]
						});
					}
				}

				//拆分为主页按钮和更多页面按钮
				var homeData = [];
				var moreData = [];

				var row = [];
				for(var i = 0; i < buttons.length; i ++){

					var button = buttons[i];

					//如果一行按钮已经填满
					if(i != 0 && i % 3 == 0){

						//如果首页九宫格按钮已经填满
						if(homeData.length < 3){
							homeData.push(row);
						}else{
							moreData.push(row);
						}

						row = [button];
					}else{

						row.push(button);
					}
				}
				if(row.length > 0){
					moreData.push(row);
				}

				console.log(moreData);
				return {
					home : homeData,
					more : moreData
				};
			}
		};
		
		return def;
	})
	.build();
var queue_dept_data=
{
    "total": "47",
    "rows": [
        {
            "DEPT_NAME": "神经内科门诊",
            "DEPT_CODE": "100804",
            "FULL_UPPER_SPELL": "SHENJINGNEIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "8"
        },
        {
            "DEPT_NAME": "风湿科门诊",
            "DEPT_CODE": "101403",
            "FULL_UPPER_SPELL": "FENGSHIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "8"
        },
        {
            "DEPT_NAME": "传染科门诊",
            "DEPT_CODE": "101004",
            "FULL_UPPER_SPELL": "CHUANRANKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "0"
        },
        {
            "DEPT_NAME": "甲乳门诊(普四)",
            "DEPT_CODE": "301802",
            "FULL_UPPER_SPELL": "JIARUMENZHEN(PUSI)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "7"
        },
        {
            "DEPT_NAME": "眼科屈光外科中心",
            "DEPT_CODE": "40040402",
            "FULL_UPPER_SPELL": "YANKEQUGUANGWAIKEZHONGXIN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "止痛门诊",
            "DEPT_CODE": "301206",
            "FULL_UPPER_SPELL": "ZHITONGMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "0"
        },
        {
            "DEPT_NAME": "关节骨病外科门诊",
            "DEPT_CODE": "302104",
            "FULL_UPPER_SPELL": "GUANJIEGUBINGWAIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "8"
        },
        {
            "DEPT_NAME": "肛肠外科门诊(普二)",
            "DEPT_CODE": "300203",
            "FULL_UPPER_SPELL": "GANGCHANGWAIKEMENZHEN(PUER)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "7"
        },
        {
            "DEPT_NAME": "消化科门诊",
            "DEPT_CODE": "100604",
            "FULL_UPPER_SPELL": "XIAOHUAKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "7"
        },
        {
            "DEPT_NAME": "泌尿外科门诊",
            "DEPT_CODE": "300904",
            "FULL_UPPER_SPELL": "MINIAOWAIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "8"
        },
        {
            "DEPT_NAME": "中医妇科门诊(新)",
            "DEPT_CODE": "200404",
            "FULL_UPPER_SPELL": "ZHONGYIFUKEMENZHEN(XIN)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "18"
        },
        {
            "DEPT_NAME": "康复医学科门诊",
            "DEPT_CODE": "400604",
            "FULL_UPPER_SPELL": "KANGFUYIXUEKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "普通外科门诊",
            "DEPT_CODE": "3004",
            "FULL_UPPER_SPELL": "PUTONGWAIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "9"
        },
        {
            "DEPT_NAME": "生殖中心门诊",
            "DEPT_CODE": "400501",
            "FULL_UPPER_SPELL": "SHENGZHIZHONGXINMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "整形外科门诊",
            "DEPT_CODE": "301004",
            "FULL_UPPER_SPELL": "ZHENGXINGWAIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "15"
        },
        {
            "DEPT_NAME": "脑外科门诊",
            "DEPT_CODE": "300704",
            "FULL_UPPER_SPELL": "NAOWAIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "0"
        },
        {
            "DEPT_NAME": "中医外科门诊(新)",
            "DEPT_CODE": "200304",
            "FULL_UPPER_SPELL": "ZHONGYIWAIKEMENZHEN(XIN)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "32"
        },
        {
            "DEPT_NAME": "营养科门诊",
            "DEPT_CODE": "04000303",
            "FULL_UPPER_SPELL": "YINGYANGKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "0"
        },
        {
            "DEPT_NAME": "心内科门诊",
            "DEPT_CODE": "100104",
            "FULL_UPPER_SPELL": "XINNEIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "7"
        },
        {
            "DEPT_NAME": "呼吸科门诊",
            "DEPT_CODE": "100304",
            "FULL_UPPER_SPELL": "HUXIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "9"
        },
        {
            "DEPT_NAME": "皮肤科门诊",
            "DEPT_CODE": "101104",
            "FULL_UPPER_SPELL": "PIFUKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "7"
        },
        {
            "DEPT_NAME": "耳鼻喉科门诊",
            "DEPT_CODE": "400204",
            "FULL_UPPER_SPELL": "ERBIHOUKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "7"
        },
        {
            "DEPT_NAME": "胰脾肝胆门诊(普三)",
            "DEPT_CODE": "300303",
            "FULL_UPPER_SPELL": "YIPIGANDANMENZHEN(PUSAN)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "血液科门诊",
            "DEPT_CODE": "100204",
            "FULL_UPPER_SPELL": "XUEYEKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "0"
        },
        {
            "DEPT_NAME": "口腔科门诊",
            "DEPT_CODE": "400104",
            "FULL_UPPER_SPELL": "KOUQIANGKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "26"
        },
        {
            "DEPT_NAME": "胃肠门诊(普一)",
            "DEPT_CODE": "300103",
            "FULL_UPPER_SPELL": "WEICHANGMENZHEN(PUYI)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "烧伤科门诊",
            "DEPT_CODE": "301104",
            "FULL_UPPER_SPELL": "SHAOSHANGKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "21"
        },
        {
            "DEPT_NAME": "中医内科门诊(新)",
            "DEPT_CODE": "200204",
            "FULL_UPPER_SPELL": "ZHONGYINEIKEMENZHEN(XIN)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "7"
        },
        {
            "DEPT_NAME": "中医针灸门诊(新)",
            "DEPT_CODE": "200604",
            "FULL_UPPER_SPELL": "ZHONGYIZHENJIUMENZHEN(XIN)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "眼科门诊",
            "DEPT_CODE": "400404",
            "FULL_UPPER_SPELL": "YANKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "9"
        },
        {
            "DEPT_NAME": "肿瘤科门诊",
            "DEPT_CODE": "101303",
            "FULL_UPPER_SPELL": "ZHONGLIUKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "13"
        },
        {
            "DEPT_NAME": "脊柱外科门诊",
            "DEPT_CODE": "302004",
            "FULL_UPPER_SPELL": "JIZHUWAIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "16"
        },
        {
            "DEPT_NAME": "肾内科门诊",
            "DEPT_CODE": "100504",
            "FULL_UPPER_SPELL": "SHENNEIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "0"
        },
        {
            "DEPT_NAME": "小儿科门诊",
            "DEPT_CODE": "100904",
            "FULL_UPPER_SPELL": "XIAOERKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "10"
        },
        {
            "DEPT_NAME": "高压氧门诊",
            "DEPT_CODE": "501001",
            "FULL_UPPER_SPELL": "GAOYAYANGMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "内分泌科门诊",
            "DEPT_CODE": "100404",
            "FULL_UPPER_SPELL": "NEIFENMIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "8"
        },
        {
            "DEPT_NAME": "创伤骨科门诊",
            "DEPT_CODE": "302204",
            "FULL_UPPER_SPELL": "CHUANGSHANGGUKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "13"
        },
        {
            "DEPT_NAME": "妇科门诊",
            "DEPT_CODE": "400307",
            "FULL_UPPER_SPELL": "FUKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "11"
        },
        {
            "DEPT_NAME": "产科门诊",
            "DEPT_CODE": "400308",
            "FULL_UPPER_SPELL": "CHANKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "血管外科门诊(普六)",
            "DEPT_CODE": "301602",
            "FULL_UPPER_SPELL": "XUEGUANWAIKEMENZHEN(PULIU)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "13"
        },
        {
            "DEPT_NAME": "胸外科门诊",
            "DEPT_CODE": "300604",
            "FULL_UPPER_SPELL": "XIONGWAIKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "13"
        },
        {
            "DEPT_NAME": "脑血管病门诊",
            "DEPT_CODE": "410104",
            "FULL_UPPER_SPELL": "NAOXUEGUANBINGMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "24"
        },
        {
            "DEPT_NAME": "中医肿瘤科门诊(新)",
            "DEPT_CODE": "200104",
            "FULL_UPPER_SPELL": "ZHONGYIZHONGLIUKEMENZHEN(XIN)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "15"
        },
        {
            "DEPT_NAME": "放疗科门诊",
            "DEPT_CODE": "500504",
            "FULL_UPPER_SPELL": "FANGLIAOKEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "59"
        },
        {
            "DEPT_NAME": "放射科介入门诊",
            "DEPT_CODE": "500109",
            "FULL_UPPER_SPELL": "FANGSHEKEJIERUMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": "109"
        },
        {
            "DEPT_NAME": "癫痫联合门诊",
            "DEPT_CODE": "101803",
            "FULL_UPPER_SPELL": "DIANXIANLIANHEMENZHEN",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        },
        {
            "DEPT_NAME": "中医推拿门诊(新)",
            "DEPT_CODE": "200605",
            "FULL_UPPER_SPELL": "ZHONGYITUINAMENZHEN(XIN)",
            "HOSPITAL_ID": "210004",
            "AVERAGE_TIME": ""
        }
    ]
}
var queue_dept_info_data=
{
  "total": "1",
  "rows": [
    {
      "DOCTOR_PIC": "http://quyiyuanoss.oss-cn-qingdao.aliyuncs.com/Official/PublicResource/DefaultDoctorPic/doctor_common.png",
      "DOCTOR_TITLE": "正教授",
      "HIS_LIST": "[{\"CAllED_NUMBER\":\"27\",\"CALLED_TIME\":\"2015-04-29 09:07:32.0\"},{\"CAllED_NUMBER\":\"24\",\"CALLED_TIME\":\"2015-04-29 09:02:32.0\"},{\"CAllED_NUMBER\":\"23\",\"CALLED_TIME\":\"2015-04-29 08:57:31.0\"},{\"CAllED_NUMBER\":\"20\",\"CALLED_TIME\":\"2015-04-29 08:52:30.0\"},{\"CAllED_NUMBER\":\"16\",\"CALLED_TIME\":\"2015-04-29 08:47:30.0\"}]",
      "WAIT_TIME": "5",
      "QUEUE_COUNT": "0",
      "TYPE": "0",
      "C_QUEUE_CURRENT_CALL_ID": 0,
      "HOSPITAL_ID": 0,
      "DEPT_CODE": "101004",
      "DEPT_NAME": "传染科门诊",
      "MARK_TYPE": "传染科普通门诊",
      "DOCTOR_NAME": "传染科普通门诊",
      "CURRENT_CALL_NUMBER": "27",
      "QUEUE_PAT_COUNT": "",
      "CURRENT_CALL_TIME": "2015-04-29 09:07:32.0",
      "QUEUE_LAST_NUMBER": "27"
    }
  ]
}